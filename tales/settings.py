"""
Django settings for tales project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/

@changed 2024.12.29, 23:19
"""


import os
import pathlib
import posixpath
import random
# import re
import string
# from dotenv import dotenv_values
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = pathlib.Path(__file__).resolve().parent.parent
# BASE_DIR = pathlib.Path(os.getcwd()).as_posix()
STATIC_PATH = posixpath.join(BASE_DIR, 'static')

# App name

APP_NAME = 'tales'

# Define default site id for `sites.models`
SITE_ID = 1

env = environ.Env(
    # @see local `.dev` file and example in `.dev.SAMPLE`
    # @see https://django-environ.readthedocs.io
    LOCAL=(bool, False),
    DEBUG=(bool, False),
    SECRET_KEY=(str, ''),
    REGISTRATION_SALT=(str, ''),
    DEFAULT_FROM_EMAIL=(str, 'info@tales.march.team'),
    # SENDGRID_API_KEY=(str, ''),
    # STRIPE_PUBLISHABLE_KEY=(str, ''),
    # STRIPE_SECRET_KEY=(str, ''),
    # SLACK_WEBHOOK=(str, ''),
)

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
environ.Env.read_env(os.path.join(BASE_DIR, '.env.local'))
environ.Env.read_env(os.path.join(BASE_DIR, '.env.secure'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
LOCAL = bool(env('LOCAL'))
DEBUG = True if bool(env('DEBUG')) else LOCAL

# Preprocess scss source files with django filters
USE_DJANGO_PREPROCESSORS = False

# Secrets
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = str(env('SECRET_KEY'))
REGISTRATION_SALT = str(env('REGISTRATION_SALT'))
# SENDGRID_API_KEY = str(env('SENDGRID_API_KEY'))
# STRIPE_PUBLISHABLE_KEY = str(env('STRIPE_PUBLISHABLE_KEY'))
# STRIPE_SECRET_KEY = str(env('STRIPE_SECRET_KEY'))
# SLACK_WEBHOOK = str(env('SLACK_WEBHOOK'))

print('App started')
print('LOCAL:', LOCAL)
print('SECRET_KEY:', SECRET_KEY)
print('BASE_DIR:', BASE_DIR)

SECRETS = [
    (SECRET_KEY, 'SECRET_KEY'),
    (REGISTRATION_SALT, 'REGISTRATION_SALT'),
    # (SENDGRID_API_KEY, 'SENDGRID_API_KEY'),
    # (STRIPE_PUBLISHABLE_KEY, 'STRIPE_PUBLISHABLE_KEY'),
    # (STRIPE_SECRET_KEY, 'STRIPE_SECRET_KEY'),
]


def random_string(length: int = 32) -> str:
    possibles = string.ascii_letters + string.digits
    return ''.join(random.sample(possibles, length))


for key, label in SECRETS:
    if not key:
        if LOCAL and key in (SECRET_KEY, REGISTRATION_SALT):
            key = random_string()
        else:
            error_text = f'Error: Environment configuration variable {label} is missing'
            raise Exception(error_text)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_FOLDER = "static/"
STATIC_ROOT = posixpath.join(BASE_DIR, STATIC_FOLDER)
STATIC_URL = posixpath.join("/", STATIC_FOLDER)

MEDIA_FOLDER = "media/"
MEDIA_ROOT = posixpath.join(BASE_DIR, MEDIA_FOLDER)
MEDIA_URL = posixpath.join("/", MEDIA_FOLDER)

# The folder for asset file sources
SRC_FOLDER = "src"
SRC_ROOT = posixpath.join(BASE_DIR, SRC_FOLDER)

ASSETS_FOLDER = "assets/"
ASSETS_ROOT = posixpath.join(SRC_FOLDER, ASSETS_FOLDER)

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like '/home/html/static' or 'C:/www/django/static'.
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

if LOCAL:
    # Add asset file sources to static folders in dev mode to access scss sources via django filters during dev mode time
    STATICFILES_DIRS += (SRC_ROOT,)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "compressor.finders.CompressorFinder",
)

COMPRESS_PRECOMPILERS = (
    ("text/x-scss", "sass --embed-source-map {infile} {outfile}"),
    # Sass installation:
    # - https://sass-lang.com/install/
    # - https://github.com/sass/dart-sass/releases/latest
    # @see https://django-compressor.readthedocs.io/en/stable/settings.html#django.conf.settings.COMPRESS_PRECOMPILERS
)

DEFAULT_HOST = 'tales.march.team'
ALLOWED_HOSTS = [
    DEFAULT_HOST,
]
CSRF_TRUSTED_ORIGINS = [
    'https://' + DEFAULT_HOST,
]

if LOCAL:
    # Allow work with local server in local dev mode
    ALLOWED_HOSTS.append('localhost')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tales.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tales.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
