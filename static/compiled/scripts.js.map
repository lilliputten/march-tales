{"version":3,"file":"scripts.js","mappings":"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","sources":["webpack://march-tales/./src/assets/helpers/CommonHelpers.js","webpack://march-tales/./src/assets/helpers/floatToStr.ts","webpack://march-tales/./src/assets/track-blocks/localTrackInfoDb.ts","webpack://march-tales/./src/assets/track-blocks/TrackInfo.ts","webpack://march-tales/./src/assets/helpers/getJsText.ts","webpack://march-tales/./src/assets/CommonNotify/CommonNotifySingleton.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/ActivePlayerData.ts","webpack://march-tales/./src/assets/helpers/sendApiRequest.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerState.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/HiddenPlayer.ts","webpack://march-tales/./src/assets/track-blocks/tracksPlayer.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerCallbacks.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerClass.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/getActivePlayerDataFromTrackNode.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/floatingPlayer.ts"],"sourcesContent":["// @ts-check\n\nexport function NOOP() {}\n\n/** Compare two arrays with scalar (number, string, boolean) values\n * @param {(number | string | boolean)[]} a1\n * @param {(number | string | boolean)[]} a2\n * @return {boolean}\n */\nexport function compareArrays(a1, a2) {\n  if (!a1 || !a1) {\n    return a1 === a2;\n  }\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  // Compare all the items...\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** getErrorText - Return plain text for error.\n * @param {string|Error|string[]|Error[]} error - Error or errors list.\n * @return {string}\n */\nexport function getErrorText(error) {\n  if (!error) {\n    return;\n  }\n  if (Array.isArray(error)) {\n    return error.map(this.getErrorText.bind(this)).join('\\n');\n  }\n  if (error instanceof Error) {\n    error = error.message;\n  } else if (typeof error !== 'string') {\n    // TODO?\n    error = String(error);\n  }\n  return error;\n}\n\n/** quoteHtmlAttr -- quote all invalid characters for html\n * @param {string} str\n * @param {boolean} [preserveCR]\n */\nexport function quoteHtmlAttr(str, preserveCR) {\n  const crValue = preserveCR ? '&#13;' : '\\n';\n  return (\n    String(str) // Forces the conversion to string\n      .replace(/&/g, '&amp;') // This MUST be the 1st replacement\n      .replace(/'/g, '&apos;') // The 4 other predefined entities, required\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      // You may add other replacements here for HTML only (but it's not\n      // necessary). Or for XML, only if the named entities are defined in its\n      // DTD.\n      .replace(/\\r\\n/g, crValue) // Must be before the next replacement\n      .replace(/[\\r\\n]/g, crValue)\n  );\n}\n\n/** htmlToElement -- Create dom node instance from html string\n * @param {string} html - Html representing a single element\n * @return {HTMLElement}\n */\nexport function htmlToElement(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return /** @type HTMLElement */ (content.firstChild);\n}\n\n/** htmlToElements -- Convert text html representation to HTMLCollection object\n * @param {string|string[]} html\n * @return {HTMLCollection}\n */\nexport function htmlToElements(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return content.children;\n}\n\n/** updateNodeContent -- Replace all inner dom node content.\n * @param {Element} node\n * @param {THtmlContent} content\n */\nexport function updateNodeContent(node, content) {\n  if (!node) {\n    throw new Error('Undefined node to update content');\n  }\n  if (typeof content === 'string') {\n    // Replace with string content...\n    node.innerHTML = content;\n  } else if (Array.isArray(content)) {\n    // Replace multiple elements...\n    node.replaceChildren.apply(node, content);\n  } else {\n    // Replace single element...\n    node.replaceChildren(content);\n  }\n}\n\n/** decodeQuery\n * @param {string | string[]} qs\n * @param {string} [sep]\n * @param {string} [eq]\n * @param {any} [options]\n * @returns {{}}\n */\nexport function decodeQuery(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  /** @type {Record<string, unknown> | unknown[]} */\n  const obj = {};\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n  const regexp = /\\+/g;\n  qs = qs.split(sep);\n  let maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n  let len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n  for (let i = 0; i < len; ++i) {\n    const x = qs[i].replace(regexp, '%20'),\n      idx = x.indexOf(eq);\n    let kstr, vstr;\n    if (idx >= 0) {\n      kstr = x.substring(0, idx);\n      vstr = x.substring(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n    const k = decodeURIComponent(kstr);\n    const v = decodeURIComponent(vstr);\n    const it = obj[k];\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(it)) {\n      it.push(v);\n    } else {\n      obj[k] = [it, v];\n    }\n  }\n  return obj;\n}\n\n/** parseQuery -- Parse url query string (in form `?xx=yy&...` or `xx=yy&...`)\n * @param {string} search  - Query string\n * @return {Record<string, string>} query - Query object\n */\nexport function parseQuery(search) {\n  if (!search) {\n    return {};\n  }\n  if (search.indexOf('?') === 0) {\n    search = search.substring(1);\n  }\n  return decodeQuery(search);\n}\n\n/** makeQuery\n * @param {Record<string, string | number | boolean> | {}} params\n * @param {{ addQuestionSymbol?: boolean; useEmptyStrings?: boolean; useUndefinedValues?: boolean }} opts\n * @returns {string}\n */\nexport function makeQuery(params, opts = {}) {\n  let url = Object.entries(params)\n    .map(([id, val]) => {\n      const valStr = String(val);\n      if (val == undefined && !opts.useUndefinedValues) {\n        return undefined;\n      }\n      if (valStr === '' && !opts.useEmptyStrings) {\n        return undefined;\n      }\n      return encodeURI(id) + '=' + encodeURI(String(val == undefined ? '' : val));\n    })\n    .filter(Boolean)\n    .join('&');\n  if (opts.addQuestionSymbol && url) {\n    url = '?' + url;\n  }\n  return url;\n}\n\n/** Dynamically load external script\n * @param {string} url\n * @return {Promise<Event>}\n */\nexport function addScript(url) {\n  return new Promise((resolve, reject) => {\n    // document.write('<script src=\"' + url + '\"></script>');\n    const script = document.createElement('script');\n    script.setAttribute('src', url);\n    script.addEventListener('load', resolve);\n    script.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load script resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addScript]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(script);\n  });\n}\n\n/** Dynamically load external css\n * @param {string} url\n * @return {Promise<unknown>}\n */\nexport function addCssStyle(url) {\n  return new Promise((resolve, reject) => {\n    // Try to find exists node...\n    const testNode = document.head.querySelector(\n      'link[href=\"' + url + '\"], link[data-url=\"' + url + '\"]',\n    );\n    if (testNode) {\n      // Style already found!\n      return resolve({ type: 'already-loaded', target: testNode });\n    }\n    // reject(new Error('test')); // DEBUG: Test errors catching\n    const node = document.createElement('link');\n    node.setAttribute('href', url);\n    node.setAttribute('type', 'text/css');\n    node.setAttribute('rel', 'stylesheet');\n    node.setAttribute('data-url', url);\n    node.addEventListener('load', resolve);\n    node.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load css resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addCssStyle]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(node);\n  });\n}\n\n/**\n * @param {HTMLSelectElement} node\n * @param {(string|number)[]} values\n */\nexport function setMultipleSelectValues(node, values) {\n  const strValues = values.map(String);\n  const options = Array.from(node.options);\n  options.forEach((item) => {\n    const { value, selected } = item;\n    const isSelected = strValues.includes(value);\n    if (isSelected !== selected) {\n      item.selected = isSelected;\n    }\n  });\n}\n\n/** processMultipleRequestErrors\n * @param {Response[]} resList\n * @return {Error[]}\n */\nexport function processMultipleRequestErrors(resList) {\n  return /** @type {Error[]} */ (\n    resList\n      .map((res) => {\n        if (!res.ok) {\n          return new Error(`Can't load url '${res.url}': ${res.statusText}, ${res.status}`);\n        }\n      })\n      .filter(Boolean)\n  );\n}\n\n/**\n * @param {number} n\n * @param {TNormalizedFloatStrOptions} [opts={}]\n * @returns {string}\n */\nexport function normalizedFloatStr(n, opts = {}) {\n  const {\n    // prettier-ignore\n    fixedPoint = 2,\n    stripFixedZeros = true,\n  } = opts;\n  let str = n.toFixed(fixedPoint);\n  if (stripFixedZeros) {\n    str = str.replace(/\\.*0+$/, '');\n  }\n  return str;\n}\n/**\n * @param {number} size\n * @param {TGetApproxSizeOptions} [opts={}]\n * @returns {[number | string, string]}\n */\nexport function getApproxSize(size, opts = {}) {\n  const { normalize } = opts;\n  const levels = [\n    'B', // Bytes\n    'K', // Kilobytes\n    'M', // Megabytes\n    'G', // Gigabites\n  ];\n  const lastLevel = levels.length - 1;\n  const range = 1024;\n  let level = 0;\n  while (level < lastLevel) {\n    if (size < range) {\n      break;\n    }\n    size /= range;\n    level++;\n  }\n  const currLevelStr = levels[level];\n  /** Result: final number or normalized representation (depends on option's `normalize`)\n   * @type {number | string}\n   */\n  let result = size;\n  if (normalize) {\n    const normalizeOpts = typeof normalize === 'object' ? normalize : undefined;\n    result = normalizedFloatStr(size, normalizeOpts);\n  }\n  return [result, currLevelStr];\n}\n\n/** @param {number} time - Time duration, ms\n * @return {string}\n */\nexport function formatDuration(time) {\n  const sec = time / 1000;\n  const min = sec / 60;\n  const hrs = min / 60;\n  const days = hrs / 24;\n  const srcItems = [\n    // prettier-ignore\n    days,\n    hrs % 24,\n    min % 60,\n    sec % 60,\n  ];\n  const items = srcItems.map(Math.floor).map((val, idx) => {\n    // Not mins and secs and empty...\n    if (idx < 2 && !val) {\n      return undefined;\n    }\n    // Hours, mins, secs...\n    if (idx >= 1) {\n      return String(val).padStart(2, '0');\n    }\n    // Days...\n    if (!idx) {\n      return String(val) + 'd';\n    }\n  });\n  /* console.log('[CommonHelpers:formatDuration]', {\n   *   sec,\n   *   min,\n   *   hrs,\n   *   days,\n   *   items,\n   *   srcItems,\n   *   time,\n   * });\n   */\n  const daysStr = items.shift();\n  return [\n    // prettier-ignore\n    daysStr,\n    items.filter(Boolean).join(':'),\n  ]\n    .filter(Boolean)\n    .join(' ');\n}\n\n/** @param {string} str */\nexport function getAsyncHash(str) {\n  const encoder = new TextEncoder();\n  const buf = encoder.encode(str);\n  return crypto.subtle.digest('SHA-256', buf).then((aryBuf) => {\n    const ary = new Uint8Array(aryBuf);\n    const res = Array.from(ary)\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n    return res;\n  });\n}\n\n/** @param {string} cookieId */\nexport function getCookie(cookieId) {\n  const cookiesStr = document.cookie;\n  const cookiesList = cookiesStr.split(';'); // .map((s) => s.trim().split('='));\n  for (let i = 0; i < cookiesList.length; i++) {\n    const s = cookiesList[i];\n    const [id, val] = s.trim().split('=').map(decodeURIComponent);\n    if (id === cookieId) {\n      return val;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {string} id\n * @param {string} val\n * @param {number} maxAgeSecs -- Seconds of expire period\n */\nexport function setCookie(id, val, maxAgeSecs) {\n  const cookieVal = [id, val || ''].map(encodeURIComponent).join('=');\n  const parts = [\n    // prettier-ignore\n    cookieVal,\n  ];\n  if (maxAgeSecs) {\n    parts.push('max-age=' + maxAgeSecs);\n  }\n  const fullCookie = parts.filter(Boolean).join(';');\n  document.cookie = fullCookie;\n}\n","export function floatToStr(num: number | undefined) {\n  if (!num) {\n    return '0';\n  }\n  if (typeof num === 'string') {\n    if (isNaN(num)) {\n      return '0';\n    }\n    num = Number(num);\n  }\n  return num\n    .toFixed(3)\n    .replace(/(\\.\\d+)0+$/, '$1')\n    .replace(/\\.0+$/, '');\n}\n","import { TrackInfo, trackInfoFromJsonStr, trackInfoToJsonStr } from './TrackInfo';\n\nclass LocalTrackInfoDb {\n  // End-user api\n\n  updatePlayedCount(id: number, playedCount?: number, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      if (isNaN(playedCount)) {\n        trackInfo.playedCount = trackInfo.playedCount ? trackInfo.playedCount + 1 : 1;\n      } else {\n        trackInfo.playedCount = playedCount;\n      }\n      trackInfo.lastPlayed = _now;\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:incrementPlayedCount]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updatePosition(id: number, position: number, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.position = position;\n      trackInfo.lastPlayed = _now; // ???\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:updatePosition]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavorite(id: number, favorite: boolean, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.favorite = favorite;\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      this._toggleInFavoritesIndex(id, favorite);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:setFavorite]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavoritesByTrackIds(ids: number[], now?: number) {\n    const _now = now || Date.now();\n    const index = this._getIndex();\n    index.forEach((id) => {\n      const isFavorite = ids.includes(id);\n      const trackInfo = this.getOrCreate(id);\n      if (trackInfo.favorite !== isFavorite) {\n        trackInfo.favorite = isFavorite;\n        trackInfo.lastUpdated = _now;\n        this.insert(trackInfo);\n      }\n    });\n    this._setFavoritesIndex(ids);\n  }\n\n  save(trackInfo: TrackInfo, now?: number) {\n    try {\n      const _now = now || Date.now();\n      trackInfo.lastPlayed = _now; // ???\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      // const testTrackInfo = await this.getById(id);\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:save]', err.message, {\n        err,\n        trackInfo,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  // Low-level api\n\n  createNewRecord(id: number) {\n    const now = Date.now();\n    const trackInfo: TrackInfo = {\n      id: id, // track.id\n      favorite: false,\n      playedCount: 0, // track.played_count (but only for current user!).\n      position: 0, // position\n      lastUpdated: now, // DateTime.now()\n      lastPlayed: 0, // DateTime.now()\n    };\n    return trackInfo;\n  }\n\n  getOrCreate(id: number) {\n    return this.getById(id) || this.createNewRecord(id);\n  }\n\n  /// Create or update the record. (Returns inserted/updated record id.)\n  insert(trackInfo: TrackInfo) {\n    const { id } = trackInfo;\n    window.localStorage.setItem('trackInfo-' + id, trackInfoToJsonStr(trackInfo));\n    this._addToIndex(id);\n  }\n\n  getFavorites() {\n    return this.getAll().filter((it) => it.favorite);\n  }\n\n  getById(id: number) {\n    const str = window.localStorage.getItem('trackInfo-' + id);\n    if (!str) {\n      return undefined;\n    }\n    return trackInfoFromJsonStr(str);\n  }\n\n  _getFavoritesIndex() {\n    try {\n      const data = window.localStorage.getItem('trackInfoFavoritesIndex');\n      return (data ? JSON.parse(data) : []) as number[];\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setFavoritesIndex(favoritesIndex: number[]) {\n    window.localStorage.setItem('trackInfoFavoritesIndex', JSON.stringify(favoritesIndex));\n  }\n\n  _addToFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (!favoritesIndex.includes(id)) {\n      favoritesIndex.push(id);\n      this._setFavoritesIndex(favoritesIndex);\n    }\n  }\n\n  _removeFromFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (favoritesIndex.includes(id)) {\n      this._setFavoritesIndex(favoritesIndex.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInFavoritesIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToFavoritesIndex(id);\n    } else {\n      this._removeFromFavoritesIndex(id);\n    }\n  }\n\n  _getIndex() {\n    try {\n      const str = window.localStorage.getItem('trackInfoIndex');\n      return (str ? str.split(',').map((v) => (v ? Number(v) : 0)) : []) as number[];\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setIndex(index: number[]) {\n    window.localStorage.setItem('trackInfoIndex', index.join(','));\n  }\n\n  _addToIndex(id: number) {\n    const index = this._getIndex();\n    if (!index.includes(id)) {\n      index.push(id);\n      this._setIndex(index);\n    }\n  }\n\n  _removeFromIndex(id: number) {\n    const index = this._getIndex();\n    if (index.includes(id)) {\n      this._setIndex(index.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToIndex(id);\n    } else {\n      this._removeFromIndex(id);\n    }\n  }\n\n  getAll() {\n    const index = this._getIndex();\n    const list: TrackInfo[] = index\n      .map((id) => {\n        return this.getById(id);\n      })\n      .filter(Boolean);\n    return list;\n  }\n\n  delete(id: number) {\n    window.localStorage.removeItem('trackInfo-' + id);\n    this._removeFromIndex(id);\n  }\n\n  clearAll() {\n    const index = this._getIndex();\n    index.forEach((id) => {\n      window.localStorage.removeItem('trackInfo-' + id);\n    });\n    this._setIndex([]);\n  }\n}\n\n// Create a singleton\nexport const localTrackInfoDb = new LocalTrackInfoDb();\n","import { floatToStr } from '../helpers/floatToStr';\n\nexport interface TrackInfo {\n  id: number; // track.id\n  favorite: boolean;\n  playedCount: number; // track.played_count (but only for current user!).\n  position: number; // position?.inMilliseconds ?? 0\n  lastUpdated: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n  lastPlayed: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n}\n\nexport function trackInfoFromJsonStr(str: string) {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const list = str.split(',');\n    const [\n      // Keep the order!\n      id,\n      favorite,\n      playedCount,\n      position,\n      lastUpdated,\n      lastPlayed,\n    ] = list;\n    const data: TrackInfo = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      favorite: Boolean(favorite),\n      playedCount: playedCount ? Number(playedCount) : 0,\n      position: position ? Number(position) : 0,\n      lastUpdated: lastUpdated ? Number(lastUpdated) : 0,\n      lastPlayed: lastPlayed ? Number(lastPlayed) : 0,\n    };\n    /* console.log('[TrackInfo:trackInfoFromJsonStr]', {\n     *   str,\n     *   data,\n     * });\n     */\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[TrackInfo:trackInfoFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nexport function trackInfoToJsonStr(trackInfo: TrackInfo) {\n  const {\n    // Keep the order!\n    id,\n    favorite,\n    playedCount,\n    position,\n    lastUpdated,\n    lastPlayed,\n  } = trackInfo;\n  const list = [\n    // Keep the order!\n    id ? Number(id) : undefined,\n    favorite ? Number(favorite) : undefined,\n    playedCount ? Number(playedCount) : undefined,\n    position ? floatToStr(position) : undefined, // Use fixed decimal presentation for floats\n    lastUpdated ? Number(lastUpdated) : undefined,\n    lastPlayed ? Number(lastPlayed) : undefined,\n  ];\n  return list.join(',').replace(/,+$/, '');\n}\n","import { quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nexport function getJsText(id: string) {\n  const textNode = document.body.querySelector('#js-texts #' + id);\n  if (!textNode) {\n    // eslint-disable-next-line no-console\n    console.warn('[getJsText] Can not find js text node for id:', id);\n  }\n  const text = textNode?.innerHTML || id;\n  return quoteHtmlAttr(text).trim();\n}\n","import * as CommonHelpers from '../helpers/CommonHelpers';\n\n/** Toast types */\ntype TMode = 'info' | 'error' | 'warn' | 'success';\n\n/** Icon shapes (move to constants?) */\nconst icons: Record<TMode, string> = {\n  success: 'bi-check',\n  error: 'bi-exclamation-triangle-fill',\n  warn: 'bi-bell-fill',\n  info: 'bi-info-lg',\n};\n\nconst iconClassNamePrefix = 'bi';\n\ninterface TNotifyData {\n  node: HTMLDivElement;\n  handler?: TSetTimeout;\n}\n\n// Define module...\nclass CommonNotify {\n  notifyRoot: HTMLDivElement = undefined;\n\n  timeoutDelay = 3000;\n\n  inited = false;\n\n  // Methods...\n\n  removeNotify(notifyData: TNotifyData) {\n    const { node, handler } = notifyData;\n    // Play animation...\n    node.classList.remove('active');\n    if (handler) {\n      clearTimeout(handler);\n      notifyData.handler = undefined;\n    }\n    setTimeout(() => {\n      // ...And remove node (TODO: Check if node still exists in dom tree)...\n      try {\n        this.notifyRoot.removeChild(node);\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n    }, 250); // Value of `var(--common-animation-time)`\n  }\n\n  /** showNotify\n   * @param {'info' | 'error' | 'warn' | 'success'} mode - Message type ('info' is default)\n   * @param {string|Error} text - Message content\n   */\n  showNotify(mode: TMode, text: string | Error) {\n    this.ensureInit();\n    if (!text) {\n      // If only one parameters passed assume it as message with default type\n      text = mode;\n      mode = 'info';\n    }\n    let content: string;\n    if (text instanceof Error) {\n      // Convert error object to the plain text...\n      content = CommonHelpers.getErrorText(text);\n    } else {\n      content = String(text);\n    }\n    // Create node...\n    const node = document.createElement('div');\n    node.classList.add('notify');\n    node.classList.add('notify-' + mode);\n    // Add icon...\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon');\n    nodeIcon.classList.add(iconClassNamePrefix);\n    nodeIcon.classList.add(icons[mode]);\n    node.appendChild(nodeIcon);\n    // Add text...\n    const nodeText = document.createElement('div');\n    nodeText.classList.add('text');\n    nodeText.innerHTML = content;\n    node.appendChild(nodeText);\n    this.notifyRoot.appendChild(node);\n    // Play appearing animation...\n    window.requestAnimationFrame(() => {\n      setTimeout(() => {\n        node.classList.add('active');\n      }, 10);\n    });\n    // Remove node after delay...\n    const notifyData: TNotifyData = { node, handler: undefined };\n    const removeNotifyHandler = this.removeNotify.bind(this, notifyData);\n    notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    // Stop & restore timer on mouse in and out events...\n    node.addEventListener('mouseenter', () => {\n      // Clear timer...\n      clearTimeout(notifyData.handler);\n    });\n    node.addEventListener('mouseleave', () => {\n      // Resume timer...\n      notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    });\n    // Click handler...\n    node.addEventListener('click', removeNotifyHandler);\n  }\n\n  // Some shorthands...\n\n  /** @param {string|Error} text - Message content */\n  showInfo(text: string | Error) {\n    this.showNotify('info', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showSuccess(text: string | Error) {\n    this.showNotify('success', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showWarn(text: string | Error) {\n    this.showNotify('warn', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showError(text: string | Error) {\n    this.showNotify('error', text);\n  }\n\n  // Demo...\n\n  showDemo() {\n    // DEBUG: Show sample notifiers...\n    this.showInfo('Info');\n    this.showSuccess('Success');\n    this.showWarn('Warn');\n    this.showError('Error');\n  }\n\n  // Initialization...\n\n  /** Ensure the modal has initiazlized */\n  ensureInit() {\n    this.init();\n  }\n\n  createDomNode() {\n    // TODO: To use bootstrap toasts?\n    const rootNode = document.body;\n    const notifyRoot = document.createElement('div');\n    notifyRoot.classList.add('notify-root');\n    notifyRoot.setAttribute('id', 'notify-root');\n    rootNode.appendChild(notifyRoot);\n    this.notifyRoot = notifyRoot;\n  }\n\n  /** Initialize nodule. */\n  init() {\n    if (!this.inited) {\n      this.createDomNode();\n      this.inited = true;\n    }\n  }\n}\n\n// Create and export singletone\nexport const commonNotify = new CommonNotify();\n\n// commonNotify.init();\n","export interface ActivePlayerData {\n  id: number;\n  title: string;\n  imageUrl: string;\n  mediaUrl: string;\n  duration: number;\n  favorite: boolean;\n}\n\nconst storageActivePlayerDataId = 'ActivePlayerData';\n\nfunction convertActivePlayerDataFromJsonStr(str: string) {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const raw = JSON.parse(str);\n    // const list = str.split(',');\n    const {\n      // Keep the order!\n      id,\n      title,\n      imageUrl,\n      mediaUrl,\n      duration,\n      favorite,\n    } = raw;\n    const data: ActivePlayerData = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      title: title ? String(title) : '',\n      imageUrl: imageUrl ? String(imageUrl) : '',\n      mediaUrl: mediaUrl ? String(mediaUrl) : '',\n      duration: duration ? Number(duration) : 0,\n      favorite: Boolean(favorite),\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[ActivePlayerData:storageActivePlayerDataId] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nfunction convertActivePlayerDataToJsonStr(data: ActivePlayerData) {\n  return JSON.stringify(data);\n}\n\nexport function saveActivePlayerData(data?: ActivePlayerData) {\n  const str = data ? convertActivePlayerDataToJsonStr(data) : '';\n  window.localStorage.setItem(storageActivePlayerDataId, str);\n}\n\nexport function loadActivePlayerData() {\n  const str = window.localStorage.getItem(storageActivePlayerDataId);\n  return convertActivePlayerDataFromJsonStr(str);\n}\n","import { getCookie } from '../helpers/CommonHelpers';\nimport * as CommonHelpers from '../helpers/CommonHelpers';\nimport { getJsText } from './getJsText';\n\nexport function sendApiRequest(\n  url: string,\n  method: string = 'GET',\n  requestData: unknown = undefined,\n) {\n  const csrftoken = getCookie('csrftoken');\n  // const sessionId = getCookie('sessionid');\n  // const url = `/api/v1/tracks/${trackId}/toggle-favorite/`;\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'X-CSRFToken': csrftoken,\n    // Credentials: 'include',\n    // Cookie: csrftoken && `csrftoken=${csrftoken}`,\n    // 'X-Session-Token': sessionId, // X-Session-Token\n    // 'Accept-Language': 'ru', // django_language=ru; content-language: ru;\n  };\n  /* console.log('[sendApiRequest] start', {\n   *   url,\n   *   method,\n   *   requestData,\n   *   headers,\n   * });\n   */\n  return fetch(url, {\n    method,\n    headers,\n    credentials: 'include',\n    body: requestData && JSON.stringify(requestData),\n  })\n    .then(async (res) => {\n      const { ok, status, statusText } = res;\n      // TODO: Check is it json?\n      let data: unknown & { detail?: string };\n      try {\n        data = await res.json();\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n      if (!ok || status !== 200) {\n        const errMsg = [getJsText('fetchError') + ' ' + status, data?.detail || statusText]\n          .filter(Boolean)\n          .join(': ');\n        // eslint-disable-next-line no-console\n        console.error('[sendApiRequest]', errMsg, {\n          ok,\n          data,\n          statusText,\n          status,\n          res,\n          url,\n          requestData,\n          method,\n          headers,\n        });\n        debugger; // eslint-disable-line no-debugger\n        throw new Error(errMsg);\n      }\n      /* console.log('[sendApiRequest] Got json', {\n       *   data,\n       *   url,\n       *   requestData,\n       *   method,\n       *   headers,\n       * });\n       */\n      return data as unknown;\n    })\n    .catch((err) => {\n      const errMsg = [getJsText('failedApiRequest'), CommonHelpers.getErrorText(err)]\n        .filter(Boolean)\n        .join(': ');\n      // eslint-disable-next-line no-console\n      console.error('[sendApiRequest]', errMsg, {\n        err,\n        url,\n        requestData,\n        method,\n        headers,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw new Error(errMsg);\n    });\n}\n","import { floatToStr } from '../../helpers/floatToStr';\n\ntype Status = 'playing' | 'paused' | 'waiting';\n\nexport interface FloatingPlayerState {\n  lastTimestamp?: number;\n  visible?: boolean;\n  loaded?: boolean;\n  status?: Status | undefined;\n  position?: number;\n  progress?: number;\n  error?: string;\n}\n\nconst storageFloatingPlayerStateId = 'FloatingPlayerState';\n\nfunction convertFloatingPlayerStateFromJsonStr(str: string) {\n  if (!str) {\n    return {};\n  }\n  try {\n    const list = str.split(',');\n    const [\n      // Keep the order!\n      lastTimestamp,\n      visible,\n      status,\n      position,\n      progress,\n    ] = list;\n    const data: FloatingPlayerState = {\n      // Keep the order!\n      lastTimestamp: lastTimestamp ? Number(lastTimestamp) : undefined,\n      visible: visible ? Boolean(visible) : undefined,\n      status: status ? (String(status) as Status) : undefined,\n      position: position ? Number(position) : undefined,\n      progress: progress ? Number(progress) : undefined,\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[FloatingPlayerState:convertFloatingPlayerStateFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return {};\n  }\n}\n\nfunction convertFloatingPlayerStateToJsonStr(data: FloatingPlayerState) {\n  const {\n    // Keep the order!\n    lastTimestamp,\n    visible,\n    status,\n    position,\n    progress,\n  } = data;\n  const list = [\n    // Keep the order!\n    lastTimestamp ? Number(lastTimestamp) : undefined,\n    visible ? Number(visible) : undefined, // Boolean\n    status ? status : undefined,\n    position ? floatToStr(position) : undefined,\n    progress ? floatToStr(progress) : undefined,\n  ];\n  const str = list.join(',').replace(/,+$/, '');\n  return str;\n}\n\nexport function saveFloatingPlayerState(data: FloatingPlayerState) {\n  const saveData = { ...data, lastTimestamp: Date.now() };\n  const str = convertFloatingPlayerStateToJsonStr(saveData);\n  window.localStorage.setItem(storageFloatingPlayerStateId, str);\n}\n\nexport function loadFloatingPlayerState() {\n  const str = window.localStorage.getItem(storageFloatingPlayerStateId);\n  return convertFloatingPlayerStateFromJsonStr(str);\n}\n","interface THiddenPlayerOptions {\n  type?: string;\n  src?: string;\n}\n\nexport class HiddenPlayer {\n  hiddenPlayerNode?: HTMLElement;\n  parentDomNode?: HTMLElement;\n\n  audioNode?: HTMLAudioElement;\n  sourceNode?: HTMLSourceElement;\n\n  setParentDomNode(parentDomNode: HTMLElement) {\n    this.parentDomNode = parentDomNode;\n  }\n\n  requireParentDomNode() {\n    return this.parentDomNode || document.body;\n  }\n\n  ensureHiddenPlayer(/* opts: THiddenPlayerOptions = {} */) {\n    if (!this.hiddenPlayerNode) {\n      this.hiddenPlayerNode = document.createElement('div');\n      this.hiddenPlayerNode.classList.add('hidden-player');\n      const audio = document.createElement('audio');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      this.hiddenPlayerNode.appendChild(audio);\n      const parentDomNode = this.requireParentDomNode();\n      parentDomNode.appendChild(this.hiddenPlayerNode);\n    }\n    return this.hiddenPlayerNode;\n  }\n\n  hasAudio() {\n    return !!this.audioNode;\n  }\n\n  hasSource() {\n    return !!this.sourceNode;\n  }\n\n  ensureHiddenPlayerAudio() {\n    if (!this.audioNode) {\n      const parentDomNode = this.requireParentDomNode();\n      this.audioNode = document.createElement('audio');\n      this.audioNode.classList.add('hidden-player');\n      this.audioNode.setAttribute('preload', 'auto');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      parentDomNode.appendChild(this.audioNode);\n    }\n    return this.audioNode;\n  }\n\n  createHiddenPlayerSource(opts: THiddenPlayerOptions = {}) {\n    this.removeHiddenPlayerSource();\n    const audio = this.ensureHiddenPlayerAudio();\n    this.sourceNode = document.createElement('source');\n    this.sourceNode.setAttribute('type', opts.type || 'audio/mpeg');\n    if (opts.src) {\n      this.sourceNode.setAttribute('src', opts.src);\n    }\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event\n    // audio.addEventListener('canplay', this.handleCanPlay.bind(this));\n    // audio.addEventListener('playing', this.handlePlay.bind(this));\n    // audio.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    // audio.addEventListener('ended', this.handleEnded.bind(this));\n    // this.sourceNode.addEventListener('error', this.handleError.bind(this));\n    audio.appendChild(this.sourceNode);\n    return this.sourceNode;\n  }\n\n  removeHiddenPlayerAudio() {\n    if (this.audioNode) {\n      this.audioNode.pause();\n      this.audioNode.remove();\n      this.audioNode = undefined;\n      this.sourceNode = undefined;\n    }\n  }\n\n  removeHiddenPlayerSource() {\n    const audio = this.ensureHiddenPlayerAudio();\n    const prevSources = Array.from(audio.getElementsByTagName('source'));\n    for (const node of prevSources) {\n      node.remove();\n    }\n    this.sourceNode = undefined;\n  }\n}\n","import { formatDuration, quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nimport { localTrackInfoDb } from './localTrackInfoDb';\nimport { floatingPlayer } from '../entities/FloatingPlayer/floatingPlayer';\nimport {\n  FloatingPlayerFavoriteData,\n  FloatingPlayerFavoritesData,\n  FloatingPlayerIncrementData,\n  FloatingPlayerUpdateData,\n} from '../entities/FloatingPlayer/FloatingPlayerCallbacks';\nimport { floatToStr } from '../helpers/floatToStr';\n\nlet allPlayers: NodeListOf<HTMLElement>;\nlet currentTrackPlayer: HTMLElement | undefined = undefined;\n\n// Values for dataset statuses\nconst TRUE = 'true';\n\nfunction calculateAndUpdateTrackPosition(\n  trackNode: HTMLElement,\n  position: number,\n  _isCurrent?: boolean,\n) {\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const { dataset } = trackNode;\n  const { trackId, trackDuration } = dataset;\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  const id = Number(trackId);\n  const duration = parseFloat(trackDuration.replace(',', '.'));\n  if (!duration) {\n    const error = new Error(`No duration provided for a track: ${id}`);\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:updateTrackPosition]', error.message, {\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n  }\n  const ratio = position / duration;\n  const progress = Math.min(100, ratio * 100);\n  requestAnimationFrame(() => {\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  localTrackInfoDb.updatePosition(id, position);\n  // TODO: Update the floating player if isCurrent?\n}\n\nfunction floatingPlayerUpdate(data: FloatingPlayerUpdateData) {\n  const { floatingPlayerState, activePlayerData } = data;\n  const { id } = activePlayerData;\n  let trackNode = currentTrackPlayer;\n  if (!trackNode || Number(trackNode.dataset.trackId) !== id) {\n    trackNode = getTrackNode(id);\n  }\n  if (!trackNode) {\n    return;\n  }\n  // const isCurrent = trackNode === currentTrackPlayer;\n  const { position, progress, status } = floatingPlayerState;\n  const { dataset } = currentTrackPlayer;\n  const timeNode = currentTrackPlayer.querySelector<HTMLElement>('.time');\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  requestAnimationFrame(() => {\n    if (status) {\n      dataset.status = status;\n    } else {\n      delete dataset.status;\n    }\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    currentTrackPlayer.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  // calculateAndUpdateTrackPosition(trackNode, position, isCurrent); // Is it required here?\n  // TODO: Update the floating player if isCurrent?\n}\n\nfunction floatingPlayerPlay(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    throw new Error('Wrong active track id!');\n  }\n  requestAnimationFrame(() => {\n    dataset.status = 'playing';\n  });\n}\n\nfunction floatingPlayerStop(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState, // ???\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    throw new Error('Wrong active track id!');\n  }\n  requestAnimationFrame(() => {\n    delete dataset.status;\n  });\n}\n\nfunction getTrackNode(id: number) {\n  const players = Array.from(allPlayers);\n  const trackNode = players.find((it) => Number(it.dataset.trackId) === id);\n  return trackNode;\n}\n\nfunction stopPreviousPlayer() {\n  if (currentTrackPlayer) {\n    const { dataset } = currentTrackPlayer;\n    requestAnimationFrame(() => {\n      currentTrackPlayer.classList.toggle('current', false);\n      delete dataset.status;\n      delete dataset.loaded;\n      delete dataset.error;\n    });\n  }\n}\n\nfunction updateTrackPlayedCount(\n  trackNode: HTMLElement,\n  playedCount?: number,\n  _isCurrent?: boolean,\n) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId);\n  if (!id) {\n    throw new Error('No current track id!');\n  }\n  const updatedTrackInfo = localTrackInfoDb.updatePlayedCount(id, playedCount);\n  const { playedCount: updatedPlayedCount } = updatedTrackInfo;\n  const strValue = quoteHtmlAttr(String(updatedPlayedCount));\n  const valueNode = trackNode.querySelector('#played_count') as HTMLElement;\n  // Update counter in the document...\n  if (valueNode) {\n    const parent = valueNode.closest('.track-played-count[data-played-count]') as HTMLElement;\n    requestAnimationFrame(() => {\n      valueNode.innerText = strValue;\n      if (parent) {\n        parent.dataset.playedCount = strValue;\n      }\n    });\n  }\n  // TODO: Update value in the floating player?\n}\n\nfunction updateIncrementCallback(data: FloatingPlayerIncrementData) {\n  const {\n    count,\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  const trackNode = getTrackNode(activePlayerData.id);\n  const isCurrent = trackNode === currentTrackPlayer;\n  if (trackNode) {\n    updateTrackPlayedCount(trackNode, count, isCurrent);\n  }\n}\n\n/** Play button click handler */\nfunction trackPlayHandler(ev: MouseEvent) {\n  const controlNode = ev.currentTarget as HTMLElement;\n  const trackNode = controlNode.closest('.track-player') as HTMLElement;\n  // Reset previous player\n  if (currentTrackPlayer && currentTrackPlayer !== trackNode) {\n    stopPreviousPlayer();\n  }\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n\n  const playingId = floatingPlayer.getActiveTrackId();\n  const isFloatingPlaying = floatingPlayer.isPlaying();\n  if (isFloatingPlaying) {\n    // Pause playback\n    floatingPlayer.pauseCurrentPlayer();\n    if (playingId === id) {\n      // Return -- just pause current track\n      return;\n    }\n  }\n\n  // Clear all tracks active status?\n  requestAnimationFrame(() => {\n    allPlayers.forEach((it) => {\n      if (it !== trackNode && it.classList.contains('current')) {\n        it.classList.toggle('current', false);\n      }\n    });\n    trackNode.classList.toggle('current', true);\n  });\n\n  currentTrackPlayer = trackNode;\n\n  const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  floatingPlayer.setActiveTrack(trackNode, position);\n\n  floatingPlayer.playCurrentPlayer();\n\n  // Show floating player if has been hidden\n  if (!isFloatingPlaying) {\n    floatingPlayer.showFloatingPlayer();\n  }\n}\n\nfunction updateTrackFavorite(trackNode: HTMLElement, isFavorite: boolean) {\n  const { dataset } = trackNode;\n  const { favorite } = dataset;\n  const isCurrentFavorite = Boolean(favorite);\n  if (isFavorite !== isCurrentFavorite) {\n    requestAnimationFrame(() => {\n      if (isFavorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n    });\n  }\n}\n\nfunction updateSingleFavoriteCallback({ id, favorite }: FloatingPlayerFavoriteData) {\n  const trackNode = getTrackNode(id);\n  if (trackNode) {\n    updateTrackFavorite(trackNode, favorite);\n  }\n}\n\nfunction updateFavoritesCallback({ favorites }: FloatingPlayerFavoritesData) {\n  allPlayers.forEach((trackNode) => {\n    const { dataset } = trackNode;\n    const { trackId } = dataset;\n    const id = Number(trackId);\n    const isFavorite = favorites.includes(id);\n    updateTrackFavorite(trackNode, isFavorite);\n  });\n}\n\nfunction initTrackPlayerNode(trackNode: HTMLElement) {\n  const activePlayerData = floatingPlayer.activePlayerData;\n  const { dataset } = trackNode;\n  const {\n    inited,\n    trackId, // \"1\"\n    trackMediaUrl, // \"/media/samples/gr-400x225.jpg\"\n  } = dataset;\n  const id = Number(trackId || '');\n  if (!id || inited || !trackMediaUrl) {\n    return;\n  }\n  const trackInfo = localTrackInfoDb.getOrCreate(id); // getById(id);\n  if (activePlayerData && activePlayerData.id == id) {\n    currentTrackPlayer = trackNode;\n    requestAnimationFrame(() => {\n      trackNode.classList.toggle('current', true);\n    });\n    floatingPlayerUpdate({ floatingPlayerState: floatingPlayer.state, activePlayerData });\n  } else {\n    // TODO: Update local data (favorite, playedCount) from track node dataset?\n    if (trackInfo.position) {\n      calculateAndUpdateTrackPosition(trackNode, trackInfo.position, false);\n    }\n  }\n  if (!window.isAuthenticated) {\n    if (trackInfo?.favorite) {\n      updateTrackFavorite(trackNode, trackInfo.favorite);\n    }\n  }\n  const controls = trackNode.querySelectorAll<HTMLElement>('.track-control');\n  controls.forEach((node) => {\n    const { dataset } = node;\n    const { inited, controlId } = dataset;\n    if (inited) {\n      return;\n    }\n    if (controlId === 'toggleFavorite') {\n      node.addEventListener('click', () => floatingPlayer.toggleFavoriteById(id));\n    }\n    if (controlId === 'play') {\n      node.addEventListener('click', trackPlayHandler);\n    }\n    dataset.inited = TRUE;\n  });\n  dataset.inited = TRUE;\n}\n\nexport function initTracksPlayerWrapper(domNode: HTMLElement = document.body) {\n  allPlayers = domNode.querySelectorAll<HTMLElement>('.track-player[data-track-media-url]');\n  allPlayers.forEach(initTrackPlayerNode);\n  floatingPlayer.callbacks.addPlayStartCallback(floatingPlayerPlay);\n  floatingPlayer.callbacks.addPlayStopCallback(floatingPlayerStop);\n  floatingPlayer.callbacks.addUpdateCallback(floatingPlayerUpdate);\n  floatingPlayer.callbacks.addIncrementCallback(updateIncrementCallback);\n  floatingPlayer.callbacks.addFavoritesCallback(updateFavoritesCallback);\n  floatingPlayer.callbacks.addFavoriteCallback(updateSingleFavoriteCallback);\n}\n","import { ActivePlayerData } from '../ActivePlayerData/ActivePlayerData';\nimport { FloatingPlayerState } from './FloatingPlayerState';\n\nexport interface FloatingPlayerUpdateData {\n  floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerIncrementData {\n  count?: number;\n  // floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerFavoritesData {\n  favorites: number[];\n}\nexport interface FloatingPlayerFavoriteData {\n  id: number;\n  favorite: boolean;\n  // activePlayerData: ActivePlayerData;\n}\ntype UpdateCallback = (data: FloatingPlayerUpdateData) => void;\ntype IncrementCallback = (data: FloatingPlayerIncrementData) => void;\ntype FavoritesCallback = (data: FloatingPlayerFavoritesData) => void;\ntype FavoriteCallback = (data: FloatingPlayerFavoriteData) => void;\ntype ErrorCallback = (error: Error | string) => void;\n\n// type HandlerId = 'play' | 'stop' | 'time';\nexport class FloatingPlayerCallbacks {\n  onPlayStartCallbacks: UpdateCallback[] = [];\n  onPlayStopCallbacks: UpdateCallback[] = [];\n  onUpdateCallbacks: UpdateCallback[] = [];\n  onIncrementCallbacks: IncrementCallback[] = [];\n  onFavoritesCallbacks: FavoritesCallback[] = [];\n  onFavoriteCallbacks: FavoriteCallback[] = [];\n  onErrorCallbacks: ErrorCallback[] = [];\n\n  // handlers: Record<HandlerId, ErrorCallback[]> = {};\n\n  addPlayStartCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStartCallbacks.includes(cb)) {\n      this.onPlayStartCallbacks.push(cb);\n    }\n  }\n\n  addPlayStopCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStopCallbacks.includes(cb)) {\n      this.onPlayStopCallbacks.push(cb);\n    }\n  }\n\n  addUpdateCallback(cb: UpdateCallback) {\n    if (cb && !this.onUpdateCallbacks.includes(cb)) {\n      this.onUpdateCallbacks.push(cb);\n    }\n  }\n\n  addIncrementCallback(cb: IncrementCallback) {\n    if (cb && !this.onIncrementCallbacks.includes(cb)) {\n      this.onIncrementCallbacks.push(cb);\n    }\n  }\n\n  addFavoriteCallback(cb: FavoriteCallback) {\n    if (cb && !this.onFavoriteCallbacks.includes(cb)) {\n      this.onFavoriteCallbacks.push(cb);\n    }\n  }\n\n  addFavoritesCallback(cb: FavoritesCallback) {\n    if (cb && !this.onFavoritesCallbacks.includes(cb)) {\n      this.onFavoritesCallbacks.push(cb);\n    }\n  }\n\n  addErrorCallback(cb: ErrorCallback) {\n    if (cb && !this.onErrorCallbacks.includes(cb)) {\n      this.onErrorCallbacks.push(cb);\n    }\n  }\n\n  // Invokers\n\n  invokePlayStart(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStartCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokePlayStop(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStopCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeUpdate(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onUpdateCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeIncrement(data: FloatingPlayerIncrementData) {\n    if (data.activePlayerData) {\n      this.onIncrementCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeFavorite(data: FloatingPlayerFavoriteData) {\n    this.onFavoriteCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeFavorites(data: FloatingPlayerFavoritesData) {\n    this.onFavoritesCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeError(error: Error | string) {\n    if (error) {\n      this.onErrorCallbacks.forEach((cb) => {\n        cb(error);\n      });\n    }\n  }\n}\n","import { getJsText } from '../../helpers/getJsText';\nimport { commonNotify } from '../../CommonNotify/CommonNotifySingleton';\nimport { formatDuration, getErrorText } from '../../helpers/CommonHelpers';\nimport { localTrackInfoDb } from '../../track-blocks/localTrackInfoDb';\n\nimport {\n  ActivePlayerData,\n  loadActivePlayerData,\n  saveActivePlayerData,\n} from '../ActivePlayerData/ActivePlayerData';\nimport { getActivePlayerDataFromTrackNode } from '../ActivePlayerData/getActivePlayerDataFromTrackNode';\nimport { sendApiRequest } from '../../helpers/sendApiRequest';\nimport { floatToStr } from '../../helpers/floatToStr';\nimport {\n  FloatingPlayerState,\n  loadFloatingPlayerState,\n  saveFloatingPlayerState,\n} from './FloatingPlayerState';\n\nimport { HiddenPlayer } from './HiddenPlayer';\nimport { FloatingPlayerCallbacks } from './FloatingPlayerCallbacks';\n\n// TODO: Update track title on the language change?\n\nconst TRUE = 'true';\n\n/** A value of forward/backward seek step */\nconst seekTimeSec = 1;\n\nexport class FloatingPlayer {\n  inited = false;\n  callbacks = new FloatingPlayerCallbacks();\n  audio?: HTMLAudioElement;\n  hiddenPlayer: HiddenPlayer = new HiddenPlayer();\n  activePlayerData?: ActivePlayerData;\n  state: FloatingPlayerState = {};\n  domNode?: HTMLElement;\n  incrementing?: boolean;\n  toggling: Record<number, boolean> = {};\n  seeking = false;\n\n  constructor() {\n    this.loadActivePlayerData();\n    this.loadFloatingPlayerState();\n    this.initDomNode();\n    this.updateAll();\n    // Check if it was recently playing...\n    const now = Date.now();\n    if (this.activePlayerData) {\n      this.ensureAudioLoaded();\n      if (\n        this.state.status === 'playing' &&\n        this.state.lastTimestamp &&\n        this.state.lastTimestamp > now - 5000\n      ) {\n        // TODO: Then resume playback...\n        /* console.log('[FloatingPlayerClass:constructor] Start play', {\n         *   activePlayerData: this.activePlayerData,\n         *   state: this.state,\n         * });\n         */\n        // TODO: Care about: `Uncaught (in promise) NotAllowedError: play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD`\n        this.playCurrentPlayer();\n      } else {\n        // Reset the status\n        delete this.state.status;\n      }\n    }\n  }\n\n  requireAudio() {\n    if (!this.audio) {\n      this.audio = this.hiddenPlayer.ensureHiddenPlayerAudio();\n      this.audio.addEventListener('canplay', this.handleAudioCanPlay.bind(this));\n      this.audio.addEventListener('playing', this.handleAudioPlay.bind(this));\n      this.audio.addEventListener('timeupdate', this.handleAudioTimeUpdate.bind(this));\n      this.audio.addEventListener('ended', this.handleAudioEnded.bind(this));\n      // source.addEventListener('error', this.handleAudioSourceError.bind(this));\n    }\n    return this.audio;\n  }\n\n  removeAudio() {\n    this.hiddenPlayer.removeHiddenPlayerAudio();\n    this.audio = undefined;\n  }\n\n  hasAudio() {\n    return !!this.audio;\n  }\n\n  hasAudioSource() {\n    return this.hiddenPlayer.hasSource();\n  }\n\n  requireDomNode() {\n    if (!this.domNode) {\n      this.domNode = document.querySelector<HTMLElement>('.floating-player');\n      this.hiddenPlayer.setParentDomNode(this.domNode);\n    }\n    // TODO: Ensure created dom node?\n    if (!this.domNode) {\n      const error = new Error('No floating player node found');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireDomNode]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.domNode;\n  }\n\n  requireActivePlayerData() {\n    // TODO: Ensure data?\n    if (!this.activePlayerData) {\n      const error = new Error('No active player data set');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireActivePlayerData]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.activePlayerData;\n  }\n\n  // Sync persistent data...\n\n  loadActivePlayerData() {\n    this.activePlayerData = loadActivePlayerData();\n  }\n\n  saveActivePlayerData() {\n    saveActivePlayerData(this.activePlayerData);\n  }\n\n  loadFloatingPlayerState() {\n    this.state = loadFloatingPlayerState();\n  }\n\n  saveFloatingPlayerState() {\n    saveFloatingPlayerState(this.state);\n  }\n\n  // Dom node...\n\n  showFloatingPlayer() {\n    this.state.visible = true;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  hideFloatingPlayer() {\n    this.state.visible = false;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  // Updaters...\n\n  updateActivePlayerDataInDom() {\n    const domNode = this.requireDomNode();\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    const titleNode = domNode.querySelector<HTMLElement>('.title');\n    const durationNode = domNode.querySelector<HTMLElement>('.duration');\n    const imageNode = domNode.querySelector<HTMLElement>('.image');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      titleNode.innerText = activePlayerData.title;\n      durationNode.innerText = formatDuration(Math.floor(activePlayerData.duration * 1000));\n      imageNode.style.backgroundImage = 'url(' + activePlayerData.imageUrl + ')';\n      if (activePlayerData.favorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n      const links = domNode.querySelectorAll<HTMLLinkElement>('.trackLink');\n      links.forEach((it) => {\n        it.setAttribute('href', `/tracks/${id}`);\n      });\n    });\n  }\n\n  updateStateInDom() {\n    const domNode = this.requireDomNode();\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      if (this.state.status) {\n        dataset.status = this.state.status;\n      } else {\n        delete dataset.status;\n      }\n      document.body.classList.toggle('withPlayer', !!this.state.visible);\n    });\n  }\n\n  updatePositionInDom() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      dataset.position = floatToStr(this.state.position);\n      dataset.progress = floatToStr(this.state.progress);\n      domNode.style.setProperty('--progress', dataset.progress);\n      seekBarNode.value = dataset.progress;\n    });\n  }\n\n  calculateProgress() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { position } = this.state;\n    const { id, duration } = activePlayerData;\n    if (!duration) {\n      const error = new Error(`No duration provided for a track: ${id}`);\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:calculateProgress]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    const ratio = position / duration;\n    const progress = Math.min(100, ratio * 100);\n    return progress;\n  }\n\n  updateTrackPosition() {\n    const domNode = this.requireDomNode();\n    const timeNode = domNode.querySelector<HTMLElement>('.time');\n    const activePlayerData = this.requireActivePlayerData();\n    const { position } = this.state;\n    const { id } = activePlayerData;\n    const progress = this.calculateProgress();\n    this.state.progress = progress;\n    this.updatePositionInDom();\n    if (timeNode) {\n      requestAnimationFrame(() => {\n        timeNode.innerText = formatDuration(Math.floor(position * 1000));\n      });\n    }\n    localTrackInfoDb.updatePosition(id, position);\n  }\n\n  updateAll() {\n    if (this.activePlayerData) {\n      this.updateTrackPosition();\n    }\n    this.updateStateInDom();\n    this.updatePositionInDom();\n    if (this.activePlayerData) {\n      this.updateActivePlayerDataInDom();\n    }\n  }\n\n  // Audio handlers...\n\n  handleAudioTimeUpdate(ev: Event) {\n    if (this.seeking) {\n      return;\n    }\n    const currAudio = this.audio;\n    const audio = ev.currentTarget as HTMLAudioElement;\n    if (audio !== currAudio) {\n      return;\n    }\n    const activePlayerData = this.requireActivePlayerData();\n    const {\n      currentTime,\n      // readyState, // DEBUG\n    } = audio;\n    /* // DEBUG\n     * const source = audio.getElementsByTagName('SOURCE')[0] as HTMLSourceElement;\n     * console.log('[FloatingPlayerClass:handleAudioTimeUpdate]', {\n     *   currentTime,\n     *   readyState,\n     *   id: activePlayerData.id,\n     *   activePlayerData,\n     *   src: source.src,\n     *   source,\n     *   thisAudio: currAudio === audio,\n     *   currAudio,\n     *   audio,\n     * });\n     */\n    // TODO: Check loaded status?\n    if (this.state.position != currentTime) {\n      this.state.position = currentTime;\n      this.updateTrackPosition();\n      this.saveFloatingPlayerState();\n      this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n      localTrackInfoDb.updatePosition(activePlayerData.id, currentTime);\n    }\n  }\n\n  handleAudioCanPlay(_ev: Event) {\n    if (!this.state.loaded) {\n      this.state.loaded = true;\n      delete this.state.error;\n    }\n  }\n\n  handleAudioPlay(_ev: Event) {\n    this.state.status = 'playing';\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStart({\n      floatingPlayerState: this.state,\n      activePlayerData: this.activePlayerData,\n    });\n  }\n\n  handleAudioEnded(_ev: Event) {\n    this.incrementPlayedCount();\n    this.state.status = 'paused'; // stopped, ready?\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStop({\n      floatingPlayerState: this.state,\n      activePlayerData: this.activePlayerData,\n    });\n  }\n\n  handleError(err: Error | string) {\n    const errName = err instanceof Error && err.name;\n    // eslint-disable-next-line no-console\n    console.error('[FloatingPlayerClass:handleError]', {\n      err,\n    });\n    if (errName === 'AbortError') {\n      // NOTE: Do nothing on abort\n      return;\n    }\n    debugger; // eslint-disable-line no-debugger\n    this.state.error = getErrorText(err);\n    this.updateStateInDom();\n    commonNotify.showError(err);\n    this.callbacks.invokeError(err);\n  }\n\n  handleAudioSourceError(ev: Event) {\n    const srcElement = ev.currentTarget as HTMLSourceElement;\n    const { src, type } = srcElement;\n    const errMsg = getJsText('errorLoadingAudioFile') + ' ' + src + (type ? `( ${type})` : '');\n    const error = new Error(errMsg);\n    this.handleError(error);\n  }\n\n  /// Active player data\n\n  getActiveTrackId(): number | undefined {\n    return this.activePlayerData ? this.activePlayerData.id : undefined;\n  }\n\n  // Core handlers...\n\n  loadAudio() {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.loaded = false;\n    const source = this.hiddenPlayer.createHiddenPlayerSource({ src: activePlayerData.mediaUrl });\n    source.addEventListener('error', this.handleAudioSourceError.bind(this));\n  }\n\n  isAudioPlaying() {\n    const audio = this.audio;\n    return (\n      !!audio && audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > 2\n    );\n  }\n\n  isPlaying() {\n    return this.state.status === 'playing';\n  }\n\n  pauseCurrentPlayer() {\n    if (this.isAudioPlaying()) {\n      const audio = this.requireAudio();\n      audio.pause();\n    }\n    if (this.isPlaying()) {\n      this.state.status = 'paused';\n      this.updateStateInDom();\n      this.saveFloatingPlayerState();\n    }\n  }\n\n  playCurrentPlayer() {\n    const audio = this.requireAudio();\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.isAudioPlaying()) {\n      return;\n    }\n    if (audio.ended || this.state.position > activePlayerData.duration - 0.1) {\n      // Start from the begining\n      this.state.position = 0;\n      audio.load();\n    }\n    this.updateTrackPosition();\n    this.callbacks.invokeUpdate({\n      floatingPlayerState: this.state,\n      activePlayerData: this.activePlayerData,\n    });\n\n    audio.currentTime = this.state.position || 0;\n    const result = audio.play();\n    result.catch((err) => {\n      if (err.name === 'NotAllowedError') {\n        //  play() failed because the user didn't interact with the document first. -> Just cancel\n        this.state.status = undefined;\n        this.updateStateInDom();\n      } else {\n        this.handleError(err);\n      }\n    });\n  }\n\n  /** Play button click handler */\n  trackPlayHandler(_ev: MouseEvent) {\n    const isPlaying = this.isPlaying();\n    if (isPlaying) {\n      this.pauseCurrentPlayer();\n    } else {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Active player track data...\n\n  ensureAudioLoaded() {\n    if (!this.state.loaded || !this.hasAudio() || !this.hasAudioSource) {\n      this.loadAudio();\n    }\n  }\n\n  setActivePlayerData(activePlayerData: ActivePlayerData, position?: number) {\n    if (this.activePlayerData?.id !== activePlayerData.id) {\n      if (this.activePlayerData && this.isPlaying) {\n        this.pauseCurrentPlayer();\n      }\n      this.state.loaded = false;\n      if (position != null) {\n        this.state.position = position;\n      }\n      this.removeAudio();\n      this.activePlayerData = activePlayerData;\n    }\n    this.saveActivePlayerData();\n    this.updateActivePlayerDataInDom();\n    this.ensureAudioLoaded();\n  }\n\n  setActiveTrack(trackNode: HTMLElement, position?: number) {\n    const activePlayerData = getActivePlayerDataFromTrackNode(trackNode);\n    this.setActivePlayerData(activePlayerData, position);\n  }\n\n  clearActiveData() {\n    this.activePlayerData = undefined;\n    this.hideFloatingPlayer();\n    this.removeAudio();\n  }\n\n  // Update related data\n\n  sendIncrementPlayedCount(id: number) {\n    const url = `/api/v1/tracks/${id}/increment-played-count/`;\n    return sendApiRequest(url, 'POST');\n  }\n\n  incrementPlayedCount() {\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.incrementing) {\n      return;\n    }\n    this.incrementing = true;\n    return this.sendIncrementPlayedCount(activePlayerData.id)\n      .then(({ played_count }: { played_count?: number }) => {\n        if (played_count != null) {\n          // Re-update local data with server data...\n          this.callbacks.invokeIncrement({ count: played_count, activePlayerData });\n        }\n        // TODO: Update other instances of this track on the page (eg, in player, or in other track listings)?\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('[FloatingPlayerClass:incrementPlayedCount:sendIncrementPlayedCount] error', {\n          err,\n        });\n        debugger; // eslint-disable-line no-debugger\n        commonNotify.showError(err);\n        // Increment locally (?)\n        this.callbacks.invokeIncrement({ activePlayerData });\n        throw err;\n      })\n      .finally(() => {\n        this.incrementing = false;\n      });\n  }\n\n  sendToggleFavoriteRequest(id: number, value: boolean) {\n    const url = `/api/v1/tracks/${id}/toggle-favorite/`;\n    return sendApiRequest(url, 'POST', { value });\n  }\n\n  toggleFavorite() {\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    this.toggleFavoriteById(id);\n  }\n\n  toggleFavoriteById(id: number) {\n    if (this.toggling[id]) {\n      return;\n    }\n    const activePlayerData = this.activePlayerData;\n    const isCurrent = id === activePlayerData?.id;\n    const trackInfo = localTrackInfoDb.getById(id);\n    const favorite = !trackInfo.favorite;\n    localTrackInfoDb.updateFavorite(id, favorite);\n    if (isCurrent) {\n      activePlayerData.favorite = favorite;\n      this.updateActivePlayerDataInDom();\n      this.saveActivePlayerData();\n    }\n    this.callbacks.invokeFavorite({ id, favorite });\n    if (window.isAuthenticated) {\n      this.toggling[id] = true;\n      this.sendToggleFavoriteRequest(id, favorite)\n        .then((results: { favorite_track_ids: number[] }) => {\n          const { favorite_track_ids } = results;\n          localTrackInfoDb.updateFavoritesByTrackIds(favorite_track_ids);\n          this.callbacks.invokeFavorites({\n            favorites: favorite_track_ids,\n          });\n          const msgId = favorite ? 'trackAddedToFavorites' : 'trackRemovedFromFavorites';\n          commonNotify.showSuccess(getJsText(msgId));\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.error('[FloatingPlayerClass:toggleFavoriteById] error', {\n            err,\n          });\n          debugger; // eslint-disable-line no-debugger\n          commonNotify.showError(err);\n        })\n        .finally(() => {\n          this.toggling[id] = false;\n        });\n    }\n  }\n\n  seekPosition(position: number) {\n    this.seeking = true;\n    const audio = this.requireAudio();\n    audio.currentTime = position || 0;\n    this.state.position = position;\n    this.updateTrackPosition();\n    this.saveFloatingPlayerState();\n    const activePlayerData = this.requireActivePlayerData();\n    this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n    setTimeout(() => {\n      this.seeking = false;\n    }, 150);\n  }\n\n  seekRewind() {\n    const position = Math.max(0, this.state.position - seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekForward() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    const position = Math.min(duration, this.state.position + seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekBarHandle(ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    if (!duration) {\n      return;\n    }\n    const node = ev.currentTarget as HTMLInputElement;\n    const value = Number(node.value);\n    const position = (value * duration) / 100;\n    this.seekPosition(position);\n    if (!this.isPlaying()) {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Initilization...\n\n  initDomNode() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    if (seekBarNode) {\n      seekBarNode.addEventListener('input', this.seekBarHandle.bind(this));\n    }\n    const hideButton = domNode.querySelector<HTMLButtonElement>('.track-control-hide');\n    if (hideButton) {\n      hideButton.addEventListener('click', this.hideFloatingPlayer.bind(this));\n    }\n    const controls = domNode.querySelectorAll<HTMLButtonElement>('.track-control');\n    controls.forEach((node) => {\n      const { dataset } = node;\n      const { inited, controlId } = dataset;\n      if (inited) {\n        return;\n      }\n      if (controlId === 'rewind') {\n        node.addEventListener('click', this.seekRewind.bind(this));\n      }\n      if (controlId === 'forward') {\n        node.addEventListener('click', this.seekForward.bind(this));\n      }\n      if (controlId === 'toggleFavorite') {\n        node.addEventListener('click', this.toggleFavorite.bind(this));\n      }\n      if (controlId === 'play') {\n        node.addEventListener('click', this.trackPlayHandler.bind(this));\n      }\n      dataset.inited = TRUE;\n    });\n    this.inited = true;\n  }\n}\n","import { ActivePlayerData } from './ActivePlayerData';\n\nexport function getActivePlayerDataFromTrackNode(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n  const favorite = Boolean(dataset.favorite);\n  // const status = dataset.status;\n  const duration = parseFloat((dataset.trackDuration || '0').replace(',', '.'));\n  // const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  const mediaUrl = dataset.trackMediaUrl;\n  const imageNode = trackNode.querySelector<HTMLImageElement>('img.card-img');\n  const imageUrl = imageNode?.getAttribute('src');\n  const titleNode = trackNode.querySelector<HTMLElement>('.post-title');\n  const title = titleNode?.innerHTML;\n  const activePlayerData: ActivePlayerData = {\n    id,\n    title,\n    imageUrl,\n    mediaUrl,\n    duration,\n    favorite,\n  };\n  return activePlayerData;\n}\n","import { FloatingPlayer } from './FloatingPlayerClass';\n\n// Singleton\nexport const floatingPlayer = new FloatingPlayer();\n\nexport function initFloatingPlayer() {\n  // console.log('[floatingPlayer:initFloatingPlayer]');\n}\n"],"names":["getErrorText","error","Array","isArray","map","this","bind","join","Error","message","String","quoteHtmlAttr","str","preserveCR","crValue","replace","formatDuration","time","sec","min","hrs","items","Math","floor","val","idx","padStart","shift","filter","Boolean","floatToStr","num","isNaN","Number","toFixed","localTrackInfoDb","updatePlayedCount","id","playedCount","now","_now","Date","trackInfo","getOrCreate","lastPlayed","lastUpdated","insert","err","console","updatePosition","position","updateFavorite","favorite","_toggleInFavoritesIndex","updateFavoritesByTrackIds","ids","_getIndex","forEach","isFavorite","includes","_setFavoritesIndex","save","createNewRecord","getById","window","localStorage","setItem","undefined","trackInfoToJsonStr","_addToIndex","getFavorites","getAll","it","getItem","list","split","warn","trackInfoFromJsonStr","_getFavoritesIndex","data","JSON","parse","_","favoritesIndex","stringify","_addToFavoritesIndex","push","_removeFromFavoritesIndex","checkId","value","v","_setIndex","index","_removeFromIndex","_toggleInIndex","delete","removeItem","clearAll","getJsText","textNode","document","body","querySelector","innerHTML","trim","icons","success","info","commonNotify","notifyRoot","timeoutDelay","inited","removeNotify","notifyData","node","handler","classList","remove","clearTimeout","setTimeout","removeChild","_e","showNotify","mode","text","content","ensureInit","createElement","add","nodeIcon","appendChild","nodeText","requestAnimationFrame","removeNotifyHandler","addEventListener","showInfo","showSuccess","showWarn","showError","showDemo","init","createDomNode","rootNode","setAttribute","storageActivePlayerDataId","saveActivePlayerData","convertActivePlayerDataToJsonStr","loadActivePlayerData","raw","title","imageUrl","mediaUrl","duration","convertActivePlayerDataFromJsonStr","sendApiRequest","url","method","requestData","headers","Accept","cookieId","cookiesList","cookie","i","length","s","decodeURIComponent","getCookie","fetch","credentials","then","res","ok","status","statusText","json","errMsg","detail","catch","storageFloatingPlayerStateId","saveFloatingPlayerState","lastTimestamp","visible","progress","convertFloatingPlayerStateToJsonStr","loadFloatingPlayerState","convertFloatingPlayerStateFromJsonStr","allPlayers","domNode","setParentDomNode","parentDomNode","requireParentDomNode","ensureHiddenPlayer","hiddenPlayerNode","audio","hasAudio","audioNode","hasSource","sourceNode","ensureHiddenPlayerAudio","createHiddenPlayerSource","opts","removeHiddenPlayerSource","type","src","removeHiddenPlayerAudio","pause","from","getElementsByTagName","onPlayStartCallbacks","onPlayStopCallbacks","onUpdateCallbacks","onIncrementCallbacks","onFavoritesCallbacks","onFavoriteCallbacks","onErrorCallbacks","addPlayStartCallback","cb","addPlayStopCallback","addUpdateCallback","addIncrementCallback","addFavoriteCallback","addFavoritesCallback","addErrorCallback","invokePlayStart","activePlayerData","invokePlayStop","invokeUpdate","invokeIncrement","invokeFavorite","invokeFavorites","invokeError","TRUE","callbacks","FloatingPlayerCallbacks","hiddenPlayer","HiddenPlayer","state","toggling","seeking","initDomNode","updateAll","ensureAudioLoaded","playCurrentPlayer","requireAudio","handleAudioCanPlay","handleAudioPlay","handleAudioTimeUpdate","handleAudioEnded","removeAudio","hasAudioSource","requireDomNode","requireActivePlayerData","showFloatingPlayer","updateStateInDom","hideFloatingPlayer","updateActivePlayerDataInDom","titleNode","durationNode","imageNode","dataset","innerText","style","backgroundImage","querySelectorAll","toggle","updatePositionInDom","seekBarNode","setProperty","calculateProgress","ratio","updateTrackPosition","timeNode","ev","currAudio","currentTarget","currentTime","floatingPlayerState","_ev","loaded","incrementPlayedCount","handleError","errName","name","handleAudioSourceError","srcElement","getActiveTrackId","loadAudio","isAudioPlaying","paused","ended","readyState","isPlaying","pauseCurrentPlayer","load","play","trackPlayHandler","setActivePlayerData","setActiveTrack","trackNode","trackId","parseFloat","trackDuration","trackMediaUrl","getAttribute","getActivePlayerDataFromTrackNode","clearActiveData","sendIncrementPlayedCount","incrementing","played_count","count","finally","sendToggleFavoriteRequest","toggleFavorite","toggleFavoriteById","isCurrent","isAuthenticated","results","favorite_track_ids","favorites","msgId","seekPosition","seekRewind","max","seekForward","seekBarHandle","hideButton","controlId","floatingPlayer","FloatingPlayer","currentTrackPlayer","floatingPlayerUpdate","getTrackNode","timeFormatted","floatingPlayerPlay","floatingPlayerStop","find","updateIncrementCallback","updatedPlayedCount","strValue","valueNode","closest","updateTrackPlayedCount","stopPreviousPlayer","playingId","isFloatingPlaying","contains","updateTrackFavorite","isCurrentFavorite","updateSingleFavoriteCallback","updateFavoritesCallback","initTrackPlayerNode","calculateAndUpdateTrackPosition"],"sourceRoot":""}