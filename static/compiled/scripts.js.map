{"version":3,"file":"scripts.js","mappings":"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","sources":["webpack://march-tales/./src/assets/checkProjectVersion.ts","webpack://march-tales/./src/assets/helpers/CommonHelpers.js","webpack://march-tales/./src/assets/helpers/floatToStr.ts","webpack://march-tales/./src/assets/constants/packDelim.ts","webpack://march-tales/./src/assets/track-blocks/TrackInfo.ts","webpack://march-tales/./src/assets/constants/acceptedCookiesId.ts","webpack://march-tales/./src/assets/track-blocks/localTrackInfoDb.ts","webpack://march-tales/./src/assets/helpers/getJsText.ts","webpack://march-tales/./src/assets/CommonNotify/CommonNotifySingleton.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/ActivePlayerData.ts","webpack://march-tales/./src/assets/helpers/sendApiRequest.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerState.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/HiddenPlayer.ts","webpack://march-tales/./src/assets/track-blocks/tracksPlayer.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerCallbacks.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerClass.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/getActivePlayerDataFromTrackNode.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/floatingPlayer.ts","webpack://march-tales/./src/assets/processTextContent.ts","webpack://march-tales/./src/assets/cookies-banner/cookiesBanner.ts","webpack://march-tales/./src/assets/carousel/carousels.ts","webpack://march-tales/./src/assets/index.ts","webpack://march-tales/./src/assets/aos.ts"],"sourcesContent":["/** Get major and minor versions in form '1.2' from a string 'march-tales v.1.2.20 / 2025.02.20 15:22:00 +0300' */\nfunction getMinorVersionFromProjectInfo(info?: string | null) {\n  if (!info) {\n    return undefined;\n  }\n  try {\n    const match = info.match(/^\\S+ v\\.(\\d+\\.\\d+)/);\n    if (match) {\n      const v = match[1];\n      return v;\n    }\n  } catch (\n    _e // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // NOOP\n    return undefined;\n  }\n}\n\nexport function checkProjectVersion() {\n  const oldInfo = window.localStorage.getItem('projectInfo');\n  const newInfo = window.projectInfo;\n  if (newInfo && newInfo !== oldInfo) {\n    const oldVersion = getMinorVersionFromProjectInfo(oldInfo);\n    const newVersion = getMinorVersionFromProjectInfo(newInfo);\n    if (newVersion !== oldVersion) {\n      // TODO: To clear some stored data etc?\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[checkProjectVersion] Project version has changed',\n        newVersion,\n        '<->',\n        oldVersion,\n        {\n          oldInfo,\n          newInfo,\n          oldVersion,\n          newVersion,\n        },\n      );\n      // debugger; // eslint-disable-line no-debugger\n    }\n    window.localStorage.setItem('projectInfo', newInfo);\n  }\n}\n","// @ts-check\n\nexport function NOOP() {}\n\n/** Compare two arrays with scalar (number, string, boolean) values\n * @param {(number | string | boolean)[]} a1\n * @param {(number | string | boolean)[]} a2\n * @return {boolean}\n */\nexport function compareArrays(a1, a2) {\n  if (!a1 || !a1) {\n    return a1 === a2;\n  }\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  // Compare all the items...\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** getErrorText - Return plain text for error.\n * @param {string|Error|string[]|Error[]} error - Error or errors list.\n * @return {string}\n */\nexport function getErrorText(error) {\n  if (!error) {\n    return '';\n  }\n  if (Array.isArray(error)) {\n    return error.map(this.getErrorText.bind(this)).join('\\n');\n  }\n  if (error instanceof Error) {\n    error = error.message;\n  } else if (typeof error !== 'string') {\n    // TODO?\n    error = String(error);\n  }\n  return error;\n}\n\n/** quoteHtmlAttr -- quote all invalid characters for html\n * @param {string} str\n * @param {boolean} [preserveCR]\n */\nexport function quoteHtmlAttr(str, preserveCR) {\n  const crValue = preserveCR ? '&#13;' : '\\n';\n  return (\n    String(str) // Forces the conversion to string\n      .replace(/&/g, '&amp;') // This MUST be the 1st replacement\n      .replace(/'/g, '&apos;') // The 4 other predefined entities, required\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      // You may add other replacements here for HTML only (but it's not\n      // necessary). Or for XML, only if the named entities are defined in its\n      // DTD.\n      .replace(/\\r\\n/g, crValue) // Must be before the next replacement\n      .replace(/[\\r\\n]/g, crValue)\n  );\n}\n\n/** htmlToElement -- Create dom node instance from html string\n * @param {string} html - Html representing a single element\n * @return {HTMLElement}\n */\nexport function htmlToElement(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return /** @type HTMLElement */ (content.firstChild);\n}\n\n/** htmlToElements -- Convert text html representation to HTMLCollection object\n * @param {string|string[]} html\n * @return {HTMLCollection}\n */\nexport function htmlToElements(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return content.children;\n}\n\n/** updateNodeContent -- Replace all inner dom node content.\n * @param {Element} node\n * @param {THtmlContent} content\n */\nexport function updateNodeContent(node, content) {\n  if (!node) {\n    throw new Error('Undefined node to update content');\n  }\n  if (typeof content === 'string') {\n    // Replace with string content...\n    node.innerHTML = content;\n  } else if (Array.isArray(content)) {\n    // Replace multiple elements...\n    node.replaceChildren.apply(node, content);\n  } else {\n    // Replace single element...\n    node.replaceChildren(content);\n  }\n}\n\n/** decodeQuery\n * @param {string | string[]} qs\n * @param {string} [sep]\n * @param {string} [eq]\n * @param {any} [options]\n * @returns {{}}\n */\nexport function decodeQuery(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  /** @type {Record<string, unknown> | unknown[]} */\n  const obj = {};\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n  const regexp = /\\+/g;\n  qs = qs.split(sep);\n  let maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n  let len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n  for (let i = 0; i < len; ++i) {\n    const x = qs[i].replace(regexp, '%20'),\n      idx = x.indexOf(eq);\n    let kstr, vstr;\n    if (idx >= 0) {\n      kstr = x.substring(0, idx);\n      vstr = x.substring(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n    const k = decodeURIComponent(kstr);\n    const v = decodeURIComponent(vstr);\n    const it = obj[k];\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(it)) {\n      it.push(v);\n    } else {\n      obj[k] = [it, v];\n    }\n  }\n  return obj;\n}\n\n/** parseQuery -- Parse url query string (in form `?xx=yy&...` or `xx=yy&...`)\n * @param {string} search  - Query string\n * @return {Record<string, string>} query - Query object\n */\nexport function parseQuery(search) {\n  if (!search) {\n    return {};\n  }\n  if (search.indexOf('?') === 0) {\n    search = search.substring(1);\n  }\n  return decodeQuery(search);\n}\n\n/** makeQuery\n * @param {Record<string, string | number | boolean> | {}} params\n * @param {{ addQuestionSymbol?: boolean; useEmptyStrings?: boolean; useUndefinedValues?: boolean }} opts\n * @returns {string}\n */\nexport function makeQuery(params, opts = {}) {\n  let url = Object.entries(params)\n    .map(([id, val]) => {\n      const valStr = String(val);\n      if (val == undefined && !opts.useUndefinedValues) {\n        return undefined;\n      }\n      if (valStr === '' && !opts.useEmptyStrings) {\n        return undefined;\n      }\n      return encodeURI(id) + '=' + encodeURI(String(val == undefined ? '' : val));\n    })\n    .filter(Boolean)\n    .join('&');\n  if (opts.addQuestionSymbol && url) {\n    url = '?' + url;\n  }\n  return url;\n}\n\n/** Dynamically load external script\n * @param {string} url\n * @return {Promise<Event>}\n */\nexport function addScript(url) {\n  return new Promise((resolve, reject) => {\n    // document.write('<script src=\"' + url + '\"></script>');\n    const script = document.createElement('script');\n    script.setAttribute('src', url);\n    script.addEventListener('load', resolve);\n    script.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load script resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addScript]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(script);\n  });\n}\n\n/** Dynamically load external css\n * @param {string} url\n * @return {Promise<unknown>}\n */\nexport function addCssStyle(url) {\n  return new Promise((resolve, reject) => {\n    // Try to find exists node...\n    const testNode = document.head.querySelector(\n      'link[href=\"' + url + '\"], link[data-url=\"' + url + '\"]',\n    );\n    if (testNode) {\n      // Style already found!\n      return resolve({ type: 'already-loaded', target: testNode });\n    }\n    // reject(new Error('test')); // DEBUG: Test errors catching\n    const node = document.createElement('link');\n    node.setAttribute('href', url);\n    node.setAttribute('type', 'text/css');\n    node.setAttribute('rel', 'stylesheet');\n    node.setAttribute('data-url', url);\n    node.addEventListener('load', resolve);\n    node.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load css resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addCssStyle]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(node);\n  });\n}\n\n/**\n * @param {HTMLSelectElement} node\n * @param {(string|number)[]} values\n */\nexport function setMultipleSelectValues(node, values) {\n  const strValues = values.map(String);\n  const options = Array.from(node.options);\n  options.forEach((item) => {\n    const { value, selected } = item;\n    const isSelected = strValues.includes(value);\n    if (isSelected !== selected) {\n      item.selected = isSelected;\n    }\n  });\n}\n\n/** processMultipleRequestErrors\n * @param {Response[]} resList\n * @return {Error[]}\n */\nexport function processMultipleRequestErrors(resList) {\n  return /** @type {Error[]} */ (\n    resList\n      .map((res) => {\n        if (!res.ok) {\n          return new Error(`Can't load url '${res.url}': ${res.statusText}, ${res.status}`);\n        }\n      })\n      .filter(Boolean)\n  );\n}\n\n/**\n * @param {number} n\n * @param {TNormalizedFloatStrOptions} [opts={}]\n * @returns {string}\n */\nexport function normalizedFloatStr(n, opts = {}) {\n  const {\n    // prettier-ignore\n    fixedPoint = 2,\n    stripFixedZeros = true,\n  } = opts;\n  let str = n.toFixed(fixedPoint);\n  if (stripFixedZeros) {\n    str = str.replace(/\\.*0+$/, '');\n  }\n  return str;\n}\n/**\n * @param {number} size\n * @param {TGetApproxSizeOptions} [opts={}]\n * @returns {[number | string, string]}\n */\nexport function getApproxSize(size, opts = {}) {\n  const { normalize } = opts;\n  const levels = [\n    'B', // Bytes\n    'K', // Kilobytes\n    'M', // Megabytes\n    'G', // Gigabites\n  ];\n  const lastLevel = levels.length - 1;\n  const range = 1024;\n  let level = 0;\n  while (level < lastLevel) {\n    if (size < range) {\n      break;\n    }\n    size /= range;\n    level++;\n  }\n  const currLevelStr = levels[level];\n  /** Result: final number or normalized representation (depends on option's `normalize`)\n   * @type {number | string}\n   */\n  let result = size;\n  if (normalize) {\n    const normalizeOpts = typeof normalize === 'object' ? normalize : undefined;\n    result = normalizedFloatStr(size, normalizeOpts);\n  }\n  return [result, currLevelStr];\n}\n\n/** @param {number} time - Time duration, ms\n * @return {string}\n */\nexport function formatDuration(time) {\n  const sec = time / 1000;\n  const min = sec / 60;\n  const hrs = min / 60;\n  const days = hrs / 24;\n  const srcItems = [\n    // prettier-ignore\n    days,\n    hrs % 24,\n    min % 60,\n    sec % 60,\n  ];\n  const items = srcItems.map(Math.floor).map((val, idx) => {\n    // Not mins and secs and empty...\n    if (idx < 2 && !val) {\n      return undefined;\n    }\n    // Hours, mins, secs...\n    if (idx >= 1) {\n      return String(val).padStart(2, '0');\n    }\n    // Days...\n    if (!idx) {\n      return String(val) + 'd';\n    }\n  });\n  /* console.log('[CommonHelpers:formatDuration]', {\n   *   sec,\n   *   min,\n   *   hrs,\n   *   days,\n   *   items,\n   *   srcItems,\n   *   time,\n   * });\n   */\n  const daysStr = items.shift();\n  return [\n    // prettier-ignore\n    daysStr,\n    items.filter(Boolean).join(':'),\n  ]\n    .filter(Boolean)\n    .join(' ');\n}\n\n/** @param {string} str */\nexport function getAsyncHash(str) {\n  const encoder = new TextEncoder();\n  const buf = encoder.encode(str);\n  return crypto.subtle.digest('SHA-256', buf).then((aryBuf) => {\n    const ary = new Uint8Array(aryBuf);\n    const res = Array.from(ary)\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n    return res;\n  });\n}\n\n/** @param {string} cookieId */\nexport function getCookie(cookieId) {\n  const cookiesStr = document.cookie;\n  const cookiesList = cookiesStr.split(';'); // .map((s) => s.trim().split('='));\n  for (let i = 0; i < cookiesList.length; i++) {\n    const s = cookiesList[i];\n    const [id, val] = s.trim().split('=').map(decodeURIComponent);\n    if (id === cookieId) {\n      return val;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {string} id\n * @param {string} val\n * @param {number} [maxAgeSecs] -- Seconds of expire period\n */\nexport function setCookie(id, val, maxAgeSecs) {\n  const cookieVal = [id, val || ''].map(encodeURIComponent).join('=');\n  const parts = [\n    // prettier-ignore\n    cookieVal,\n    'path=/',\n  ];\n  if (maxAgeSecs) {\n    parts.push('max-age=' + maxAgeSecs);\n  }\n  const fullCookie = parts.filter(Boolean).join(';');\n  document.cookie = fullCookie;\n}\n\nexport function deleteAllCookies() {\n  document.cookie.split(';').forEach((cookie) => {\n    const eqPos = cookie.indexOf('=');\n    const name = eqPos > -1 ? cookie.substring(0, eqPos) : cookie;\n    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT';\n  });\n}\n","export function floatToStr(num: number | undefined) {\n  if (!num) {\n    return '0';\n  }\n  if (typeof num === 'string') {\n    if (isNaN(num)) {\n      return '0';\n    }\n    num = Number(num);\n  }\n  return num\n    .toFixed(3)\n    .replace(/(\\.\\d+)0+$/, '$1')\n    .replace(/\\.0+$/, '');\n}\n","// Use dashes to save space in cookies (commas are converted to `%2C`-like entities)\nexport const packDelim = '-';\n","import { floatToStr } from '../helpers/floatToStr';\nimport { packDelim } from '../constants/packDelim';\n\nexport interface TrackInfo {\n  id: number; // track.id\n  favorite: boolean;\n  playedCount: number; // track.played_count (but only for current user!).\n  position: number; // position?.inMilliseconds ?? 0\n  lastUpdated: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n  lastPlayed: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n  lastFavorited: number; // DateTime\n}\n\nconst finalPackDelimReg = new RegExp(packDelim + '+$');\n\nexport function trackInfoFromJsonStr(str: string): TrackInfo | undefined {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const list = str.split(packDelim);\n    const [\n      // Keep the order!\n      id,\n      favorite,\n      playedCount,\n      position,\n      lastUpdated, // Timestamp\n      lastPlayed, // Timestamp\n      lastFavorited,\n    ] = list;\n    const data: TrackInfo = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      favorite: Boolean(favorite),\n      playedCount: playedCount ? Number(playedCount) : 0,\n      position: position ? Number(position) : 0,\n      lastUpdated: lastUpdated ? Number(lastUpdated) * 1000 : 0, // Timestamp\n      lastPlayed: lastPlayed ? Number(lastPlayed) * 1000 : 0, // Timestamp\n      lastFavorited: lastFavorited ? Number(lastFavorited) * 1000 : 0, // Timestamp\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[TrackInfo:trackInfoFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nexport function trackInfoToJsonStr(trackInfo: TrackInfo) {\n  const {\n    // Keep the order!\n    id,\n    favorite,\n    playedCount,\n    position,\n    lastUpdated,\n    lastPlayed,\n    lastFavorited,\n  } = trackInfo;\n  const list = [\n    // Keep the order!\n    id ? Number(id) : undefined,\n    favorite ? Number(favorite) : undefined,\n    playedCount ? Number(playedCount) : undefined,\n    position ? floatToStr(position) : undefined, // Use fixed decimal presentation for floats\n    lastUpdated ? Math.round(lastUpdated / 1000) : undefined, // Timestamp\n    lastPlayed ? Math.round(lastPlayed / 1000) : undefined, // Timestamp\n    lastFavorited ? Math.round(lastFavorited / 1000) : undefined, // Timestamp\n  ];\n  return list.join(packDelim).replace(finalPackDelimReg, '');\n}\n","export const acceptedCookiesId = 'cookies';\n","import { TrackInfo, trackInfoFromJsonStr, trackInfoToJsonStr } from './TrackInfo';\nimport { setCookie } from '../helpers/CommonHelpers';\nimport { packDelim } from '../constants/packDelim';\nimport { acceptedCookiesId } from '../constants/acceptedCookiesId';\n\n/* TODO: Use `new CustomEvent` to broadcast events */\n\nclass LocalTrackInfoDb {\n  // End-user api\n\n  updatePlayedCount(id: number, playedCount?: number, timestamp?: number) {\n    try {\n      const now = Date.now();\n      const trackInfo = this.getOrCreate(id);\n      if (playedCount == undefined || isNaN(playedCount)) {\n        trackInfo.playedCount = trackInfo.playedCount ? trackInfo.playedCount + 1 : 1;\n      } else {\n        trackInfo.playedCount = playedCount;\n      }\n      trackInfo.lastPlayed = timestamp || now;\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:incrementPlayedCount]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updatePosition(id: number, position: number, timestamp?: number) {\n    try {\n      const now = Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.position = position;\n      trackInfo.lastPlayed = timestamp || now; // ???\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:updatePosition]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavorite(id: number, favorite: boolean, timestamp?: number) {\n    try {\n      const now = Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.favorite = favorite;\n      trackInfo.lastFavorited = timestamp || now;\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      this._toggleInFavoritesIndex(id, favorite);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:setFavorite]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavoritesByTrackIds(\n    ids: number[],\n    favoritedTimes?: Record<UserTrack['track_id'], UserTrack['favorited_at_sec']>,\n    timestamp?: number,\n  ) {\n    const now = Date.now();\n    const index = this._getIndex();\n    index.forEach((id) => {\n      const isFavorite = ids.includes(id);\n      const trackInfo = this.getOrCreate(id);\n      if (trackInfo.favorite !== isFavorite) {\n        trackInfo.favorite = isFavorite;\n        trackInfo.lastFavorited = (favoritedTimes && favoritedTimes[id]) || timestamp || now;\n        // TODO: To check if it works correct\n        debugger;\n        trackInfo.lastUpdated = now;\n        this.insert(trackInfo);\n      }\n    });\n    this._setFavoritesIndex(ids);\n  }\n\n  save(trackInfo: TrackInfo, timestamp?: number) {\n    try {\n      const now = Date.now();\n      trackInfo.lastPlayed = timestamp || now; // ???\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      // const testTrackInfo = await this.getById(id);\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:save]', err.message, {\n        err,\n        trackInfo,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  // Low-level api\n\n  createNewRecord(id: number) {\n    const now = Date.now();\n    const trackInfo: TrackInfo = {\n      id: id, // track.id\n      favorite: false,\n      playedCount: 0, // track.played_count (but only for current user!).\n      position: 0, // position\n      lastUpdated: now, // DateTime\n      lastPlayed: 0, // DateTime\n      lastFavorited: 0, // DateTime\n    };\n    return trackInfo;\n  }\n\n  getOrCreate(id: number) {\n    return this.getById(id) || this.createNewRecord(id);\n  }\n\n  /// Create or update the record. (Returns inserted/updated record id.)\n  insert(trackInfo: TrackInfo) {\n    const { id } = trackInfo;\n    const str = trackInfoToJsonStr(trackInfo);\n    window.localStorage.setItem('ti-' + id, str);\n    this._addToIndex(id);\n  }\n\n  getFavorites() {\n    return this.getAll().filter((it) => it.favorite);\n  }\n\n  getById(id: number): TrackInfo | undefined {\n    const str = window.localStorage.getItem('ti-' + id);\n    if (!str) {\n      return undefined;\n    }\n    return trackInfoFromJsonStr(str);\n  }\n\n  _getFavoritesIndex() {\n    try {\n      const str = window.localStorage.getItem('favorites');\n      if (!str) {\n        return [] as number[];\n      }\n      const list = str\n        .split(packDelim)\n        .map(Number)\n        .filter((n) => !isNaN(n)) as number[];\n      return list;\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setFavoritesIndex(favoritesIndex: number[]) {\n    const list = favoritesIndex.filter((n) => !isNaN(n)).filter(Boolean);\n    const str = list.join(packDelim);\n    window.localStorage.setItem('favorites', str);\n    // Update cookie value and document status\n    const favoritesCount = list.length;\n    const hasFavorites = !!favoritesCount;\n    document.body.classList.toggle('has-favorites', hasFavorites);\n    // Update count texts\n    document.querySelectorAll<HTMLElement>('.favorites-count').forEach((node) => {\n      node.innerText = String(favoritesCount);\n    });\n    // Update cookie\n    if (window.localStorage.getItem(acceptedCookiesId)) {\n      setCookie('favorites', str);\n    }\n  }\n\n  _addToFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (!favoritesIndex.includes(id)) {\n      favoritesIndex.push(id);\n      this._setFavoritesIndex(favoritesIndex);\n    }\n  }\n\n  _removeFromFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (favoritesIndex.includes(id)) {\n      this._setFavoritesIndex(favoritesIndex.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInFavoritesIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToFavoritesIndex(id);\n    } else {\n      this._removeFromFavoritesIndex(id);\n    }\n  }\n\n  _getIndex() {\n    try {\n      const str = window.localStorage.getItem('ti-index');\n      return (str ? str.split(packDelim).map((v) => (v ? Number(v) : 0)) : []) as number[];\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setIndex(index: number[]) {\n    window.localStorage.setItem('ti-index', index.join(packDelim));\n  }\n\n  _addToIndex(id: number) {\n    const index = this._getIndex();\n    if (!index.includes(id)) {\n      index.push(id);\n      this._setIndex(index);\n    }\n  }\n\n  _removeFromIndex(id: number) {\n    const index = this._getIndex();\n    if (index.includes(id)) {\n      this._setIndex(index.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToIndex(id);\n    } else {\n      this._removeFromIndex(id);\n    }\n  }\n\n  getAll() {\n    const index = this._getIndex();\n    const list: TrackInfo[] = index\n      .map((id) => {\n        return this.getById(id);\n      })\n      .filter(Boolean) as TrackInfo[];\n    return list;\n  }\n\n  delete(id: number) {\n    window.localStorage.removeItem('ti-' + id);\n    this._removeFromIndex(id);\n  }\n\n  clearAll() {\n    const index = this._getIndex();\n    index.forEach((id) => {\n      window.localStorage.removeItem('ti-' + id);\n    });\n    this._setIndex([]);\n  }\n}\n\n// Create a singleton\nexport const localTrackInfoDb = new LocalTrackInfoDb();\n","import { quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nexport function getJsText(id: string) {\n  const textNode = document.body.querySelector('#js-texts #' + id);\n  if (!textNode) {\n    // eslint-disable-next-line no-console\n    console.warn('[getJsText] Can not find js text node for id:', id);\n  }\n  const text = textNode?.innerHTML || id;\n  return quoteHtmlAttr(text).trim();\n}\n","import * as CommonHelpers from '../helpers/CommonHelpers';\n\n/** Toast types */\ntype TMode = 'info' | 'error' | 'warn' | 'success';\n\n/** Icon shapes (move to constants?) */\nconst icons: Record<TMode, string> = {\n  success: 'bi-check',\n  error: 'bi-exclamation-triangle-fill',\n  warn: 'bi-bell-fill',\n  info: 'bi-info-lg',\n};\n\nconst iconClassNamePrefix = 'bi';\n\ninterface TNotifyData {\n  node: HTMLDivElement;\n  handler?: TSetTimeout;\n}\n\n// Define module...\nclass CommonNotify {\n  notifyRoot?: HTMLDivElement;\n\n  timeoutDelay = 3000;\n\n  inited = false;\n\n  // Methods...\n\n  removeNotify(notifyData: TNotifyData) {\n    const { node, handler } = notifyData;\n    // Play animation...\n    node.classList.remove('active');\n    if (handler) {\n      clearTimeout(handler);\n      notifyData.handler = undefined;\n    }\n    setTimeout(() => {\n      // ...And remove node (TODO: Check if node still exists in dom tree)...\n      try {\n        this.notifyRoot?.removeChild(node);\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n    }, 250); // Value of `var(--common-animation-time)`\n  }\n\n  /** showNotify\n   * @param {'info' | 'error' | 'warn' | 'success'} mode - Message type ('info' is default)\n   * @param {string|Error} text - Message content\n   */\n  showNotify(mode: TMode, text: string | Error) {\n    this.ensureInit();\n    if (!text) {\n      // If only one parameters passed assume it as message with default type\n      text = mode;\n      mode = 'info';\n    }\n    let content: string;\n    if (text instanceof Error) {\n      // Convert error object to the plain text...\n      content = CommonHelpers.getErrorText(text);\n    } else {\n      content = String(text);\n    }\n    // Create node...\n    const node = document.createElement('div');\n    node.classList.add('notify');\n    node.classList.add('notify-' + mode);\n    // Add icon...\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon');\n    nodeIcon.classList.add(iconClassNamePrefix);\n    nodeIcon.classList.add(icons[mode]);\n    node.appendChild(nodeIcon);\n    // Add text...\n    const nodeText = document.createElement('div');\n    nodeText.classList.add('text');\n    nodeText.innerHTML = content;\n    node.appendChild(nodeText);\n    this.notifyRoot?.appendChild(node);\n    // Play appearing animation...\n    window.requestAnimationFrame(() => {\n      setTimeout(() => {\n        node.classList.add('active');\n      }, 10);\n    });\n    // Remove node after delay...\n    const notifyData: TNotifyData = { node, handler: undefined };\n    const removeNotifyHandler = this.removeNotify.bind(this, notifyData);\n    notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    // Stop & restore timer on mouse in and out events...\n    node.addEventListener('mouseenter', () => {\n      // Clear timer...\n      clearTimeout(notifyData.handler);\n    });\n    node.addEventListener('mouseleave', () => {\n      // Resume timer...\n      notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    });\n    // Click handler...\n    node.addEventListener('click', removeNotifyHandler);\n  }\n\n  // Some shorthands...\n\n  /** @param {string|Error} text - Message content */\n  showInfo(text: string | Error) {\n    this.showNotify('info', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showSuccess(text: string | Error) {\n    this.showNotify('success', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showWarn(text: string | Error) {\n    this.showNotify('warn', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showError(text: string | Error) {\n    this.showNotify('error', text);\n  }\n\n  // Demo...\n\n  showDemo() {\n    // DEBUG: Show sample notifiers...\n    this.showInfo('Info');\n    this.showSuccess('Success');\n    this.showWarn('Warn');\n    this.showError('Error');\n  }\n\n  // Initialization...\n\n  /** Ensure the modal has initiazlized */\n  ensureInit() {\n    this.init();\n  }\n\n  createDomNode() {\n    // TODO: To use bootstrap toasts?\n    const rootNode = document.body;\n    const notifyRoot = document.createElement('div');\n    notifyRoot.classList.add('notify-root');\n    notifyRoot.setAttribute('id', 'notify-root');\n    rootNode.appendChild(notifyRoot);\n    this.notifyRoot = notifyRoot;\n  }\n\n  /** Initialize nodule. */\n  init() {\n    if (!this.inited) {\n      this.createDomNode();\n      this.inited = true;\n    }\n  }\n}\n\n// Create and export singletone\nexport const commonNotify = new CommonNotify();\n\n// commonNotify.init();\n","export interface ActivePlayerData {\n  id: number;\n  title: string;\n  imageUrl: string;\n  mediaUrl: string;\n  duration: number;\n  favorite: boolean;\n}\n\nconst storageActivePlayerDataId = 'ActivePlayerData';\n\nfunction convertActivePlayerDataFromJsonStr(str?: string | null) {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const raw = JSON.parse(str);\n    // const list = str.split(',');\n    const {\n      // Keep the order!\n      id,\n      title,\n      imageUrl,\n      mediaUrl,\n      duration,\n      favorite,\n    } = raw;\n    const data: ActivePlayerData = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      title: title ? String(title) : '',\n      imageUrl: imageUrl ? String(imageUrl) : '',\n      mediaUrl: mediaUrl ? String(mediaUrl) : '',\n      duration: duration ? Number(duration) : 0,\n      favorite: Boolean(favorite),\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[ActivePlayerData:storageActivePlayerDataId] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nfunction convertActivePlayerDataToJsonStr(data: ActivePlayerData) {\n  return JSON.stringify(data);\n}\n\nexport function saveActivePlayerData(data?: ActivePlayerData) {\n  const str = data ? convertActivePlayerDataToJsonStr(data) : '';\n  window.localStorage.setItem(storageActivePlayerDataId, str);\n}\n\nexport function loadActivePlayerData() {\n  const str = window.localStorage.getItem(storageActivePlayerDataId);\n  const data = convertActivePlayerDataFromJsonStr(str);\n  return data?.id ? data : undefined;\n}\n","import { getCookie } from '../helpers/CommonHelpers';\nimport * as CommonHelpers from '../helpers/CommonHelpers';\nimport { getJsText } from './getJsText';\n\nexport function sendApiRequest(url: string, method: string = 'GET', requestData?: unknown) {\n  const csrftoken = getCookie('csrftoken');\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'X-CSRFToken': csrftoken || '',\n    // Credentials: 'include',\n    // Cookie: csrftoken && `csrftoken=${csrftoken}`,\n    // 'X-Session-Token': sessionId, // X-Session-Token\n    // 'Accept-Language': 'ru', // django_language=ru; content-language: ru;\n  };\n  return fetch(url, {\n    method,\n    headers,\n    credentials: 'include',\n    body: requestData ? JSON.stringify(requestData) : null,\n  })\n    .then(async (res) => {\n      const { ok, status, statusText } = res;\n      // TODO: Check is it json?\n      let data: (unknown & { detail?: string }) | undefined = undefined;\n      try {\n        data = await res.json();\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n      if (!ok || status !== 200) {\n        const errMsg = [getJsText('fetchError') + ' ' + status, data?.detail || statusText]\n          .filter(Boolean)\n          .join(': ');\n        // eslint-disable-next-line no-console\n        console.error('[sendApiRequest]', errMsg, {\n          ok,\n          data,\n          statusText,\n          status,\n          res,\n          url,\n          requestData,\n          method,\n          headers,\n        });\n        debugger; // eslint-disable-line no-debugger\n        throw new Error(errMsg);\n      }\n      return data as unknown;\n    })\n    .catch((err) => {\n      const errMsg = [getJsText('failedApiRequest'), CommonHelpers.getErrorText(err)]\n        .filter(Boolean)\n        .join(': ');\n      // eslint-disable-next-line no-console\n      console.error('[sendApiRequest]', errMsg, {\n        err,\n        url,\n        requestData,\n        method,\n        headers,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw new Error(errMsg);\n    });\n}\n","import { floatToStr } from '../../helpers/floatToStr';\n\ntype Status = 'playing' | 'paused' | 'waiting';\n\nexport interface FloatingPlayerState {\n  lastTimestamp?: number; // Timestamp\n  visible?: boolean;\n  loaded?: boolean;\n  status?: Status | undefined;\n  position?: number;\n  progress?: number;\n  error?: string;\n}\n\nconst storageFloatingPlayerStateId = 'FloatingPlayerState';\n\nfunction convertFloatingPlayerStateFromJsonStr(str?: string | null) {\n  if (!str) {\n    return {};\n  }\n  try {\n    const list = str.split(',');\n    const [\n      // Keep the order!\n      lastTimestamp,\n      visible,\n      status,\n      position,\n      progress,\n    ] = list;\n    const data: FloatingPlayerState = {\n      // Keep the order!\n      lastTimestamp: lastTimestamp ? Number(lastTimestamp) * 1000 : undefined, // Timestamp\n      visible: visible ? Boolean(visible) : undefined,\n      status: status ? (String(status) as Status) : undefined,\n      position: position ? Number(position) : undefined,\n      progress: progress ? Number(progress) : undefined,\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[FloatingPlayerState:convertFloatingPlayerStateFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return {};\n  }\n}\n\nfunction convertFloatingPlayerStateToJsonStr(data: FloatingPlayerState) {\n  const {\n    // Keep the order!\n    lastTimestamp,\n    visible,\n    status,\n    position,\n    progress,\n  } = data;\n  const list = [\n    // Keep the order!\n    lastTimestamp ? Math.round(lastTimestamp / 1000) : undefined, // Timestamp\n    visible ? Number(visible) : undefined, // Boolean\n    status ? status : undefined,\n    position ? floatToStr(position) : undefined,\n    progress ? floatToStr(progress) : undefined,\n  ];\n  const str = list.join(',').replace(/,+$/, '');\n  return str;\n}\n\nexport function saveFloatingPlayerState(data: FloatingPlayerState) {\n  const saveData = { ...data, lastTimestamp: Date.now() };\n  const str = convertFloatingPlayerStateToJsonStr(saveData);\n  window.localStorage.setItem(storageFloatingPlayerStateId, str);\n}\n\nexport function loadFloatingPlayerState() {\n  const str = window.localStorage.getItem(storageFloatingPlayerStateId);\n  return convertFloatingPlayerStateFromJsonStr(str);\n}\n","interface THiddenPlayerOptions {\n  type?: string;\n  src?: string;\n}\n\nexport class HiddenPlayer {\n  hiddenPlayerNode?: HTMLElement;\n  parentDomNode?: HTMLElement;\n\n  audioNode?: HTMLAudioElement;\n  sourceNode?: HTMLSourceElement;\n\n  setParentDomNode(parentDomNode: HTMLElement) {\n    this.parentDomNode = parentDomNode;\n  }\n\n  requireParentDomNode() {\n    return this.parentDomNode || document.body;\n  }\n\n  ensureHiddenPlayer(/* opts: THiddenPlayerOptions = {} */) {\n    if (!this.hiddenPlayerNode) {\n      this.hiddenPlayerNode = document.createElement('div');\n      this.hiddenPlayerNode.classList.add('hidden-player');\n      const audio = document.createElement('audio');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      this.hiddenPlayerNode.appendChild(audio);\n      const parentDomNode = this.requireParentDomNode();\n      parentDomNode.appendChild(this.hiddenPlayerNode);\n    }\n    return this.hiddenPlayerNode;\n  }\n\n  hasAudio() {\n    return !!this.audioNode;\n  }\n\n  hasSource() {\n    return !!this.sourceNode;\n  }\n\n  ensureHiddenPlayerAudio() {\n    if (!this.audioNode) {\n      const parentDomNode = this.requireParentDomNode();\n      this.audioNode = document.createElement('audio');\n      this.audioNode.classList.add('hidden-player');\n      this.audioNode.setAttribute('preload', 'auto');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      parentDomNode.appendChild(this.audioNode);\n    }\n    return this.audioNode;\n  }\n\n  createHiddenPlayerSource(opts: THiddenPlayerOptions = {}) {\n    this.removeHiddenPlayerSource();\n    const audio = this.ensureHiddenPlayerAudio();\n    this.sourceNode = document.createElement('source');\n    this.sourceNode.setAttribute('type', opts.type || 'audio/mpeg');\n    if (opts.src) {\n      this.sourceNode.setAttribute('src', opts.src);\n    }\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event\n    // audio.addEventListener('canplay', this.handleCanPlay.bind(this));\n    // audio.addEventListener('playing', this.handlePlay.bind(this));\n    // audio.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    // audio.addEventListener('ended', this.handleEnded.bind(this));\n    // this.sourceNode.addEventListener('error', this.handleError.bind(this));\n    audio.appendChild(this.sourceNode);\n    return this.sourceNode;\n  }\n\n  removeHiddenPlayerAudio() {\n    if (this.audioNode) {\n      this.audioNode.pause();\n      this.audioNode.remove();\n      this.audioNode = undefined;\n      this.sourceNode = undefined;\n    }\n  }\n\n  removeHiddenPlayerSource() {\n    const audio = this.ensureHiddenPlayerAudio();\n    const prevSources = Array.from(audio.getElementsByTagName('source'));\n    for (const node of prevSources) {\n      node.remove();\n    }\n    this.sourceNode = undefined;\n  }\n}\n","import { formatDuration, quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nimport { localTrackInfoDb } from './localTrackInfoDb';\nimport { floatingPlayer } from '../entities/FloatingPlayer/floatingPlayer';\nimport {\n  FloatingPlayerFavoriteData,\n  FloatingPlayerFavoritesData,\n  FloatingPlayerIncrementData,\n  FloatingPlayerUpdateData,\n} from '../entities/FloatingPlayer/FloatingPlayerCallbacks';\nimport { floatToStr } from '../helpers/floatToStr';\nimport { TrackInfo } from './TrackInfo';\n\nlet allPlayers: NodeListOf<HTMLElement>;\nlet currentTrackPlayer: HTMLElement | undefined = undefined;\n\n// Values for dataset statuses\nconst TRUE = 'true';\n\nfunction calculateAndUpdateTrackPosition(\n  trackNode: HTMLElement,\n  position: number,\n  isCurrent?: boolean,\n) {\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const { dataset } = trackNode;\n  const { trackId, trackDuration } = dataset;\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  const id = Number(trackId);\n  const duration = trackDuration ? parseFloat(trackDuration.replace(',', '.')) : 0;\n  if (!duration) {\n    const error = new Error(`No duration provided for a track: ${id}`);\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:updateTrackPosition]', error.message, {\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n  }\n  const ratio = position / duration;\n  const progress = Math.min(100, ratio * 100);\n  requestAnimationFrame(() => {\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  localTrackInfoDb.updatePosition(id, position);\n  if (isCurrent) {\n    floatingPlayer.state.position = position;\n    floatingPlayer.state.progress = progress;\n    // floatingPlayer.calculateProgress();\n  }\n  // TODO: Update the floating player if isCurrent?\n  return { position, duration, progress };\n}\n\nfunction floatingPlayerUpdate(data: FloatingPlayerUpdateData) {\n  const { floatingPlayerState, activePlayerData } = data;\n  const { id } = activePlayerData;\n  let trackNode = currentTrackPlayer;\n  if (!trackNode || Number(trackNode.dataset.trackId) !== id) {\n    trackNode = getTrackNode(id);\n  }\n  if (!trackNode) {\n    return;\n  }\n  // const isCurrent = trackNode === currentTrackPlayer;\n  const { position = 0, progress = 0, status } = floatingPlayerState;\n  const { dataset } = trackNode;\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  requestAnimationFrame(() => {\n    if (status) {\n      dataset.status = status;\n    } else {\n      delete dataset.status;\n    }\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  // calculateAndUpdateTrackPosition(trackNode, position, isCurrent); // Is it required here?\n  // TODO: Update the floating player if isCurrent?\n}\n\nfunction floatingPlayerPlay(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    const error = new Error('Wrong active track id!');\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:floatingPlayerPlay]', error.message, {\n      id,\n      'activePlayerData.id': activePlayerData.id,\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n    return;\n  }\n  requestAnimationFrame(() => {\n    dataset.status = 'playing';\n  });\n}\n\nfunction floatingPlayerStop(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState, // ???\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    const error = new Error('Wrong active track id!');\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:floatingPlayerState]', error.message, {\n      id,\n      'activePlayerData.id': activePlayerData.id,\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n    return;\n  }\n  requestAnimationFrame(() => {\n    delete dataset.status;\n  });\n  setTimeout(tryToPlayNextTrack.bind(undefined, currentTrackPlayer), 100);\n}\n\nfunction tryToPlayNextTrack(currentTrackPlayer: HTMLElement) {\n  const thisIdx = Array.from(allPlayers).indexOf(currentTrackPlayer);\n  const nextIdx = (thisIdx + 1) % allPlayers.length;\n  const nextTrackNode = allPlayers[nextIdx];\n  if (!nextTrackNode || nextTrackNode === currentTrackPlayer) {\n    return;\n  }\n  playTrackNode(nextTrackNode);\n}\n\nfunction getTrackNode(id: number) {\n  const players = Array.from(allPlayers);\n  const trackNode = players.find((it) => Number(it.dataset.trackId) === id);\n  return trackNode;\n}\n\nfunction stopPreviousPlayer() {\n  if (currentTrackPlayer) {\n    const { dataset } = currentTrackPlayer;\n    requestAnimationFrame(() => {\n      currentTrackPlayer!.classList.toggle('current', false);\n      delete dataset.status;\n      delete dataset.loaded;\n      delete dataset.error;\n    });\n  }\n}\n\nfunction updateTrackPlayedCount(\n  trackNode: HTMLElement,\n  playedCount?: number,\n  _isCurrent?: boolean,\n) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId);\n  if (!id) {\n    throw new Error('No current track id!');\n  }\n  const updatedTrackInfo = localTrackInfoDb.updatePlayedCount(id, playedCount);\n  const { playedCount: updatedPlayedCount } = updatedTrackInfo;\n  const strValue = quoteHtmlAttr(String(updatedPlayedCount));\n  const valueNode = trackNode.querySelector('#played_count') as HTMLElement;\n  // Update counter in the document...\n  if (valueNode) {\n    const parent = valueNode.closest('.track-played-count[data-played-count]') as HTMLElement;\n    requestAnimationFrame(() => {\n      valueNode.innerText = strValue;\n      if (parent) {\n        parent.dataset.playedCount = strValue;\n      }\n    });\n  }\n  // TODO: Update value in the floating player?\n}\n\nfunction updateIncrementCallback(data: FloatingPlayerIncrementData) {\n  const {\n    count,\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  const trackNode = getTrackNode(activePlayerData.id);\n  const isCurrent = trackNode === currentTrackPlayer;\n  if (trackNode) {\n    updateTrackPlayedCount(trackNode, count, isCurrent);\n  }\n}\n\nfunction playTrackNode(trackNode: HTMLElement) {\n  // Reset previous player\n  if (currentTrackPlayer && currentTrackPlayer !== trackNode) {\n    stopPreviousPlayer();\n  }\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n\n  const playingId = floatingPlayer.getActiveTrackId();\n  const isFloatingPlaying = floatingPlayer.isPlaying();\n  if (isFloatingPlaying) {\n    // Pause playback\n    floatingPlayer.pauseCurrentPlayer();\n    if (playingId === id) {\n      // Return -- just pause current track\n      return;\n    }\n  }\n\n  // Clear all tracks active status?\n  requestAnimationFrame(() => {\n    allPlayers.forEach((it) => {\n      if (it !== trackNode && it.classList.contains('current')) {\n        it.classList.toggle('current', false);\n      }\n    });\n    trackNode.classList.toggle('current', true);\n  });\n\n  currentTrackPlayer = trackNode;\n\n  const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  floatingPlayer.setActiveTrack(trackNode, position);\n\n  floatingPlayer.playCurrentPlayer();\n\n  // Show floating player if has been hidden\n  if (!isFloatingPlaying) {\n    floatingPlayer.showFloatingPlayer();\n  }\n}\n\n/** Play button click handler */\nfunction trackPlayHandler(ev: MouseEvent) {\n  const controlNode = ev.currentTarget as HTMLElement;\n  const trackNode = controlNode.closest('.track-player') as HTMLElement;\n  playTrackNode(trackNode);\n}\n\nfunction updateTrackFavoriteInDataset(trackNode: HTMLElement, isFavorite: boolean) {\n  const { dataset } = trackNode;\n  const { favorite } = dataset;\n  const isCurrentFavorite = Boolean(favorite);\n  if (isFavorite !== isCurrentFavorite) {\n    requestAnimationFrame(() => {\n      if (isFavorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n    });\n  }\n}\n\nfunction updateSingleFavoriteCallback({ id, favorite }: FloatingPlayerFavoriteData) {\n  const trackNode = getTrackNode(id);\n  if (trackNode) {\n    updateTrackFavoriteInDataset(trackNode, favorite);\n  }\n}\n\nfunction updateFavoritesCallback({ favorites }: FloatingPlayerFavoritesData) {\n  allPlayers.forEach((trackNode) => {\n    const { dataset } = trackNode;\n    const { trackId } = dataset;\n    const id = Number(trackId);\n    const isFavorite = favorites.includes(id);\n    updateTrackFavoriteInDataset(trackNode, isFavorite);\n  });\n}\n\nfunction initTrackPlayerNodeControls(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId || '');\n  // Set controls' handlers\n  const controls = trackNode.querySelectorAll<HTMLElement>('.track-control');\n  controls.forEach((node) => {\n    const { dataset } = node;\n    const { inited, controlId } = dataset;\n    if (inited) {\n      return;\n    }\n    if (controlId === 'toggleFavorite') {\n      node.addEventListener('click', () => floatingPlayer.toggleFavoriteById(id));\n    }\n    if (controlId === 'play') {\n      node.addEventListener('click', trackPlayHandler);\n    }\n    dataset.inited = TRUE;\n  });\n  dataset.inited = TRUE;\n}\n\nfunction initTrackPlayerNode(trackNode: HTMLElement) {\n  const activePlayerData = floatingPlayer.activePlayerData;\n  const { dataset } = trackNode;\n  const {\n    inited,\n    trackId, // \"1\"\n    trackMediaUrl, // \"/media/samples/gr-400x225.jpg\"\n    trackTitle,\n    trackDuration,\n    // favorite,\n    favoritedAtSec,\n    favoritedAtDate, // DEBUG\n    playedAtSec,\n    playedAtDate, // DEBUG\n    userPlayedCount,\n    position: positionStr,\n    updatedAtSec,\n    updatedAtDate,\n  } = dataset;\n  const position = positionStr ? parseFloat(positionStr.replace(',', '.')) : 0;\n  const duration = trackDuration ? parseFloat(trackDuration.replace(',', '.')) : 0;\n  const playedAt = isNaN(Number(playedAtSec)) ? undefined : Number(playedAtSec) * 1000;\n  const favoritedAt = isNaN(Number(favoritedAtSec)) ? undefined : Number(favoritedAtSec) * 1000;\n  const updatedAt = isNaN(Number(updatedAtSec)) ? undefined : Number(updatedAtSec) * 1000;\n  const id = Number(trackId || '');\n  if (!id || inited || !trackMediaUrl) {\n    return;\n  }\n  const hasServerData = window.isAuthenticated;\n  const isCurrent = !!activePlayerData && activePlayerData.id == id;\n  const trackInfo: TrackInfo | undefined = localTrackInfoDb.getById(id);\n  const favorite = hasServerData ? Boolean(dataset.favorite) : !!trackInfo?.favorite;\n  console.log('[tracksPlayer:initTrackPlayerNode]', {\n    hasServerData,\n    isCurrent,\n    trackInfo,\n    favorite,\n    id,\n    // trackId, // \"1\"\n    trackMediaUrl, // \"/media/samples/gr-400x225.jpg\"\n    trackTitle,\n    trackDuration,\n    // favorite,\n    userPlayedCount,\n    position,\n    favoritedAt,\n    playedAt,\n    updatedAt,\n    favoritedAtDate,\n    playedAtDate,\n    updatedAtDate,\n    activePlayerData,\n    dataset,\n    trackNode,\n  });\n  if (trackInfo) {\n    if (!hasServerData) {\n      // If no server data then update favorite from the local db\n      if (favorite) {\n        updateTrackFavoriteInDataset(trackNode, trackInfo.favorite);\n      }\n    } else {\n      // Merge server & local data\n      if (dataset.favorite != null && favoritedAt && favoritedAt >= trackInfo.lastFavorited) {\n        trackInfo.favorite = Boolean(dataset.favorite);\n        trackInfo.lastFavorited = favoritedAt;\n        localTrackInfoDb.updateFavorite(id, Boolean(dataset.favorite), favoritedAt);\n      }\n      if (playedAt && playedAt >= trackInfo.lastPlayed) {\n        trackInfo.position = position;\n        trackInfo.lastPlayed = playedAt;\n        localTrackInfoDb.updatePosition(id, position, playedAt);\n        // if (isCurrent) {\n        //   floatingPlayer.state.position = position;\n        //   floatingPlayer.calculateProgress();\n        // }\n      }\n    }\n    // TODO: Get position from the server (dataset)\n    // const {\n    //   duration: calculatedDuration,\n    //   // position,\n    //   // progress,\n    // } = calculateAndUpdateTrackPosition(trackNode, trackInfo.position || 0, isCurrent);\n    calculateAndUpdateTrackPosition(trackNode, trackInfo.position || 0, isCurrent);\n    const playedCount = Number(\n      trackNode.querySelector<HTMLElement>('.track-played-count')?.dataset.playedCount || '0',\n    );\n    // // Update the local db date...\n    // if (isCurrent) {\n    //   activePlayerData.favorite = favorite;\n    //   activePlayerData.duration = calculatedDuration;\n    // }\n    /* TODO: Update local data (favorite, playedCount) from track node dataset?\n     * - id\n     * - favorite\n     * - lastPlayed\n     * - lastUpdated\n     * - playedCount\n     * - position\n     */\n    const hasChangedData = playedCount !== trackInfo.playedCount || favorite !== trackInfo.favorite;\n    if (hasChangedData) {\n      trackInfo.playedCount = playedCount;\n      trackInfo.favorite = favorite;\n      localTrackInfoDb.save(trackInfo);\n    }\n  }\n  if (isCurrent) {\n    activePlayerData.title = dataset.trackTitle || '';\n    activePlayerData.mediaUrl = trackMediaUrl;\n    currentTrackPlayer = trackNode;\n    const img = trackNode.querySelector('.thumb-preview img');\n    const imgUrl = img?.getAttribute('src');\n    if (imgUrl) {\n      activePlayerData.imageUrl = imgUrl;\n    }\n    activePlayerData.duration = duration;\n    activePlayerData.favorite = favorite;\n    if (trackTitle) {\n      activePlayerData.title = trackTitle;\n    }\n    requestAnimationFrame(() => {\n      trackNode.classList.toggle('current', true);\n    });\n    floatingPlayerUpdate({ floatingPlayerState: floatingPlayer.state, activePlayerData });\n    floatingPlayer.saveActivePlayerData();\n    console.log('[tracksPlayer:initTrackPlayerNode]', {\n      id,\n      activePlayerData,\n      dataset,\n      trackMediaUrl,\n      currentTrackPlayer,\n      trackNode,\n      imgUrl,\n      duration,\n      favorite,\n      trackTitle,\n    });\n  }\n  initTrackPlayerNodeControls(trackNode);\n}\n\nexport function initTracksPlayerWrapper(domNode: HTMLElement = document.body) {\n  allPlayers = domNode.querySelectorAll<HTMLElement>('.track-player[data-track-media-url]');\n  allPlayers.forEach(initTrackPlayerNode);\n  floatingPlayer.callbacks.addPlayStartCallback(floatingPlayerPlay);\n  floatingPlayer.callbacks.addPlayStopCallback(floatingPlayerStop);\n  floatingPlayer.callbacks.addUpdateCallback(floatingPlayerUpdate);\n  floatingPlayer.callbacks.addIncrementCallback(updateIncrementCallback);\n  floatingPlayer.callbacks.addFavoritesCallback(updateFavoritesCallback);\n  floatingPlayer.callbacks.addFavoriteCallback(updateSingleFavoriteCallback);\n  floatingPlayer.tracksLoaded();\n}\n","import { ActivePlayerData } from '../ActivePlayerData/ActivePlayerData';\nimport { FloatingPlayerState } from './FloatingPlayerState';\n\nexport interface FloatingPlayerUpdateData {\n  floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerIncrementData {\n  count?: number;\n  // floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerFavoritesData {\n  favorites: number[];\n}\nexport interface FloatingPlayerFavoriteData {\n  id: number;\n  favorite: boolean;\n  // activePlayerData: ActivePlayerData;\n}\ntype UpdateCallback = (data: FloatingPlayerUpdateData) => void;\ntype IncrementCallback = (data: FloatingPlayerIncrementData) => void;\ntype FavoritesCallback = (data: FloatingPlayerFavoritesData) => void;\ntype FavoriteCallback = (data: FloatingPlayerFavoriteData) => void;\ntype ErrorCallback = (error: Error | string) => void;\n\n// type HandlerId = 'play' | 'stop' | 'time';\nexport class FloatingPlayerCallbacks {\n  onPlayStartCallbacks: UpdateCallback[] = [];\n  onPlayStopCallbacks: UpdateCallback[] = [];\n  onUpdateCallbacks: UpdateCallback[] = [];\n  onIncrementCallbacks: IncrementCallback[] = [];\n  onFavoritesCallbacks: FavoritesCallback[] = [];\n  onFavoriteCallbacks: FavoriteCallback[] = [];\n  onErrorCallbacks: ErrorCallback[] = [];\n\n  // handlers: Record<HandlerId, ErrorCallback[]> = {};\n\n  addPlayStartCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStartCallbacks.includes(cb)) {\n      this.onPlayStartCallbacks.push(cb);\n    }\n  }\n\n  addPlayStopCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStopCallbacks.includes(cb)) {\n      this.onPlayStopCallbacks.push(cb);\n    }\n  }\n\n  addUpdateCallback(cb: UpdateCallback) {\n    if (cb && !this.onUpdateCallbacks.includes(cb)) {\n      this.onUpdateCallbacks.push(cb);\n    }\n  }\n\n  addIncrementCallback(cb: IncrementCallback) {\n    if (cb && !this.onIncrementCallbacks.includes(cb)) {\n      this.onIncrementCallbacks.push(cb);\n    }\n  }\n\n  addFavoriteCallback(cb: FavoriteCallback) {\n    if (cb && !this.onFavoriteCallbacks.includes(cb)) {\n      this.onFavoriteCallbacks.push(cb);\n    }\n  }\n\n  addFavoritesCallback(cb: FavoritesCallback) {\n    if (cb && !this.onFavoritesCallbacks.includes(cb)) {\n      this.onFavoritesCallbacks.push(cb);\n    }\n  }\n\n  addErrorCallback(cb: ErrorCallback) {\n    if (cb && !this.onErrorCallbacks.includes(cb)) {\n      this.onErrorCallbacks.push(cb);\n    }\n  }\n\n  // Invokers\n\n  invokePlayStart(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStartCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokePlayStop(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStopCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeUpdate(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onUpdateCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeIncrement(data: FloatingPlayerIncrementData) {\n    if (data.activePlayerData) {\n      this.onIncrementCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeFavorite(data: FloatingPlayerFavoriteData) {\n    this.onFavoriteCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeFavorites(data: FloatingPlayerFavoritesData) {\n    this.onFavoritesCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeError(error: Error | string) {\n    if (error) {\n      this.onErrorCallbacks.forEach((cb) => {\n        cb(error);\n      });\n    }\n  }\n}\n","import { getJsText } from '../../helpers/getJsText';\nimport { commonNotify } from '../../CommonNotify/CommonNotifySingleton';\nimport { formatDuration, getErrorText } from '../../helpers/CommonHelpers';\nimport { localTrackInfoDb } from '../../track-blocks/localTrackInfoDb';\n\nimport {\n  ActivePlayerData,\n  loadActivePlayerData,\n  saveActivePlayerData,\n} from '../ActivePlayerData/ActivePlayerData';\nimport { getActivePlayerDataFromTrackNode } from '../ActivePlayerData/getActivePlayerDataFromTrackNode';\nimport { sendApiRequest } from '../../helpers/sendApiRequest';\nimport { floatToStr } from '../../helpers/floatToStr';\nimport {\n  FloatingPlayerState,\n  loadFloatingPlayerState,\n  saveFloatingPlayerState,\n} from './FloatingPlayerState';\n\nimport { HiddenPlayer } from './HiddenPlayer';\nimport { FloatingPlayerCallbacks } from './FloatingPlayerCallbacks';\n\n// TODO: Update track title on the language change?\n\nconst TRUE = 'true';\n\n/** A value of forward/backward seek step */\nconst seekTimeSec = 1;\n\nexport class FloatingPlayer {\n  inited = false;\n  callbacks = new FloatingPlayerCallbacks();\n  audio?: HTMLAudioElement;\n  hiddenPlayer: HiddenPlayer = new HiddenPlayer();\n  activePlayerData?: ActivePlayerData;\n  state: FloatingPlayerState = {};\n  domNode?: HTMLElement | null;\n  incrementing?: boolean;\n  toggling: Record<number, boolean> = {};\n  seeking = false;\n\n  constructor() {\n    this.loadActivePlayerData();\n    this.loadFloatingPlayerState();\n    this.initDomNode();\n    this.updateAll();\n  }\n\n  tracksLoaded() {\n    // Check if it was recently playing...\n    const now = Date.now();\n    if (this.activePlayerData) {\n      this.ensureAudioLoaded();\n      if (\n        this.state.status === 'playing' &&\n        this.state.lastTimestamp &&\n        this.state.lastTimestamp > now - 5000\n      ) {\n        // Then resume playback...\n        this.playCurrentPlayer();\n        // TODO: Care about: `Uncaught (in promise) NotAllowedError: play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD`\n      } else {\n        // Reset the status\n        delete this.state.status;\n      }\n    }\n  }\n\n  requireAudio() {\n    if (!this.audio) {\n      this.audio = this.hiddenPlayer.ensureHiddenPlayerAudio();\n      this.audio.addEventListener('canplay', this.handleAudioCanPlay.bind(this));\n      this.audio.addEventListener('playing', this.handleAudioPlay.bind(this));\n      this.audio.addEventListener('timeupdate', this.handleAudioTimeUpdate.bind(this));\n      this.audio.addEventListener('ended', this.handleAudioEnded.bind(this));\n      // source.addEventListener('error', this.handleAudioSourceError.bind(this));\n    }\n    return this.audio;\n  }\n\n  removeAudio() {\n    this.hiddenPlayer.removeHiddenPlayerAudio();\n    this.audio = undefined;\n  }\n\n  hasAudio() {\n    return !!this.audio;\n  }\n\n  hasAudioSource() {\n    return this.hiddenPlayer.hasSource();\n  }\n\n  requireDomNode() {\n    if (!this.domNode) {\n      this.domNode = document.querySelector<HTMLElement>('.floating-player');\n      this.hiddenPlayer.setParentDomNode(this.domNode!);\n    }\n    // TODO: Ensure created dom node?\n    if (!this.domNode) {\n      const error = new Error('No floating player node found');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireDomNode]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.domNode;\n  }\n\n  requireActivePlayerData() {\n    // TODO: Ensure data?\n    if (!this.activePlayerData) {\n      const error = new Error('No active player data set');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireActivePlayerData]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.activePlayerData;\n  }\n\n  // Sync persistent data...\n\n  loadActivePlayerData() {\n    this.activePlayerData = loadActivePlayerData();\n  }\n\n  saveActivePlayerData() {\n    saveActivePlayerData(this.activePlayerData);\n  }\n\n  loadFloatingPlayerState() {\n    this.state = loadFloatingPlayerState();\n  }\n\n  saveFloatingPlayerState() {\n    saveFloatingPlayerState(this.state);\n  }\n\n  // Dom node...\n\n  showFloatingPlayer() {\n    this.state.visible = true;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  hideFloatingPlayer() {\n    this.state.visible = false;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  // Updaters...\n\n  updateActivePlayerDataInDom() {\n    const domNode = this.requireDomNode();\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    const titleNode = domNode.querySelector<HTMLElement>('.title');\n    const durationNode = domNode.querySelector<HTMLElement>('.duration');\n    const imageNode = domNode.querySelector<HTMLElement>('.image');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      titleNode!.innerText = activePlayerData.title;\n      durationNode!.innerText = formatDuration(Math.floor(activePlayerData.duration * 1000));\n      imageNode!.style.backgroundImage = 'url(' + activePlayerData.imageUrl + ')';\n      if (activePlayerData.favorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n      const links = domNode.querySelectorAll<HTMLLinkElement>('.trackLink');\n      links.forEach((it) => {\n        it.setAttribute('href', `/tracks/${id}/`);\n      });\n    });\n  }\n\n  updateStateInDom() {\n    const domNode = this.requireDomNode();\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      if (this.state.status) {\n        dataset.status = this.state.status;\n      } else {\n        delete dataset.status;\n      }\n      document.body.classList.toggle('with-player', !!this.state.visible);\n    });\n  }\n\n  updatePositionInDom() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      dataset.position = floatToStr(this.state.position);\n      dataset.progress = floatToStr(this.state.progress);\n      domNode.style.setProperty('--progress', dataset.progress);\n      seekBarNode!.value = dataset.progress;\n    });\n  }\n\n  calculateProgress() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id, duration } = activePlayerData;\n    if (!duration) {\n      const error = new Error(`No duration provided for a track: ${id}`);\n      // eslint-disable-next-line no-console\n      console.warn('[FloatingPlayerClass:calculateProgress]', error.message, {\n        error,\n        id,\n        duration,\n        position,\n        activePlayerData,\n      });\n      debugger; // eslint-disable-line no-debugger\n      // throw error;\n      return 0;\n    }\n    const ratio = position / duration;\n    const progress = Math.min(100, ratio * 100);\n    return progress;\n  }\n\n  updateTrackPosition() {\n    const domNode = this.requireDomNode();\n    const timeNode = domNode.querySelector<HTMLElement>('.time');\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id } = activePlayerData;\n    const progress = this.calculateProgress();\n    this.state.progress = progress;\n    this.updatePositionInDom();\n    if (timeNode) {\n      requestAnimationFrame(() => {\n        timeNode.innerText = formatDuration(Math.floor(position * 1000));\n      });\n    }\n    localTrackInfoDb.updatePosition(id, position);\n  }\n\n  updateAll() {\n    if (this.activePlayerData) {\n      this.updateTrackPosition();\n    }\n    this.updateStateInDom();\n    this.updatePositionInDom();\n    if (this.activePlayerData) {\n      this.updateActivePlayerDataInDom();\n    }\n  }\n\n  // Audio handlers...\n\n  handleAudioTimeUpdate(ev: Event) {\n    if (this.seeking) {\n      return;\n    }\n    const currAudio = this.audio;\n    const audio = ev.currentTarget as HTMLAudioElement;\n    if (audio !== currAudio) {\n      return;\n    }\n    const activePlayerData = this.requireActivePlayerData();\n    const { currentTime } = audio;\n    // TODO: Check loaded status?\n    if (this.state.position != currentTime) {\n      this.state.position = currentTime;\n      this.updateTrackPosition();\n      this.saveFloatingPlayerState();\n      this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n      localTrackInfoDb.updatePosition(activePlayerData.id, currentTime);\n    }\n  }\n\n  handleAudioCanPlay(_ev: Event) {\n    if (!this.state.loaded) {\n      this.state.loaded = true;\n      delete this.state.error;\n    }\n  }\n\n  handleAudioPlay(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.status = 'playing';\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStart({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleAudioEnded(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.incrementPlayedCount();\n    this.state.status = 'paused'; // stopped, ready?\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStop({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleError(err: Error | string) {\n    const errName = err instanceof Error && err.name;\n    // eslint-disable-next-line no-console\n    console.error('[FloatingPlayerClass:handleError]', {\n      err,\n    });\n    if (errName === 'AbortError') {\n      // NOTE: Do nothing on abort\n      return;\n    }\n    debugger; // eslint-disable-line no-debugger\n    this.state.error = getErrorText(err);\n    this.updateStateInDom();\n    commonNotify.showError(err);\n    this.callbacks.invokeError(err);\n  }\n\n  handleAudioSourceError(ev: Event) {\n    const srcElement = ev.currentTarget as HTMLSourceElement;\n    const { src, type } = srcElement;\n    const errMsg = getJsText('errorLoadingAudioFile') + ' ' + src + (type ? `(${type})` : '');\n    const error = new Error(errMsg);\n    this.handleError(error);\n  }\n\n  /// Active player data\n\n  getActiveTrackId(): number | undefined {\n    return this.activePlayerData ? this.activePlayerData.id : undefined;\n  }\n\n  // Core handlers...\n\n  loadAudio() {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.loaded = false;\n    const source = this.hiddenPlayer.createHiddenPlayerSource({ src: activePlayerData.mediaUrl });\n    source.addEventListener('error', this.handleAudioSourceError.bind(this));\n  }\n\n  isAudioPlaying() {\n    const audio = this.audio;\n    return (\n      !!audio && audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > 2\n    );\n  }\n\n  isPlaying() {\n    return this.state.status === 'playing';\n  }\n\n  pauseCurrentPlayer() {\n    if (this.isAudioPlaying()) {\n      const audio = this.requireAudio();\n      audio.pause();\n    }\n    if (this.isPlaying()) {\n      this.state.status = 'paused';\n      this.updateStateInDom();\n      this.saveFloatingPlayerState();\n    }\n  }\n\n  playCurrentPlayer() {\n    const audio = this.requireAudio();\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.isAudioPlaying()) {\n      return;\n    }\n    if (\n      audio.ended ||\n      (this.state.position && this.state.position > activePlayerData.duration - 0.1)\n    ) {\n      // Start from the begining\n      this.state.position = 0;\n      audio.load();\n    }\n    this.updateTrackPosition();\n    this.callbacks.invokeUpdate({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n\n    audio.currentTime = this.state.position || 0;\n    const result = audio.play();\n    result.catch((err) => {\n      if (err.name === 'NotAllowedError') {\n        //  play() failed because the user didn't interact with the document first. -> Just cancel\n        this.state.status = undefined;\n        this.updateStateInDom();\n      } else {\n        this.handleError(err);\n      }\n    });\n  }\n\n  /** Play button click handler */\n  trackPlayHandler(_ev: MouseEvent) {\n    const isPlaying = this.isPlaying();\n    if (isPlaying) {\n      this.pauseCurrentPlayer();\n    } else {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Active player track data...\n\n  ensureAudioLoaded() {\n    if (!this.state.loaded || !this.hasAudio() || !this.hasAudioSource) {\n      this.loadAudio();\n    }\n  }\n\n  setActivePlayerData(activePlayerData: ActivePlayerData, position?: number) {\n    if (this.activePlayerData?.id !== activePlayerData.id) {\n      if (this.activePlayerData && this.isPlaying()) {\n        this.pauseCurrentPlayer();\n      }\n      this.state.loaded = false;\n      if (position != null) {\n        this.state.position = position;\n      }\n      this.removeAudio();\n      this.activePlayerData = activePlayerData;\n    }\n    this.saveActivePlayerData();\n    this.updateActivePlayerDataInDom();\n    this.ensureAudioLoaded();\n  }\n\n  setActiveTrack(trackNode: HTMLElement, position?: number) {\n    const activePlayerData = getActivePlayerDataFromTrackNode(trackNode);\n    this.setActivePlayerData(activePlayerData, position);\n  }\n\n  clearActiveData() {\n    this.activePlayerData = undefined;\n    this.hideFloatingPlayer();\n    this.removeAudio();\n  }\n\n  // Update related data\n\n  sendIncrementPlayedCount(id: number) {\n    const url = `/api/v1/tracks/${id}/increment-played-count/`;\n    return sendApiRequest(url, 'POST');\n  }\n\n  incrementPlayedCount() {\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.incrementing) {\n      return;\n    }\n    this.incrementing = true;\n    return this.sendIncrementPlayedCount(activePlayerData.id)\n      .then(({ played_count }: { played_count?: number }) => {\n        if (played_count != null) {\n          // Re-update local data with server data...\n          this.callbacks.invokeIncrement({ count: played_count, activePlayerData });\n        }\n        // TODO: Update other instances of this track on the page (eg, in player, or in other track listings)?\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('[FloatingPlayerClass:incrementPlayedCount:sendIncrementPlayedCount] error', {\n          err,\n        });\n        debugger; // eslint-disable-line no-debugger\n        commonNotify.showError(err);\n        // Increment locally (?)\n        this.callbacks.invokeIncrement({ activePlayerData });\n        throw err;\n      })\n      .finally(() => {\n        this.incrementing = false;\n      });\n  }\n\n  sendToggleFavoriteRequest(id: number, value: boolean) {\n    const url = `/api/v1/tracks/${id}/toggle-favorite/`;\n    return sendApiRequest(url, 'POST', { value });\n  }\n\n  toggleFavorite() {\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    this.toggleFavoriteById(id);\n  }\n\n  toggleFavoriteById(id: number) {\n    if (this.toggling[id]) {\n      return;\n    }\n    const activePlayerData = this.activePlayerData;\n    const isCurrent = id === activePlayerData?.id;\n    const trackInfo = localTrackInfoDb.getById(id);\n    const expectedFavoriteValue = !trackInfo?.favorite;\n    /* console.log('[FloatingPlayerClass:toggleFavoriteById]', {\n     *   activePlayerData,\n     *   isCurrent,\n     *   trackInfo,\n     *   expectedFavoriteValue,\n     * });\n     */\n    localTrackInfoDb.updateFavorite(id, expectedFavoriteValue);\n    if (isCurrent) {\n      activePlayerData.favorite = expectedFavoriteValue;\n      this.updateActivePlayerDataInDom();\n      this.saveActivePlayerData();\n    }\n    this.callbacks.invokeFavorite({ id, favorite: expectedFavoriteValue });\n    if (window.isAuthenticated) {\n      this.toggling[id] = true;\n      this.sendToggleFavoriteRequest(id, expectedFavoriteValue)\n        .then((results: { favorite_track_ids: number[]; user_tracks: UserTrack[] }) => {\n          const { favorite_track_ids, user_tracks } = results;\n          const trackFavoritedTimes = user_tracks.reduce<Record<UserTrack['track_id'], number>>(\n            (result, userTrack) => {\n              const { track_id, favorited_at_sec } = userTrack;\n              if (track_id && favorited_at_sec) {\n                result[track_id] = favorited_at_sec * 1000; // ms\n              }\n              return result;\n            },\n            {},\n          );\n          /* console.log('[FloatingPlayerClass:toggleFavoriteById] sendToggleFavoriteRequest:then', {\n           *   favorite_track_ids,\n           *   user_tracks,\n           * });\n           */\n          localTrackInfoDb.updateFavoritesByTrackIds(favorite_track_ids, trackFavoritedTimes);\n          this.callbacks.invokeFavorites({\n            favorites: favorite_track_ids,\n          });\n          const msgId = expectedFavoriteValue\n            ? 'trackAddedToFavorites'\n            : 'trackRemovedFromFavorites';\n          commonNotify.showSuccess(getJsText(msgId));\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.error('[FloatingPlayerClass:toggleFavoriteById] error', {\n            err,\n          });\n          debugger; // eslint-disable-line no-debugger\n          commonNotify.showError(err);\n        })\n        .finally(() => {\n          this.toggling[id] = false;\n        });\n    }\n  }\n\n  seekPosition(position: number) {\n    this.seeking = true;\n    const audio = this.requireAudio();\n    audio.currentTime = position || 0;\n    this.state.position = position;\n    this.updateTrackPosition();\n    this.saveFloatingPlayerState();\n    const activePlayerData = this.requireActivePlayerData();\n    this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n    setTimeout(() => {\n      this.seeking = false;\n    }, 150);\n  }\n\n  seekRewind() {\n    const position = Math.max(0, (this.state.position || 0) - seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekForward() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    const position = Math.min(duration, (this.state.position || 0) + seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekBarHandle(ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    if (!duration) {\n      return;\n    }\n    const node = ev.currentTarget as HTMLInputElement;\n    const value = Number(node.value);\n    const position = (value * duration) / 100;\n    this.seekPosition(position);\n    if (!this.isPlaying()) {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Initilization...\n\n  initDomNode() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    if (seekBarNode) {\n      seekBarNode.addEventListener('input', this.seekBarHandle.bind(this));\n    }\n    const hideButton = domNode.querySelector<HTMLButtonElement>('.track-control-hide');\n    if (hideButton) {\n      hideButton.addEventListener('click', this.hideFloatingPlayer.bind(this));\n    }\n    const controls = domNode.querySelectorAll<HTMLButtonElement>('.track-control');\n    controls.forEach((node) => {\n      const { dataset } = node;\n      const { inited, controlId } = dataset;\n      if (inited) {\n        return;\n      }\n      if (controlId === 'rewind') {\n        node.addEventListener('click', this.seekRewind.bind(this));\n      }\n      if (controlId === 'forward') {\n        node.addEventListener('click', this.seekForward.bind(this));\n      }\n      if (controlId === 'toggleFavorite') {\n        node.addEventListener('click', this.toggleFavorite.bind(this));\n      }\n      if (controlId === 'play') {\n        node.addEventListener('click', this.trackPlayHandler.bind(this));\n      }\n      dataset.inited = TRUE;\n    });\n    this.inited = true;\n  }\n}\n","import { ActivePlayerData } from './ActivePlayerData';\n\nexport function getActivePlayerDataFromTrackNode(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n  const favorite = Boolean(dataset.favorite);\n  // const status = dataset.status;\n  const duration = parseFloat((dataset.trackDuration || '0').replace(',', '.'));\n  // const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  const mediaUrl = dataset.trackMediaUrl || '';\n  const imageNode = trackNode.querySelector<HTMLImageElement>('img.card-img');\n  const imageUrl = imageNode?.getAttribute('src') || '';\n  const title = dataset.trackTitle || '';\n  const activePlayerData: ActivePlayerData = {\n    id,\n    title,\n    imageUrl,\n    mediaUrl,\n    duration,\n    favorite,\n  };\n  return activePlayerData;\n}\n","import { FloatingPlayer } from './FloatingPlayerClass';\n\n// Singleton\nexport const floatingPlayer = new FloatingPlayer();\n\nexport function initFloatingPlayer() {\n  // NOOP\n}\n","function processLink(node: HTMLElement) {\n  if (!node.classList.contains('external')) {\n    node.classList.add('external');\n    node.setAttribute('target', '_blank');\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon', 'icon-external', 'bi', 'bi-box-arrow-up-right');\n    node.appendChild(nodeIcon);\n  }\n}\n\nfunction processTextBlock(node: HTMLElement) {\n  // Find external links...\n  const linkNodes = node.querySelectorAll<HTMLLinkElement>('a[href^=\"https://\"]');\n  linkNodes.forEach(processLink);\n}\n\nexport function processTextContent() {\n  const textNodes = document.querySelectorAll<HTMLElement>('.text-content');\n  textNodes.forEach(processTextBlock);\n}\n","import { acceptedCookiesId } from '../constants/acceptedCookiesId';\nimport { deleteAllCookies, setCookie } from '../helpers/CommonHelpers';\n\nfunction updateBannerGeometry(bannerNode: HTMLElement) {\n  const footerNode = document.querySelector<HTMLElement>('.template-footer');\n  if (!bannerNode || !footerNode) {\n    return;\n  }\n  const bannerHeight = bannerNode.clientHeight;\n  footerNode.style.marginBottom = `${bannerHeight}px`;\n}\n\nfunction handleAccept(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = 'allowed';\n  window.localStorage.setItem('cookies', value);\n  setCookie(acceptedCookiesId, value);\n  hideBanner(bannerNode!);\n}\n\nfunction handleReject(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = '';\n  window.localStorage.setItem(acceptedCookiesId, value);\n  deleteAllCookies();\n  setCookie(acceptedCookiesId, '');\n  hideBanner(bannerNode!);\n}\n\nfunction initActiveBanner(bannerNode: HTMLElement) {\n  const eventHandler = updateBannerGeometry.bind(bannerNode);\n  window.addEventListener('resize', eventHandler);\n  window.addEventListener('orientationchange', eventHandler);\n  updateBannerGeometry(bannerNode);\n  // Set button handlers...\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Accept')\n    ?.addEventListener('click', handleAccept);\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Reject')\n    ?.addEventListener('click', handleReject);\n}\n\nfunction hideBanner(bannerNode?: HTMLElement) {\n  if (bannerNode) {\n    bannerNode.remove();\n  }\n  document.body.classList.add('no-cookies-banner');\n}\n\nexport function initCookiesBanner() {\n  const bannerNode = document.querySelector<HTMLElement>('.cookies-banner');\n  if (!bannerNode) {\n    return;\n  }\n  const cookiesBannerStr = window.localStorage.getItem(acceptedCookiesId);\n  if (cookiesBannerStr == null) {\n    initActiveBanner(bannerNode);\n    return;\n  }\n  hideBanner(bannerNode);\n}\n","type CarouselSettings = JQuerySlickOptions; // Record<string, unknown>;\n\ninterface ResponsiveItem {\n  breakpoint: number;\n  settings: CarouselSettings;\n}\n\nconst defaultCarouselSettings: CarouselSettings = {\n  // @see https://kenwheeler.github.io/slick/\n\n  dots: true,\n  arrows: false,\n\n  lazyLoad: 'ondemand',\n\n  infinite: true,\n  speed: 1000,\n  slidesToShow: 4,\n  slidesToScroll: 1,\n\n  swipeToSlide: true,\n\n  autoplay: true,\n  autoplaySpeed: 2000,\n  pauseOnHover: true,\n\n  // focusOnSelect: true,\n  // variableWidth: true, // NOTE: It'll break `swipeToSlide` settings and require `no-caption` class to avoid broken cell' widts\n  // centerMode: true,\n  // centerPadding: '60px',\n};\n\nconst extraCarouselSettings: Record<string, CarouselSettings> = {\n  /* phoneScreenshotsWide: {\n   *   slidesToShow: 6,\n   *   responsive: [\n   *     {\n   *       breakpoint: 600,\n   *       settings: {\n   *         slidesToShow: 3,\n   *       },\n   *     },\n   *   ],\n   * },\n   */\n};\n\ninterface ResponsiveSeed {\n  width: number;\n  count: number;\n  step: number;\n}\n\nconst responsiveSeeds: Record<string, ResponsiveSeed> = {\n  phoneScreenshots: { width: 1200, count: 5, step: 200 },\n  phoneScreenshotsWide: { width: 1600, count: 8, step: 200 },\n  browserScreenshotsWide: { width: 1600, count: 3, step: 400 },\n};\n\nfunction seedResponsive(seed?: ResponsiveSeed) {\n  if (!seed) {\n    return undefined;\n  }\n  const { step } = seed;\n  let { width, count } = seed;\n  const responsives: ResponsiveItem[] = [];\n  const result: CarouselSettings = {\n    slidesToShow: count,\n    responsive: responsives,\n  };\n  while (count > 0 && width > 0) {\n    responsives.push({\n      breakpoint: width,\n      settings: {\n        slidesToShow: count,\n      },\n    });\n    width -= step;\n    count--;\n  }\n  return result;\n}\n\nfunction initCarousel(carousel: HTMLElement) {\n  const type = carousel.getAttribute('data-carousel-type');\n  const extraSettings = type ? extraCarouselSettings[type] : undefined;\n  const seedSettings = type ? seedResponsive(responsiveSeeds[type]) : undefined;\n  const settings = {\n    ...defaultCarouselSettings,\n    ...extraSettings,\n    ...seedSettings,\n  };\n  console.log('[carousels:initCarousel]', {\n    type,\n    settings,\n  });\n  $(carousel).slick(settings);\n}\n\nexport function initCarousels() {\n  const carousels = $('.slick-carousel');\n  if ('IntersectionObserver' in window) {\n    // IntersectionObserver Supported\n    const onChange = (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => {\n      entries.forEach((element) => {\n        if (element.isIntersecting) {\n          // Stop watching and load the slickSlider\n          initCarousel(element.target as HTMLElement);\n          observer.unobserve(element.target);\n        }\n      });\n    };\n    const observer = new IntersectionObserver(onChange, {\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#creating_an_intersection_observer\n      root: null,\n      rootMargin: '50%',\n      threshold: 0.0,\n    });\n    carousels.map((_idx: number, carousel: HTMLElement) => {\n      observer.observe(carousel);\n    });\n  } else {\n    // IntersectionObserver NOT Supported\n    carousels.map((_idx: number, carousel: HTMLElement) => initCarousel(carousel));\n  }\n}\n","/**\n * @desc Main entry point module (scripts)\n * @module src/assets/index.ts\n * @changed 2025.03.28, 03:34\n */\n\nimport { checkProjectVersion } from './checkProjectVersion';\nimport { initTracksPlayerWrapper } from './track-blocks/tracksPlayer';\nimport { initFloatingPlayer } from './entities/FloatingPlayer/floatingPlayer';\nimport { processTextContent } from './processTextContent';\nimport { initCookiesBanner } from './cookies-banner/cookiesBanner';\nimport { initCarousels } from './carousel/carousels';\nimport { initAOS } from './aos';\n\ninitCookiesBanner();\n\ncheckProjectVersion();\nprocessTextContent();\n\ninitTracksPlayerWrapper();\ninitFloatingPlayer();\n\ninitCarousels();\ninitAOS();\n","export function initAOS() {\n  // @see static/libs/aos/\n  // @see https://michalsnik.github.io/aos/\n  if (window.AOS /* && !window.DEBUG */) {\n    window.AOS.init({\n      // @see https://github.com/michalsnik/aos?tab=readme-ov-file#1-initialize-aos\n      once: true,\n    });\n  }\n}\n"],"names":["getMinorVersionFromProjectInfo","info","match","_e","getErrorText","error","Array","isArray","map","this","bind","join","Error","message","String","quoteHtmlAttr","str","preserveCR","crValue","replace","formatDuration","time","sec","min","hrs","items","Math","floor","val","idx","padStart","shift","filter","Boolean","setCookie","id","maxAgeSecs","parts","encodeURIComponent","push","fullCookie","document","cookie","floatToStr","num","isNaN","Number","toFixed","packDelim","finalPackDelimReg","RegExp","acceptedCookiesId","localTrackInfoDb","updatePlayedCount","playedCount","timestamp","now","Date","trackInfo","getOrCreate","undefined","lastPlayed","lastUpdated","insert","err","console","updatePosition","position","updateFavorite","favorite","lastFavorited","_toggleInFavoritesIndex","updateFavoritesByTrackIds","ids","favoritedTimes","_getIndex","forEach","isFavorite","includes","_setFavoritesIndex","save","createNewRecord","getById","round","trackInfoToJsonStr","window","localStorage","setItem","_addToIndex","getFavorites","getAll","it","getItem","list","split","warn","trackInfoFromJsonStr","_getFavoritesIndex","n","_","favoritesIndex","favoritesCount","length","hasFavorites","body","classList","toggle","querySelectorAll","node","innerText","_addToFavoritesIndex","_removeFromFavoritesIndex","checkId","value","v","_setIndex","index","_removeFromIndex","_toggleInIndex","delete","removeItem","clearAll","getJsText","textNode","querySelector","innerHTML","trim","icons","success","commonNotify","timeoutDelay","inited","removeNotify","notifyData","handler","remove","clearTimeout","setTimeout","notifyRoot","removeChild","showNotify","mode","text","content","ensureInit","createElement","add","nodeIcon","appendChild","nodeText","requestAnimationFrame","removeNotifyHandler","addEventListener","showInfo","showSuccess","showWarn","showError","showDemo","init","createDomNode","rootNode","setAttribute","storageActivePlayerDataId","saveActivePlayerData","data","JSON","stringify","convertActivePlayerDataToJsonStr","loadActivePlayerData","raw","parse","title","imageUrl","mediaUrl","duration","convertActivePlayerDataFromJsonStr","sendApiRequest","url","method","requestData","headers","Accept","cookieId","cookiesList","i","s","decodeURIComponent","getCookie","fetch","credentials","then","res","ok","status","statusText","json","errMsg","detail","catch","storageFloatingPlayerStateId","saveFloatingPlayerState","lastTimestamp","visible","progress","convertFloatingPlayerStateToJsonStr","loadFloatingPlayerState","convertFloatingPlayerStateFromJsonStr","allPlayers","setParentDomNode","parentDomNode","requireParentDomNode","ensureHiddenPlayer","hiddenPlayerNode","audio","hasAudio","audioNode","hasSource","sourceNode","ensureHiddenPlayerAudio","createHiddenPlayerSource","opts","removeHiddenPlayerSource","type","src","removeHiddenPlayerAudio","pause","from","getElementsByTagName","onPlayStartCallbacks","onPlayStopCallbacks","onUpdateCallbacks","onIncrementCallbacks","onFavoritesCallbacks","onFavoriteCallbacks","onErrorCallbacks","addPlayStartCallback","cb","addPlayStopCallback","addUpdateCallback","addIncrementCallback","addFavoriteCallback","addFavoritesCallback","addErrorCallback","invokePlayStart","activePlayerData","invokePlayStop","invokeUpdate","invokeIncrement","invokeFavorite","invokeFavorites","invokeError","TRUE","callbacks","FloatingPlayerCallbacks","hiddenPlayer","HiddenPlayer","state","toggling","seeking","initDomNode","updateAll","tracksLoaded","ensureAudioLoaded","playCurrentPlayer","requireAudio","handleAudioCanPlay","handleAudioPlay","handleAudioTimeUpdate","handleAudioEnded","removeAudio","hasAudioSource","requireDomNode","domNode","requireActivePlayerData","showFloatingPlayer","updateStateInDom","hideFloatingPlayer","updateActivePlayerDataInDom","titleNode","durationNode","imageNode","dataset","style","backgroundImage","updatePositionInDom","seekBarNode","setProperty","calculateProgress","ratio","updateTrackPosition","timeNode","ev","currAudio","currentTarget","currentTime","floatingPlayerState","_ev","loaded","incrementPlayedCount","handleError","errName","name","handleAudioSourceError","srcElement","getActiveTrackId","loadAudio","isAudioPlaying","paused","ended","readyState","isPlaying","pauseCurrentPlayer","load","play","trackPlayHandler","setActivePlayerData","setActiveTrack","trackNode","trackId","parseFloat","trackDuration","trackMediaUrl","getAttribute","trackTitle","getActivePlayerDataFromTrackNode","clearActiveData","sendIncrementPlayedCount","incrementing","played_count","count","finally","sendToggleFavoriteRequest","toggleFavorite","toggleFavoriteById","isCurrent","expectedFavoriteValue","isAuthenticated","results","favorite_track_ids","trackFavoritedTimes","reduce","result","userTrack","track_id","favorited_at_sec","favorites","msgId","seekPosition","seekRewind","max","seekForward","seekBarHandle","hideButton","controlId","floatingPlayer","FloatingPlayer","currentTrackPlayer","floatingPlayerUpdate","getTrackNode","timeFormatted","floatingPlayerPlay","floatingPlayerStop","tryToPlayNextTrack","nextIdx","indexOf","nextTrackNode","playTrackNode","find","updateIncrementCallback","updatedPlayedCount","strValue","valueNode","closest","updateTrackPlayedCount","stopPreviousPlayer","playingId","isFloatingPlaying","contains","updateTrackFavoriteInDataset","isCurrentFavorite","updateSingleFavoriteCallback","updateFavoritesCallback","initTrackPlayerNode","favoritedAtSec","favoritedAtDate","playedAtSec","playedAtDate","userPlayedCount","positionStr","updatedAtSec","updatedAtDate","playedAt","favoritedAt","updatedAt","hasServerData","log","calculateAndUpdateTrackPosition","img","imgUrl","initTrackPlayerNodeControls","processLink","processTextBlock","updateBannerGeometry","bannerNode","footerNode","bannerHeight","clientHeight","marginBottom","handleAccept","event","hideBanner","handleReject","eqPos","substring","defaultCarouselSettings","dots","arrows","lazyLoad","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","autoplay","autoplaySpeed","pauseOnHover","extraCarouselSettings","responsiveSeeds","phoneScreenshots","width","step","phoneScreenshotsWide","browserScreenshotsWide","initCarousel","carousel","extraSettings","seedSettings","seed","responsives","responsive","breakpoint","settings","seedResponsive","$","slick","eventHandler","initActiveBanner","oldInfo","newInfo","projectInfo","oldVersion","newVersion","checkProjectVersion","carousels","IntersectionObserver","entries","observer","element","isIntersecting","target","unobserve","root","rootMargin","threshold","_idx","observe","initCarousels","AOS","once"],"sourceRoot":""}