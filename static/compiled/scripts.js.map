{"version":3,"file":"scripts.js","mappings":"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","sources":["webpack://march-tales/./src/assets/checkProjectVersion.ts","webpack://march-tales/./src/assets/helpers/CommonHelpers.js","webpack://march-tales/./src/assets/helpers/floatToStr.ts","webpack://march-tales/./src/assets/constants/packDelim.ts","webpack://march-tales/./src/assets/track-blocks/TrackInfo.ts","webpack://march-tales/./src/assets/constants/acceptedCookiesId.ts","webpack://march-tales/./src/assets/track-blocks/localTrackInfoDb.ts","webpack://march-tales/./src/assets/helpers/getJsText.ts","webpack://march-tales/./src/assets/CommonNotify/CommonNotifySingleton.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/ActivePlayerData.ts","webpack://march-tales/./src/assets/helpers/sendApiRequest.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerState.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/HiddenPlayer.ts","webpack://march-tales/./src/assets/track-blocks/tracksPlayer.ts","webpack://march-tales/./src/assets/cookies-banner/cookiesBanner.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerCallbacks.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerClass.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/getActivePlayerDataFromTrackNode.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/floatingPlayer.ts","webpack://march-tales/./src/assets/processTextContent.ts","webpack://march-tales/./src/assets/index.ts"],"sourcesContent":["/** Get major and minor versions in form '1.2' from a string 'march-tales v.1.2.20 / 2025.02.20 15:22:00 +0300' */\nfunction getMinorVersionFromProjectInfo(info?: string | null) {\n  if (!info) {\n    return undefined;\n  }\n  try {\n    const match = info.match(/^\\S+ v\\.(\\d+\\.\\d+)/);\n    if (match) {\n      const v = match[1];\n      return v;\n    }\n  } catch (\n    _e // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // NOOP\n    return undefined;\n  }\n}\n\nexport function checkProjectVersion() {\n  const oldInfo = window.localStorage.getItem('projectInfo');\n  const newInfo = window.projectInfo;\n  if (newInfo && newInfo !== oldInfo) {\n    const oldVersion = getMinorVersionFromProjectInfo(oldInfo);\n    const newVersion = getMinorVersionFromProjectInfo(newInfo);\n    if (newVersion !== oldVersion) {\n      // TODO: To clear some stored data etc?\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[checkProjectVersion] Project version has changed',\n        newVersion,\n        '<->',\n        oldVersion,\n        {\n          oldInfo,\n          newInfo,\n          oldVersion,\n          newVersion,\n        },\n      );\n      // debugger; // eslint-disable-line no-debugger\n    }\n    window.localStorage.setItem('projectInfo', newInfo);\n  }\n}\n","// @ts-check\n\nexport function NOOP() {}\n\n/** Compare two arrays with scalar (number, string, boolean) values\n * @param {(number | string | boolean)[]} a1\n * @param {(number | string | boolean)[]} a2\n * @return {boolean}\n */\nexport function compareArrays(a1, a2) {\n  if (!a1 || !a1) {\n    return a1 === a2;\n  }\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  // Compare all the items...\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** getErrorText - Return plain text for error.\n * @param {string|Error|string[]|Error[]} error - Error or errors list.\n * @return {string}\n */\nexport function getErrorText(error) {\n  if (!error) {\n    return '';\n  }\n  if (Array.isArray(error)) {\n    return error.map(this.getErrorText.bind(this)).join('\\n');\n  }\n  if (error instanceof Error) {\n    error = error.message;\n  } else if (typeof error !== 'string') {\n    // TODO?\n    error = String(error);\n  }\n  return error;\n}\n\n/** quoteHtmlAttr -- quote all invalid characters for html\n * @param {string} str\n * @param {boolean} [preserveCR]\n */\nexport function quoteHtmlAttr(str, preserveCR) {\n  const crValue = preserveCR ? '&#13;' : '\\n';\n  return (\n    String(str) // Forces the conversion to string\n      .replace(/&/g, '&amp;') // This MUST be the 1st replacement\n      .replace(/'/g, '&apos;') // The 4 other predefined entities, required\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      // You may add other replacements here for HTML only (but it's not\n      // necessary). Or for XML, only if the named entities are defined in its\n      // DTD.\n      .replace(/\\r\\n/g, crValue) // Must be before the next replacement\n      .replace(/[\\r\\n]/g, crValue)\n  );\n}\n\n/** htmlToElement -- Create dom node instance from html string\n * @param {string} html - Html representing a single element\n * @return {HTMLElement}\n */\nexport function htmlToElement(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return /** @type HTMLElement */ (content.firstChild);\n}\n\n/** htmlToElements -- Convert text html representation to HTMLCollection object\n * @param {string|string[]} html\n * @return {HTMLCollection}\n */\nexport function htmlToElements(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return content.children;\n}\n\n/** updateNodeContent -- Replace all inner dom node content.\n * @param {Element} node\n * @param {THtmlContent} content\n */\nexport function updateNodeContent(node, content) {\n  if (!node) {\n    throw new Error('Undefined node to update content');\n  }\n  if (typeof content === 'string') {\n    // Replace with string content...\n    node.innerHTML = content;\n  } else if (Array.isArray(content)) {\n    // Replace multiple elements...\n    node.replaceChildren.apply(node, content);\n  } else {\n    // Replace single element...\n    node.replaceChildren(content);\n  }\n}\n\n/** decodeQuery\n * @param {string | string[]} qs\n * @param {string} [sep]\n * @param {string} [eq]\n * @param {any} [options]\n * @returns {{}}\n */\nexport function decodeQuery(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  /** @type {Record<string, unknown> | unknown[]} */\n  const obj = {};\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n  const regexp = /\\+/g;\n  qs = qs.split(sep);\n  let maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n  let len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n  for (let i = 0; i < len; ++i) {\n    const x = qs[i].replace(regexp, '%20'),\n      idx = x.indexOf(eq);\n    let kstr, vstr;\n    if (idx >= 0) {\n      kstr = x.substring(0, idx);\n      vstr = x.substring(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n    const k = decodeURIComponent(kstr);\n    const v = decodeURIComponent(vstr);\n    const it = obj[k];\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(it)) {\n      it.push(v);\n    } else {\n      obj[k] = [it, v];\n    }\n  }\n  return obj;\n}\n\n/** parseQuery -- Parse url query string (in form `?xx=yy&...` or `xx=yy&...`)\n * @param {string} search  - Query string\n * @return {Record<string, string>} query - Query object\n */\nexport function parseQuery(search) {\n  if (!search) {\n    return {};\n  }\n  if (search.indexOf('?') === 0) {\n    search = search.substring(1);\n  }\n  return decodeQuery(search);\n}\n\n/** makeQuery\n * @param {Record<string, string | number | boolean> | {}} params\n * @param {{ addQuestionSymbol?: boolean; useEmptyStrings?: boolean; useUndefinedValues?: boolean }} opts\n * @returns {string}\n */\nexport function makeQuery(params, opts = {}) {\n  let url = Object.entries(params)\n    .map(([id, val]) => {\n      const valStr = String(val);\n      if (val == undefined && !opts.useUndefinedValues) {\n        return undefined;\n      }\n      if (valStr === '' && !opts.useEmptyStrings) {\n        return undefined;\n      }\n      return encodeURI(id) + '=' + encodeURI(String(val == undefined ? '' : val));\n    })\n    .filter(Boolean)\n    .join('&');\n  if (opts.addQuestionSymbol && url) {\n    url = '?' + url;\n  }\n  return url;\n}\n\n/** Dynamically load external script\n * @param {string} url\n * @return {Promise<Event>}\n */\nexport function addScript(url) {\n  return new Promise((resolve, reject) => {\n    // document.write('<script src=\"' + url + '\"></script>');\n    const script = document.createElement('script');\n    script.setAttribute('src', url);\n    script.addEventListener('load', resolve);\n    script.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load script resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addScript]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(script);\n  });\n}\n\n/** Dynamically load external css\n * @param {string} url\n * @return {Promise<unknown>}\n */\nexport function addCssStyle(url) {\n  return new Promise((resolve, reject) => {\n    // Try to find exists node...\n    const testNode = document.head.querySelector(\n      'link[href=\"' + url + '\"], link[data-url=\"' + url + '\"]',\n    );\n    if (testNode) {\n      // Style already found!\n      return resolve({ type: 'already-loaded', target: testNode });\n    }\n    // reject(new Error('test')); // DEBUG: Test errors catching\n    const node = document.createElement('link');\n    node.setAttribute('href', url);\n    node.setAttribute('type', 'text/css');\n    node.setAttribute('rel', 'stylesheet');\n    node.setAttribute('data-url', url);\n    node.addEventListener('load', resolve);\n    node.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load css resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addCssStyle]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(node);\n  });\n}\n\n/**\n * @param {HTMLSelectElement} node\n * @param {(string|number)[]} values\n */\nexport function setMultipleSelectValues(node, values) {\n  const strValues = values.map(String);\n  const options = Array.from(node.options);\n  options.forEach((item) => {\n    const { value, selected } = item;\n    const isSelected = strValues.includes(value);\n    if (isSelected !== selected) {\n      item.selected = isSelected;\n    }\n  });\n}\n\n/** processMultipleRequestErrors\n * @param {Response[]} resList\n * @return {Error[]}\n */\nexport function processMultipleRequestErrors(resList) {\n  return /** @type {Error[]} */ (\n    resList\n      .map((res) => {\n        if (!res.ok) {\n          return new Error(`Can't load url '${res.url}': ${res.statusText}, ${res.status}`);\n        }\n      })\n      .filter(Boolean)\n  );\n}\n\n/**\n * @param {number} n\n * @param {TNormalizedFloatStrOptions} [opts={}]\n * @returns {string}\n */\nexport function normalizedFloatStr(n, opts = {}) {\n  const {\n    // prettier-ignore\n    fixedPoint = 2,\n    stripFixedZeros = true,\n  } = opts;\n  let str = n.toFixed(fixedPoint);\n  if (stripFixedZeros) {\n    str = str.replace(/\\.*0+$/, '');\n  }\n  return str;\n}\n/**\n * @param {number} size\n * @param {TGetApproxSizeOptions} [opts={}]\n * @returns {[number | string, string]}\n */\nexport function getApproxSize(size, opts = {}) {\n  const { normalize } = opts;\n  const levels = [\n    'B', // Bytes\n    'K', // Kilobytes\n    'M', // Megabytes\n    'G', // Gigabites\n  ];\n  const lastLevel = levels.length - 1;\n  const range = 1024;\n  let level = 0;\n  while (level < lastLevel) {\n    if (size < range) {\n      break;\n    }\n    size /= range;\n    level++;\n  }\n  const currLevelStr = levels[level];\n  /** Result: final number or normalized representation (depends on option's `normalize`)\n   * @type {number | string}\n   */\n  let result = size;\n  if (normalize) {\n    const normalizeOpts = typeof normalize === 'object' ? normalize : undefined;\n    result = normalizedFloatStr(size, normalizeOpts);\n  }\n  return [result, currLevelStr];\n}\n\n/** @param {number} time - Time duration, ms\n * @return {string}\n */\nexport function formatDuration(time) {\n  const sec = time / 1000;\n  const min = sec / 60;\n  const hrs = min / 60;\n  const days = hrs / 24;\n  const srcItems = [\n    // prettier-ignore\n    days,\n    hrs % 24,\n    min % 60,\n    sec % 60,\n  ];\n  const items = srcItems.map(Math.floor).map((val, idx) => {\n    // Not mins and secs and empty...\n    if (idx < 2 && !val) {\n      return undefined;\n    }\n    // Hours, mins, secs...\n    if (idx >= 1) {\n      return String(val).padStart(2, '0');\n    }\n    // Days...\n    if (!idx) {\n      return String(val) + 'd';\n    }\n  });\n  /* console.log('[CommonHelpers:formatDuration]', {\n   *   sec,\n   *   min,\n   *   hrs,\n   *   days,\n   *   items,\n   *   srcItems,\n   *   time,\n   * });\n   */\n  const daysStr = items.shift();\n  return [\n    // prettier-ignore\n    daysStr,\n    items.filter(Boolean).join(':'),\n  ]\n    .filter(Boolean)\n    .join(' ');\n}\n\n/** @param {string} str */\nexport function getAsyncHash(str) {\n  const encoder = new TextEncoder();\n  const buf = encoder.encode(str);\n  return crypto.subtle.digest('SHA-256', buf).then((aryBuf) => {\n    const ary = new Uint8Array(aryBuf);\n    const res = Array.from(ary)\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n    return res;\n  });\n}\n\n/** @param {string} cookieId */\nexport function getCookie(cookieId) {\n  const cookiesStr = document.cookie;\n  const cookiesList = cookiesStr.split(';'); // .map((s) => s.trim().split('='));\n  for (let i = 0; i < cookiesList.length; i++) {\n    const s = cookiesList[i];\n    const [id, val] = s.trim().split('=').map(decodeURIComponent);\n    if (id === cookieId) {\n      return val;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {string} id\n * @param {string} val\n * @param {number} [maxAgeSecs] -- Seconds of expire period\n */\nexport function setCookie(id, val, maxAgeSecs) {\n  const cookieVal = [id, val || ''].map(encodeURIComponent).join('=');\n  const parts = [\n    // prettier-ignore\n    cookieVal,\n    'path=/',\n  ];\n  if (maxAgeSecs) {\n    parts.push('max-age=' + maxAgeSecs);\n  }\n  const fullCookie = parts.filter(Boolean).join(';');\n  document.cookie = fullCookie;\n}\n\nexport function deleteAllCookies() {\n  document.cookie.split(';').forEach((cookie) => {\n    const eqPos = cookie.indexOf('=');\n    const name = eqPos > -1 ? cookie.substring(0, eqPos) : cookie;\n    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT';\n  });\n}\n","export function floatToStr(num: number | undefined) {\n  if (!num) {\n    return '0';\n  }\n  if (typeof num === 'string') {\n    if (isNaN(num)) {\n      return '0';\n    }\n    num = Number(num);\n  }\n  return num\n    .toFixed(3)\n    .replace(/(\\.\\d+)0+$/, '$1')\n    .replace(/\\.0+$/, '');\n}\n","// Use dashes to save space in cookies (commas are converted to `%2C`-like entities)\nexport const packDelim = '-';\n","import { floatToStr } from '../helpers/floatToStr';\nimport { packDelim } from '../constants/packDelim';\n\nexport interface TrackInfo {\n  id: number; // track.id\n  favorite: boolean;\n  playedCount: number; // track.played_count (but only for current user!).\n  position: number; // position?.inMilliseconds ?? 0\n  lastUpdated: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n  lastPlayed: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n}\n\nconst finalPackDelimReg = new RegExp(packDelim + '+$');\n\nexport function trackInfoFromJsonStr(str: string): TrackInfo | undefined {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const list = str.split(packDelim);\n    const [\n      // Keep the order!\n      id,\n      favorite,\n      playedCount,\n      position,\n      lastUpdated, // Timestamp\n      lastPlayed, // Timestamp\n    ] = list;\n    const data: TrackInfo = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      favorite: Boolean(favorite),\n      playedCount: playedCount ? Number(playedCount) : 0,\n      position: position ? Number(position) : 0,\n      lastUpdated: lastUpdated ? Number(lastUpdated) * 1000 : 0, // Timestamp\n      lastPlayed: lastPlayed ? Number(lastPlayed) * 1000 : 0, // Timestamp\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[TrackInfo:trackInfoFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nexport function trackInfoToJsonStr(trackInfo: TrackInfo) {\n  const {\n    // Keep the order!\n    id,\n    favorite,\n    playedCount,\n    position,\n    lastUpdated,\n    lastPlayed,\n  } = trackInfo;\n  const list = [\n    // Keep the order!\n    id ? Number(id) : undefined,\n    favorite ? Number(favorite) : undefined,\n    playedCount ? Number(playedCount) : undefined,\n    position ? floatToStr(position) : undefined, // Use fixed decimal presentation for floats\n    lastUpdated ? Math.round(lastUpdated / 1000) : undefined, // Timestamp\n    lastPlayed ? Math.round(lastPlayed / 1000) : undefined, // Timestamp\n  ];\n  return list.join(packDelim).replace(finalPackDelimReg, '');\n}\n","export const acceptedCookiesId = 'cookies';\n","import { TrackInfo, trackInfoFromJsonStr, trackInfoToJsonStr } from './TrackInfo';\nimport { setCookie } from '../helpers/CommonHelpers';\nimport { packDelim } from '../constants/packDelim';\nimport { acceptedCookiesId } from '../constants/acceptedCookiesId';\n\n/* TODO: Use `new CustomEvent` to broadcast events */\n\nclass LocalTrackInfoDb {\n  // End-user api\n\n  updatePlayedCount(id: number, playedCount?: number, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      if (playedCount == undefined || isNaN(playedCount)) {\n        trackInfo.playedCount = trackInfo.playedCount ? trackInfo.playedCount + 1 : 1;\n      } else {\n        trackInfo.playedCount = playedCount;\n      }\n      trackInfo.lastPlayed = _now;\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:incrementPlayedCount]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updatePosition(id: number, position: number, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.position = position;\n      trackInfo.lastPlayed = _now; // ???\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:updatePosition]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavorite(id: number, favorite: boolean, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.favorite = favorite;\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      this._toggleInFavoritesIndex(id, favorite);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:setFavorite]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavoritesByTrackIds(ids: number[], now?: number) {\n    const _now = now || Date.now();\n    const index = this._getIndex();\n    index.forEach((id) => {\n      const isFavorite = ids.includes(id);\n      const trackInfo = this.getOrCreate(id);\n      if (trackInfo.favorite !== isFavorite) {\n        trackInfo.favorite = isFavorite;\n        trackInfo.lastUpdated = _now;\n        this.insert(trackInfo);\n      }\n    });\n    this._setFavoritesIndex(ids);\n  }\n\n  save(trackInfo: TrackInfo, now?: number) {\n    try {\n      const _now = now || Date.now();\n      trackInfo.lastPlayed = _now; // ???\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      // const testTrackInfo = await this.getById(id);\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:save]', err.message, {\n        err,\n        trackInfo,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  // Low-level api\n\n  createNewRecord(id: number) {\n    const now = Date.now();\n    const trackInfo: TrackInfo = {\n      id: id, // track.id\n      favorite: false,\n      playedCount: 0, // track.played_count (but only for current user!).\n      position: 0, // position\n      lastUpdated: now, // DateTime.now()\n      lastPlayed: 0, // DateTime.now()\n    };\n    return trackInfo;\n  }\n\n  getOrCreate(id: number) {\n    return this.getById(id) || this.createNewRecord(id);\n  }\n\n  /// Create or update the record. (Returns inserted/updated record id.)\n  insert(trackInfo: TrackInfo) {\n    const { id } = trackInfo;\n    const str = trackInfoToJsonStr(trackInfo);\n    window.localStorage.setItem('ti-' + id, str);\n    this._addToIndex(id);\n  }\n\n  getFavorites() {\n    return this.getAll().filter((it) => it.favorite);\n  }\n\n  getById(id: number): TrackInfo | undefined {\n    const str = window.localStorage.getItem('ti-' + id);\n    if (!str) {\n      return undefined;\n    }\n    return trackInfoFromJsonStr(str);\n  }\n\n  _getFavoritesIndex() {\n    try {\n      const str = window.localStorage.getItem('favorites');\n      if (!str) {\n        return [] as number[];\n      }\n      const list = str\n        .split(packDelim)\n        .map(Number)\n        .filter((n) => !isNaN(n)) as number[];\n      return list;\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setFavoritesIndex(favoritesIndex: number[]) {\n    const list = favoritesIndex.filter((n) => !isNaN(n)).filter(Boolean);\n    const str = list.join(packDelim);\n    window.localStorage.setItem('favorites', str);\n    // Update cookie value and document status\n    const favoritesCount = list.length;\n    const hasFavorites = !!favoritesCount;\n    document.body.classList.toggle('has-favorites', hasFavorites);\n    // Update count texts\n    document.querySelectorAll<HTMLElement>('.favorites-count').forEach((node) => {\n      node.innerText = String(favoritesCount);\n    });\n    // Update cookie\n    if (window.localStorage.getItem(acceptedCookiesId)) {\n      setCookie('favorites', str);\n    }\n  }\n\n  _addToFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (!favoritesIndex.includes(id)) {\n      favoritesIndex.push(id);\n      this._setFavoritesIndex(favoritesIndex);\n    }\n  }\n\n  _removeFromFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (favoritesIndex.includes(id)) {\n      this._setFavoritesIndex(favoritesIndex.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInFavoritesIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToFavoritesIndex(id);\n    } else {\n      this._removeFromFavoritesIndex(id);\n    }\n  }\n\n  _getIndex() {\n    try {\n      const str = window.localStorage.getItem('ti-index');\n      return (str ? str.split(packDelim).map((v) => (v ? Number(v) : 0)) : []) as number[];\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setIndex(index: number[]) {\n    window.localStorage.setItem('ti-index', index.join(packDelim));\n  }\n\n  _addToIndex(id: number) {\n    const index = this._getIndex();\n    if (!index.includes(id)) {\n      index.push(id);\n      this._setIndex(index);\n    }\n  }\n\n  _removeFromIndex(id: number) {\n    const index = this._getIndex();\n    if (index.includes(id)) {\n      this._setIndex(index.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToIndex(id);\n    } else {\n      this._removeFromIndex(id);\n    }\n  }\n\n  getAll() {\n    const index = this._getIndex();\n    const list: TrackInfo[] = index\n      .map((id) => {\n        return this.getById(id);\n      })\n      .filter(Boolean) as TrackInfo[];\n    return list;\n  }\n\n  delete(id: number) {\n    window.localStorage.removeItem('ti-' + id);\n    this._removeFromIndex(id);\n  }\n\n  clearAll() {\n    const index = this._getIndex();\n    index.forEach((id) => {\n      window.localStorage.removeItem('ti-' + id);\n    });\n    this._setIndex([]);\n  }\n}\n\n// Create a singleton\nexport const localTrackInfoDb = new LocalTrackInfoDb();\n","import { quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nexport function getJsText(id: string) {\n  const textNode = document.body.querySelector('#js-texts #' + id);\n  if (!textNode) {\n    // eslint-disable-next-line no-console\n    console.warn('[getJsText] Can not find js text node for id:', id);\n  }\n  const text = textNode?.innerHTML || id;\n  return quoteHtmlAttr(text).trim();\n}\n","import * as CommonHelpers from '../helpers/CommonHelpers';\n\n/** Toast types */\ntype TMode = 'info' | 'error' | 'warn' | 'success';\n\n/** Icon shapes (move to constants?) */\nconst icons: Record<TMode, string> = {\n  success: 'bi-check',\n  error: 'bi-exclamation-triangle-fill',\n  warn: 'bi-bell-fill',\n  info: 'bi-info-lg',\n};\n\nconst iconClassNamePrefix = 'bi';\n\ninterface TNotifyData {\n  node: HTMLDivElement;\n  handler?: TSetTimeout;\n}\n\n// Define module...\nclass CommonNotify {\n  notifyRoot?: HTMLDivElement;\n\n  timeoutDelay = 3000;\n\n  inited = false;\n\n  // Methods...\n\n  removeNotify(notifyData: TNotifyData) {\n    const { node, handler } = notifyData;\n    // Play animation...\n    node.classList.remove('active');\n    if (handler) {\n      clearTimeout(handler);\n      notifyData.handler = undefined;\n    }\n    setTimeout(() => {\n      // ...And remove node (TODO: Check if node still exists in dom tree)...\n      try {\n        this.notifyRoot?.removeChild(node);\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n    }, 250); // Value of `var(--common-animation-time)`\n  }\n\n  /** showNotify\n   * @param {'info' | 'error' | 'warn' | 'success'} mode - Message type ('info' is default)\n   * @param {string|Error} text - Message content\n   */\n  showNotify(mode: TMode, text: string | Error) {\n    this.ensureInit();\n    if (!text) {\n      // If only one parameters passed assume it as message with default type\n      text = mode;\n      mode = 'info';\n    }\n    let content: string;\n    if (text instanceof Error) {\n      // Convert error object to the plain text...\n      content = CommonHelpers.getErrorText(text);\n    } else {\n      content = String(text);\n    }\n    // Create node...\n    const node = document.createElement('div');\n    node.classList.add('notify');\n    node.classList.add('notify-' + mode);\n    // Add icon...\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon');\n    nodeIcon.classList.add(iconClassNamePrefix);\n    nodeIcon.classList.add(icons[mode]);\n    node.appendChild(nodeIcon);\n    // Add text...\n    const nodeText = document.createElement('div');\n    nodeText.classList.add('text');\n    nodeText.innerHTML = content;\n    node.appendChild(nodeText);\n    this.notifyRoot?.appendChild(node);\n    // Play appearing animation...\n    window.requestAnimationFrame(() => {\n      setTimeout(() => {\n        node.classList.add('active');\n      }, 10);\n    });\n    // Remove node after delay...\n    const notifyData: TNotifyData = { node, handler: undefined };\n    const removeNotifyHandler = this.removeNotify.bind(this, notifyData);\n    notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    // Stop & restore timer on mouse in and out events...\n    node.addEventListener('mouseenter', () => {\n      // Clear timer...\n      clearTimeout(notifyData.handler);\n    });\n    node.addEventListener('mouseleave', () => {\n      // Resume timer...\n      notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    });\n    // Click handler...\n    node.addEventListener('click', removeNotifyHandler);\n  }\n\n  // Some shorthands...\n\n  /** @param {string|Error} text - Message content */\n  showInfo(text: string | Error) {\n    this.showNotify('info', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showSuccess(text: string | Error) {\n    this.showNotify('success', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showWarn(text: string | Error) {\n    this.showNotify('warn', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showError(text: string | Error) {\n    this.showNotify('error', text);\n  }\n\n  // Demo...\n\n  showDemo() {\n    // DEBUG: Show sample notifiers...\n    this.showInfo('Info');\n    this.showSuccess('Success');\n    this.showWarn('Warn');\n    this.showError('Error');\n  }\n\n  // Initialization...\n\n  /** Ensure the modal has initiazlized */\n  ensureInit() {\n    this.init();\n  }\n\n  createDomNode() {\n    // TODO: To use bootstrap toasts?\n    const rootNode = document.body;\n    const notifyRoot = document.createElement('div');\n    notifyRoot.classList.add('notify-root');\n    notifyRoot.setAttribute('id', 'notify-root');\n    rootNode.appendChild(notifyRoot);\n    this.notifyRoot = notifyRoot;\n  }\n\n  /** Initialize nodule. */\n  init() {\n    if (!this.inited) {\n      this.createDomNode();\n      this.inited = true;\n    }\n  }\n}\n\n// Create and export singletone\nexport const commonNotify = new CommonNotify();\n\n// commonNotify.init();\n","export interface ActivePlayerData {\n  id: number;\n  title: string;\n  imageUrl: string;\n  mediaUrl: string;\n  duration: number;\n  favorite: boolean;\n}\n\nconst storageActivePlayerDataId = 'ActivePlayerData';\n\nfunction convertActivePlayerDataFromJsonStr(str?: string | null) {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const raw = JSON.parse(str);\n    // const list = str.split(',');\n    const {\n      // Keep the order!\n      id,\n      title,\n      imageUrl,\n      mediaUrl,\n      duration,\n      favorite,\n    } = raw;\n    const data: ActivePlayerData = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      title: title ? String(title) : '',\n      imageUrl: imageUrl ? String(imageUrl) : '',\n      mediaUrl: mediaUrl ? String(mediaUrl) : '',\n      duration: duration ? Number(duration) : 0,\n      favorite: Boolean(favorite),\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[ActivePlayerData:storageActivePlayerDataId] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nfunction convertActivePlayerDataToJsonStr(data: ActivePlayerData) {\n  return JSON.stringify(data);\n}\n\nexport function saveActivePlayerData(data?: ActivePlayerData) {\n  const str = data ? convertActivePlayerDataToJsonStr(data) : '';\n  window.localStorage.setItem(storageActivePlayerDataId, str);\n}\n\nexport function loadActivePlayerData() {\n  const str = window.localStorage.getItem(storageActivePlayerDataId);\n  return convertActivePlayerDataFromJsonStr(str);\n}\n","import { getCookie } from '../helpers/CommonHelpers';\nimport * as CommonHelpers from '../helpers/CommonHelpers';\nimport { getJsText } from './getJsText';\n\nexport function sendApiRequest(url: string, method: string = 'GET', requestData?: unknown) {\n  const csrftoken = getCookie('csrftoken');\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'X-CSRFToken': csrftoken || '',\n    // Credentials: 'include',\n    // Cookie: csrftoken && `csrftoken=${csrftoken}`,\n    // 'X-Session-Token': sessionId, // X-Session-Token\n    // 'Accept-Language': 'ru', // django_language=ru; content-language: ru;\n  };\n  return fetch(url, {\n    method,\n    headers,\n    credentials: 'include',\n    body: requestData ? JSON.stringify(requestData) : null,\n  })\n    .then(async (res) => {\n      const { ok, status, statusText } = res;\n      // TODO: Check is it json?\n      let data: (unknown & { detail?: string }) | undefined = undefined;\n      try {\n        data = await res.json();\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n      if (!ok || status !== 200) {\n        const errMsg = [getJsText('fetchError') + ' ' + status, data?.detail || statusText]\n          .filter(Boolean)\n          .join(': ');\n        // eslint-disable-next-line no-console\n        console.error('[sendApiRequest]', errMsg, {\n          ok,\n          data,\n          statusText,\n          status,\n          res,\n          url,\n          requestData,\n          method,\n          headers,\n        });\n        debugger; // eslint-disable-line no-debugger\n        throw new Error(errMsg);\n      }\n      return data as unknown;\n    })\n    .catch((err) => {\n      const errMsg = [getJsText('failedApiRequest'), CommonHelpers.getErrorText(err)]\n        .filter(Boolean)\n        .join(': ');\n      // eslint-disable-next-line no-console\n      console.error('[sendApiRequest]', errMsg, {\n        err,\n        url,\n        requestData,\n        method,\n        headers,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw new Error(errMsg);\n    });\n}\n","import { floatToStr } from '../../helpers/floatToStr';\n\ntype Status = 'playing' | 'paused' | 'waiting';\n\nexport interface FloatingPlayerState {\n  lastTimestamp?: number; // Timestamp\n  visible?: boolean;\n  loaded?: boolean;\n  status?: Status | undefined;\n  position?: number;\n  progress?: number;\n  error?: string;\n}\n\nconst storageFloatingPlayerStateId = 'FloatingPlayerState';\n\nfunction convertFloatingPlayerStateFromJsonStr(str?: string | null) {\n  if (!str) {\n    return {};\n  }\n  try {\n    const list = str.split(',');\n    const [\n      // Keep the order!\n      lastTimestamp,\n      visible,\n      status,\n      position,\n      progress,\n    ] = list;\n    const data: FloatingPlayerState = {\n      // Keep the order!\n      lastTimestamp: lastTimestamp ? Number(lastTimestamp) * 1000 : undefined, // Timestamp\n      visible: visible ? Boolean(visible) : undefined,\n      status: status ? (String(status) as Status) : undefined,\n      position: position ? Number(position) : undefined,\n      progress: progress ? Number(progress) : undefined,\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[FloatingPlayerState:convertFloatingPlayerStateFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return {};\n  }\n}\n\nfunction convertFloatingPlayerStateToJsonStr(data: FloatingPlayerState) {\n  const {\n    // Keep the order!\n    lastTimestamp,\n    visible,\n    status,\n    position,\n    progress,\n  } = data;\n  const list = [\n    // Keep the order!\n    lastTimestamp ? Math.round(lastTimestamp / 1000) : undefined, // Timestamp\n    visible ? Number(visible) : undefined, // Boolean\n    status ? status : undefined,\n    position ? floatToStr(position) : undefined,\n    progress ? floatToStr(progress) : undefined,\n  ];\n  const str = list.join(',').replace(/,+$/, '');\n  return str;\n}\n\nexport function saveFloatingPlayerState(data: FloatingPlayerState) {\n  const saveData = { ...data, lastTimestamp: Date.now() };\n  const str = convertFloatingPlayerStateToJsonStr(saveData);\n  window.localStorage.setItem(storageFloatingPlayerStateId, str);\n}\n\nexport function loadFloatingPlayerState() {\n  const str = window.localStorage.getItem(storageFloatingPlayerStateId);\n  return convertFloatingPlayerStateFromJsonStr(str);\n}\n","interface THiddenPlayerOptions {\n  type?: string;\n  src?: string;\n}\n\nexport class HiddenPlayer {\n  hiddenPlayerNode?: HTMLElement;\n  parentDomNode?: HTMLElement;\n\n  audioNode?: HTMLAudioElement;\n  sourceNode?: HTMLSourceElement;\n\n  setParentDomNode(parentDomNode: HTMLElement) {\n    this.parentDomNode = parentDomNode;\n  }\n\n  requireParentDomNode() {\n    return this.parentDomNode || document.body;\n  }\n\n  ensureHiddenPlayer(/* opts: THiddenPlayerOptions = {} */) {\n    if (!this.hiddenPlayerNode) {\n      this.hiddenPlayerNode = document.createElement('div');\n      this.hiddenPlayerNode.classList.add('hidden-player');\n      const audio = document.createElement('audio');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      this.hiddenPlayerNode.appendChild(audio);\n      const parentDomNode = this.requireParentDomNode();\n      parentDomNode.appendChild(this.hiddenPlayerNode);\n    }\n    return this.hiddenPlayerNode;\n  }\n\n  hasAudio() {\n    return !!this.audioNode;\n  }\n\n  hasSource() {\n    return !!this.sourceNode;\n  }\n\n  ensureHiddenPlayerAudio() {\n    if (!this.audioNode) {\n      const parentDomNode = this.requireParentDomNode();\n      this.audioNode = document.createElement('audio');\n      this.audioNode.classList.add('hidden-player');\n      this.audioNode.setAttribute('preload', 'auto');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      parentDomNode.appendChild(this.audioNode);\n    }\n    return this.audioNode;\n  }\n\n  createHiddenPlayerSource(opts: THiddenPlayerOptions = {}) {\n    this.removeHiddenPlayerSource();\n    const audio = this.ensureHiddenPlayerAudio();\n    this.sourceNode = document.createElement('source');\n    this.sourceNode.setAttribute('type', opts.type || 'audio/mpeg');\n    if (opts.src) {\n      this.sourceNode.setAttribute('src', opts.src);\n    }\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event\n    // audio.addEventListener('canplay', this.handleCanPlay.bind(this));\n    // audio.addEventListener('playing', this.handlePlay.bind(this));\n    // audio.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    // audio.addEventListener('ended', this.handleEnded.bind(this));\n    // this.sourceNode.addEventListener('error', this.handleError.bind(this));\n    audio.appendChild(this.sourceNode);\n    return this.sourceNode;\n  }\n\n  removeHiddenPlayerAudio() {\n    if (this.audioNode) {\n      this.audioNode.pause();\n      this.audioNode.remove();\n      this.audioNode = undefined;\n      this.sourceNode = undefined;\n    }\n  }\n\n  removeHiddenPlayerSource() {\n    const audio = this.ensureHiddenPlayerAudio();\n    const prevSources = Array.from(audio.getElementsByTagName('source'));\n    for (const node of prevSources) {\n      node.remove();\n    }\n    this.sourceNode = undefined;\n  }\n}\n","import { formatDuration, quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nimport { localTrackInfoDb } from './localTrackInfoDb';\nimport { floatingPlayer } from '../entities/FloatingPlayer/floatingPlayer';\nimport {\n  FloatingPlayerFavoriteData,\n  FloatingPlayerFavoritesData,\n  FloatingPlayerIncrementData,\n  FloatingPlayerUpdateData,\n} from '../entities/FloatingPlayer/FloatingPlayerCallbacks';\nimport { floatToStr } from '../helpers/floatToStr';\nimport { TrackInfo } from './TrackInfo';\n\nlet allPlayers: NodeListOf<HTMLElement>;\nlet currentTrackPlayer: HTMLElement | undefined = undefined;\n\n// Values for dataset statuses\nconst TRUE = 'true';\n\nfunction calculateAndUpdateTrackPosition(\n  trackNode: HTMLElement,\n  position: number,\n  _isCurrent?: boolean,\n) {\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const { dataset } = trackNode;\n  const { trackId, trackDuration } = dataset;\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  const id = Number(trackId);\n  const duration = trackDuration ? parseFloat(trackDuration.replace(',', '.')) : 0;\n  if (!duration) {\n    const error = new Error(`No duration provided for a track: ${id}`);\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:updateTrackPosition]', error.message, {\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n  }\n  const ratio = position / duration;\n  const progress = Math.min(100, ratio * 100);\n  requestAnimationFrame(() => {\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  localTrackInfoDb.updatePosition(id, position);\n  // TODO: Update the floating player if isCurrent?\n  return { position, duration, progress };\n}\n\nfunction floatingPlayerUpdate(data: FloatingPlayerUpdateData) {\n  const { floatingPlayerState, activePlayerData } = data;\n  const { id } = activePlayerData;\n  let trackNode = currentTrackPlayer;\n  if (!trackNode || Number(trackNode.dataset.trackId) !== id) {\n    trackNode = getTrackNode(id);\n  }\n  if (!trackNode) {\n    return;\n  }\n  // const isCurrent = trackNode === currentTrackPlayer;\n  const { position = 0, progress = 0, status } = floatingPlayerState;\n  const { dataset } = trackNode;\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  requestAnimationFrame(() => {\n    if (status) {\n      dataset.status = status;\n    } else {\n      delete dataset.status;\n    }\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  // calculateAndUpdateTrackPosition(trackNode, position, isCurrent); // Is it required here?\n  // TODO: Update the floating player if isCurrent?\n}\n\nfunction floatingPlayerPlay(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    throw new Error('Wrong active track id!');\n  }\n  requestAnimationFrame(() => {\n    dataset.status = 'playing';\n  });\n}\n\nfunction floatingPlayerStop(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState, // ???\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    throw new Error('Wrong active track id!');\n  }\n  requestAnimationFrame(() => {\n    delete dataset.status;\n  });\n}\n\nfunction getTrackNode(id: number) {\n  const players = Array.from(allPlayers);\n  const trackNode = players.find((it) => Number(it.dataset.trackId) === id);\n  return trackNode;\n}\n\nfunction stopPreviousPlayer() {\n  if (currentTrackPlayer) {\n    const { dataset } = currentTrackPlayer;\n    requestAnimationFrame(() => {\n      currentTrackPlayer!.classList.toggle('current', false);\n      delete dataset.status;\n      delete dataset.loaded;\n      delete dataset.error;\n    });\n  }\n}\n\nfunction updateTrackPlayedCount(\n  trackNode: HTMLElement,\n  playedCount?: number,\n  _isCurrent?: boolean,\n) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId);\n  if (!id) {\n    throw new Error('No current track id!');\n  }\n  const updatedTrackInfo = localTrackInfoDb.updatePlayedCount(id, playedCount);\n  const { playedCount: updatedPlayedCount } = updatedTrackInfo;\n  const strValue = quoteHtmlAttr(String(updatedPlayedCount));\n  const valueNode = trackNode.querySelector('#played_count') as HTMLElement;\n  // Update counter in the document...\n  if (valueNode) {\n    const parent = valueNode.closest('.track-played-count[data-played-count]') as HTMLElement;\n    requestAnimationFrame(() => {\n      valueNode.innerText = strValue;\n      if (parent) {\n        parent.dataset.playedCount = strValue;\n      }\n    });\n  }\n  // TODO: Update value in the floating player?\n}\n\nfunction updateIncrementCallback(data: FloatingPlayerIncrementData) {\n  const {\n    count,\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  const trackNode = getTrackNode(activePlayerData.id);\n  const isCurrent = trackNode === currentTrackPlayer;\n  if (trackNode) {\n    updateTrackPlayedCount(trackNode, count, isCurrent);\n  }\n}\n\n/** Play button click handler */\nfunction trackPlayHandler(ev: MouseEvent) {\n  const controlNode = ev.currentTarget as HTMLElement;\n  const trackNode = controlNode.closest('.track-player') as HTMLElement;\n  // Reset previous player\n  if (currentTrackPlayer && currentTrackPlayer !== trackNode) {\n    stopPreviousPlayer();\n  }\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n\n  const playingId = floatingPlayer.getActiveTrackId();\n  const isFloatingPlaying = floatingPlayer.isPlaying();\n  if (isFloatingPlaying) {\n    // Pause playback\n    floatingPlayer.pauseCurrentPlayer();\n    if (playingId === id) {\n      // Return -- just pause current track\n      return;\n    }\n  }\n\n  // Clear all tracks active status?\n  requestAnimationFrame(() => {\n    allPlayers.forEach((it) => {\n      if (it !== trackNode && it.classList.contains('current')) {\n        it.classList.toggle('current', false);\n      }\n    });\n    trackNode.classList.toggle('current', true);\n  });\n\n  currentTrackPlayer = trackNode;\n\n  const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  floatingPlayer.setActiveTrack(trackNode, position);\n\n  floatingPlayer.playCurrentPlayer();\n\n  // Show floating player if has been hidden\n  if (!isFloatingPlaying) {\n    floatingPlayer.showFloatingPlayer();\n  }\n}\n\nfunction updateTrackFavoriteInDataset(trackNode: HTMLElement, isFavorite: boolean) {\n  const { dataset } = trackNode;\n  const { favorite } = dataset;\n  const isCurrentFavorite = Boolean(favorite);\n  if (isFavorite !== isCurrentFavorite) {\n    requestAnimationFrame(() => {\n      if (isFavorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n    });\n  }\n}\n\nfunction updateSingleFavoriteCallback({ id, favorite }: FloatingPlayerFavoriteData) {\n  const trackNode = getTrackNode(id);\n  if (trackNode) {\n    updateTrackFavoriteInDataset(trackNode, favorite);\n  }\n}\n\nfunction updateFavoritesCallback({ favorites }: FloatingPlayerFavoritesData) {\n  allPlayers.forEach((trackNode) => {\n    const { dataset } = trackNode;\n    const { trackId } = dataset;\n    const id = Number(trackId);\n    const isFavorite = favorites.includes(id);\n    updateTrackFavoriteInDataset(trackNode, isFavorite);\n  });\n}\n\nfunction initTrackPlayerNodeControls(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId || '');\n  // Set controls' handlers\n  const controls = trackNode.querySelectorAll<HTMLElement>('.track-control');\n  controls.forEach((node) => {\n    const { dataset } = node;\n    const { inited, controlId } = dataset;\n    if (inited) {\n      return;\n    }\n    if (controlId === 'toggleFavorite') {\n      node.addEventListener('click', () => floatingPlayer.toggleFavoriteById(id));\n    }\n    if (controlId === 'play') {\n      node.addEventListener('click', trackPlayHandler);\n    }\n    dataset.inited = TRUE;\n  });\n  dataset.inited = TRUE;\n}\n\nfunction initTrackPlayerNode(trackNode: HTMLElement) {\n  const activePlayerData = floatingPlayer.activePlayerData;\n  const { dataset } = trackNode;\n  const {\n    inited,\n    trackId, // \"1\"\n    trackMediaUrl, // \"/media/samples/gr-400x225.jpg\"\n  } = dataset;\n  const id = Number(trackId || '');\n  if (!id || inited || !trackMediaUrl) {\n    return;\n  }\n  const hasServerData = window.isAuthenticated;\n  const isCurrent = activePlayerData?.id == id;\n  const trackInfo: TrackInfo | undefined = localTrackInfoDb.getById(id);\n  const favorite = hasServerData ? Boolean(dataset.favorite) : !!trackInfo?.favorite;\n  /* // DEBUG\n   * if (trackInfo) {\n   *   console.log('[tracksPlayer:initTrackPlayerNode] start', id, {\n   *     hasServerData,\n   *     isCurrent,\n   *     trackInfo,\n   *     favorite,\n   *     inited,\n   *     trackId, // \"1\"\n   *     trackMediaUrl, // \"/media/samples/gr-400x225.jpg\"\n   *     dataset,\n   *     trackNode,\n   *   });\n   *   if (id === 5) {\n   *     debugger;\n   *   }\n   * }\n   */\n  if (trackInfo) {\n    if (!hasServerData) {\n      // If no server data then update favorite from the local db\n      if (favorite) {\n        updateTrackFavoriteInDataset(trackNode, trackInfo.favorite);\n      }\n    }\n    // TODO: Get position from the server (dataset)\n    const {\n      duration,\n      // position,\n      // progress,\n    } = calculateAndUpdateTrackPosition(trackNode, trackInfo.position || 0, isCurrent);\n    const playedCount = Number(\n      trackNode.querySelector<HTMLElement>('.track-played-count')?.dataset.playedCount || '0',\n    );\n    // Update the local db date...\n    if (activePlayerData) {\n      activePlayerData.favorite = favorite;\n      activePlayerData.duration = duration;\n    }\n    /* TODO: Update local data (favorite, playedCount) from track node dataset?\n     * - id\n     * - favorite\n     * - lastPlayed\n     * - lastUpdated\n     * - playedCount\n     * - position\n     */\n    const hasChangedData = playedCount !== trackInfo.playedCount || favorite !== trackInfo.favorite;\n    if (hasChangedData) {\n      trackInfo.playedCount = playedCount;\n      trackInfo.favorite = favorite;\n      localTrackInfoDb.save(trackInfo);\n    }\n  }\n  if (isCurrent) {\n    activePlayerData.title = dataset.trackTitle || '';\n    currentTrackPlayer = trackNode;\n    requestAnimationFrame(() => {\n      trackNode.classList.toggle('current', true);\n    });\n    floatingPlayerUpdate({ floatingPlayerState: floatingPlayer.state, activePlayerData });\n  }\n  initTrackPlayerNodeControls(trackNode);\n}\n\nexport function initTracksPlayerWrapper(domNode: HTMLElement = document.body) {\n  allPlayers = domNode.querySelectorAll<HTMLElement>('.track-player[data-track-media-url]');\n  allPlayers.forEach(initTrackPlayerNode);\n  floatingPlayer.callbacks.addPlayStartCallback(floatingPlayerPlay);\n  floatingPlayer.callbacks.addPlayStopCallback(floatingPlayerStop);\n  floatingPlayer.callbacks.addUpdateCallback(floatingPlayerUpdate);\n  floatingPlayer.callbacks.addIncrementCallback(updateIncrementCallback);\n  floatingPlayer.callbacks.addFavoritesCallback(updateFavoritesCallback);\n  floatingPlayer.callbacks.addFavoriteCallback(updateSingleFavoriteCallback);\n}\n","import { acceptedCookiesId } from '../constants/acceptedCookiesId';\nimport { deleteAllCookies, setCookie } from '../helpers/CommonHelpers';\n\nfunction updateBannerGeometry(bannerNode: HTMLElement) {\n  const footerNode = document.querySelector<HTMLElement>('.template-footer');\n  if (!bannerNode || !footerNode) {\n    return;\n  }\n  const bannerHeight = bannerNode.clientHeight;\n  footerNode.style.marginBottom = `${bannerHeight}px`;\n}\n\nfunction handleAccept(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = 'allowed';\n  window.localStorage.setItem('cookies', value);\n  setCookie(acceptedCookiesId, value);\n  hideBanner(bannerNode!);\n}\n\nfunction handleReject(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = '';\n  window.localStorage.setItem(acceptedCookiesId, value);\n  deleteAllCookies();\n  setCookie(acceptedCookiesId, '');\n  hideBanner(bannerNode!);\n}\n\nfunction initActiveBanner(bannerNode: HTMLElement) {\n  const eventHandler = updateBannerGeometry.bind(bannerNode);\n  window.addEventListener('resize', eventHandler);\n  window.addEventListener('orientationchange', eventHandler);\n  updateBannerGeometry(bannerNode);\n  // Set button handlers...\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Accept')\n    ?.addEventListener('click', handleAccept);\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Reject')\n    ?.addEventListener('click', handleReject);\n}\n\nfunction hideBanner(bannerNode?: HTMLElement) {\n  if (bannerNode) {\n    bannerNode.remove();\n  }\n  document.body.classList.add('no-cookies-banner');\n}\n\nexport function initCookiesBanner() {\n  const bannerNode = document.querySelector<HTMLElement>('.cookies-banner');\n  if (!bannerNode) {\n    return;\n  }\n  const cookiesBannerStr = window.localStorage.getItem(acceptedCookiesId);\n  if (cookiesBannerStr == null) {\n    initActiveBanner(bannerNode);\n    return;\n  }\n  hideBanner(bannerNode);\n}\n","import { ActivePlayerData } from '../ActivePlayerData/ActivePlayerData';\nimport { FloatingPlayerState } from './FloatingPlayerState';\n\nexport interface FloatingPlayerUpdateData {\n  floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerIncrementData {\n  count?: number;\n  // floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerFavoritesData {\n  favorites: number[];\n}\nexport interface FloatingPlayerFavoriteData {\n  id: number;\n  favorite: boolean;\n  // activePlayerData: ActivePlayerData;\n}\ntype UpdateCallback = (data: FloatingPlayerUpdateData) => void;\ntype IncrementCallback = (data: FloatingPlayerIncrementData) => void;\ntype FavoritesCallback = (data: FloatingPlayerFavoritesData) => void;\ntype FavoriteCallback = (data: FloatingPlayerFavoriteData) => void;\ntype ErrorCallback = (error: Error | string) => void;\n\n// type HandlerId = 'play' | 'stop' | 'time';\nexport class FloatingPlayerCallbacks {\n  onPlayStartCallbacks: UpdateCallback[] = [];\n  onPlayStopCallbacks: UpdateCallback[] = [];\n  onUpdateCallbacks: UpdateCallback[] = [];\n  onIncrementCallbacks: IncrementCallback[] = [];\n  onFavoritesCallbacks: FavoritesCallback[] = [];\n  onFavoriteCallbacks: FavoriteCallback[] = [];\n  onErrorCallbacks: ErrorCallback[] = [];\n\n  // handlers: Record<HandlerId, ErrorCallback[]> = {};\n\n  addPlayStartCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStartCallbacks.includes(cb)) {\n      this.onPlayStartCallbacks.push(cb);\n    }\n  }\n\n  addPlayStopCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStopCallbacks.includes(cb)) {\n      this.onPlayStopCallbacks.push(cb);\n    }\n  }\n\n  addUpdateCallback(cb: UpdateCallback) {\n    if (cb && !this.onUpdateCallbacks.includes(cb)) {\n      this.onUpdateCallbacks.push(cb);\n    }\n  }\n\n  addIncrementCallback(cb: IncrementCallback) {\n    if (cb && !this.onIncrementCallbacks.includes(cb)) {\n      this.onIncrementCallbacks.push(cb);\n    }\n  }\n\n  addFavoriteCallback(cb: FavoriteCallback) {\n    if (cb && !this.onFavoriteCallbacks.includes(cb)) {\n      this.onFavoriteCallbacks.push(cb);\n    }\n  }\n\n  addFavoritesCallback(cb: FavoritesCallback) {\n    if (cb && !this.onFavoritesCallbacks.includes(cb)) {\n      this.onFavoritesCallbacks.push(cb);\n    }\n  }\n\n  addErrorCallback(cb: ErrorCallback) {\n    if (cb && !this.onErrorCallbacks.includes(cb)) {\n      this.onErrorCallbacks.push(cb);\n    }\n  }\n\n  // Invokers\n\n  invokePlayStart(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStartCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokePlayStop(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStopCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeUpdate(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onUpdateCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeIncrement(data: FloatingPlayerIncrementData) {\n    if (data.activePlayerData) {\n      this.onIncrementCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeFavorite(data: FloatingPlayerFavoriteData) {\n    this.onFavoriteCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeFavorites(data: FloatingPlayerFavoritesData) {\n    this.onFavoritesCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeError(error: Error | string) {\n    if (error) {\n      this.onErrorCallbacks.forEach((cb) => {\n        cb(error);\n      });\n    }\n  }\n}\n","import { getJsText } from '../../helpers/getJsText';\nimport { commonNotify } from '../../CommonNotify/CommonNotifySingleton';\nimport { formatDuration, getErrorText } from '../../helpers/CommonHelpers';\nimport { localTrackInfoDb } from '../../track-blocks/localTrackInfoDb';\n\nimport {\n  ActivePlayerData,\n  loadActivePlayerData,\n  saveActivePlayerData,\n} from '../ActivePlayerData/ActivePlayerData';\nimport { getActivePlayerDataFromTrackNode } from '../ActivePlayerData/getActivePlayerDataFromTrackNode';\nimport { sendApiRequest } from '../../helpers/sendApiRequest';\nimport { floatToStr } from '../../helpers/floatToStr';\nimport {\n  FloatingPlayerState,\n  loadFloatingPlayerState,\n  saveFloatingPlayerState,\n} from './FloatingPlayerState';\n\nimport { HiddenPlayer } from './HiddenPlayer';\nimport { FloatingPlayerCallbacks } from './FloatingPlayerCallbacks';\n\n// TODO: Update track title on the language change?\n\nconst TRUE = 'true';\n\n/** A value of forward/backward seek step */\nconst seekTimeSec = 1;\n\nexport class FloatingPlayer {\n  inited = false;\n  callbacks = new FloatingPlayerCallbacks();\n  audio?: HTMLAudioElement;\n  hiddenPlayer: HiddenPlayer = new HiddenPlayer();\n  activePlayerData?: ActivePlayerData;\n  state: FloatingPlayerState = {};\n  domNode?: HTMLElement | null;\n  incrementing?: boolean;\n  toggling: Record<number, boolean> = {};\n  seeking = false;\n\n  constructor() {\n    this.loadActivePlayerData();\n    this.loadFloatingPlayerState();\n    this.initDomNode();\n    this.updateAll();\n    // Check if it was recently playing...\n    const now = Date.now();\n    if (this.activePlayerData) {\n      this.ensureAudioLoaded();\n      if (\n        this.state.status === 'playing' &&\n        this.state.lastTimestamp &&\n        this.state.lastTimestamp > now - 5000\n      ) {\n        // TODO: Then resume playback...\n        /* console.log('[FloatingPlayerClass:constructor] Start play', {\n         *   activePlayerData: this.activePlayerData,\n         *   state: this.state,\n         * });\n         */\n        // TODO: Care about: `Uncaught (in promise) NotAllowedError: play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD`\n        this.playCurrentPlayer();\n      } else {\n        // Reset the status\n        delete this.state.status;\n      }\n    }\n  }\n\n  requireAudio() {\n    if (!this.audio) {\n      this.audio = this.hiddenPlayer.ensureHiddenPlayerAudio();\n      this.audio.addEventListener('canplay', this.handleAudioCanPlay.bind(this));\n      this.audio.addEventListener('playing', this.handleAudioPlay.bind(this));\n      this.audio.addEventListener('timeupdate', this.handleAudioTimeUpdate.bind(this));\n      this.audio.addEventListener('ended', this.handleAudioEnded.bind(this));\n      // source.addEventListener('error', this.handleAudioSourceError.bind(this));\n    }\n    return this.audio;\n  }\n\n  removeAudio() {\n    this.hiddenPlayer.removeHiddenPlayerAudio();\n    this.audio = undefined;\n  }\n\n  hasAudio() {\n    return !!this.audio;\n  }\n\n  hasAudioSource() {\n    return this.hiddenPlayer.hasSource();\n  }\n\n  requireDomNode() {\n    if (!this.domNode) {\n      this.domNode = document.querySelector<HTMLElement>('.floating-player');\n      this.hiddenPlayer.setParentDomNode(this.domNode!);\n    }\n    // TODO: Ensure created dom node?\n    if (!this.domNode) {\n      const error = new Error('No floating player node found');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireDomNode]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.domNode;\n  }\n\n  requireActivePlayerData() {\n    // TODO: Ensure data?\n    if (!this.activePlayerData) {\n      const error = new Error('No active player data set');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireActivePlayerData]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.activePlayerData;\n  }\n\n  // Sync persistent data...\n\n  loadActivePlayerData() {\n    this.activePlayerData = loadActivePlayerData();\n  }\n\n  saveActivePlayerData() {\n    saveActivePlayerData(this.activePlayerData);\n  }\n\n  loadFloatingPlayerState() {\n    this.state = loadFloatingPlayerState();\n  }\n\n  saveFloatingPlayerState() {\n    saveFloatingPlayerState(this.state);\n  }\n\n  // Dom node...\n\n  showFloatingPlayer() {\n    this.state.visible = true;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  hideFloatingPlayer() {\n    this.state.visible = false;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  // Updaters...\n\n  updateActivePlayerDataInDom() {\n    const domNode = this.requireDomNode();\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    const titleNode = domNode.querySelector<HTMLElement>('.title');\n    const durationNode = domNode.querySelector<HTMLElement>('.duration');\n    const imageNode = domNode.querySelector<HTMLElement>('.image');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      titleNode!.innerText = activePlayerData.title;\n      durationNode!.innerText = formatDuration(Math.floor(activePlayerData.duration * 1000));\n      imageNode!.style.backgroundImage = 'url(' + activePlayerData.imageUrl + ')';\n      if (activePlayerData.favorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n      const links = domNode.querySelectorAll<HTMLLinkElement>('.trackLink');\n      links.forEach((it) => {\n        it.setAttribute('href', `/tracks/${id}/`);\n      });\n    });\n  }\n\n  updateStateInDom() {\n    const domNode = this.requireDomNode();\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      if (this.state.status) {\n        dataset.status = this.state.status;\n      } else {\n        delete dataset.status;\n      }\n      document.body.classList.toggle('with-player', !!this.state.visible);\n    });\n  }\n\n  updatePositionInDom() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      dataset.position = floatToStr(this.state.position);\n      dataset.progress = floatToStr(this.state.progress);\n      domNode.style.setProperty('--progress', dataset.progress);\n      seekBarNode!.value = dataset.progress;\n    });\n  }\n\n  calculateProgress() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id, duration } = activePlayerData;\n    if (!duration) {\n      const error = new Error(`No duration provided for a track: ${id}`);\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:calculateProgress]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    const ratio = position / duration;\n    const progress = Math.min(100, ratio * 100);\n    return progress;\n  }\n\n  updateTrackPosition() {\n    const domNode = this.requireDomNode();\n    const timeNode = domNode.querySelector<HTMLElement>('.time');\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id } = activePlayerData;\n    const progress = this.calculateProgress();\n    this.state.progress = progress;\n    this.updatePositionInDom();\n    if (timeNode) {\n      requestAnimationFrame(() => {\n        timeNode.innerText = formatDuration(Math.floor(position * 1000));\n      });\n    }\n    localTrackInfoDb.updatePosition(id, position);\n  }\n\n  updateAll() {\n    if (this.activePlayerData) {\n      this.updateTrackPosition();\n    }\n    this.updateStateInDom();\n    this.updatePositionInDom();\n    if (this.activePlayerData) {\n      this.updateActivePlayerDataInDom();\n    }\n  }\n\n  // Audio handlers...\n\n  handleAudioTimeUpdate(ev: Event) {\n    if (this.seeking) {\n      return;\n    }\n    const currAudio = this.audio;\n    const audio = ev.currentTarget as HTMLAudioElement;\n    if (audio !== currAudio) {\n      return;\n    }\n    const activePlayerData = this.requireActivePlayerData();\n    const {\n      currentTime,\n      // readyState, // DEBUG\n    } = audio;\n    /* // DEBUG\n     * const source = audio.getElementsByTagName('SOURCE')[0] as HTMLSourceElement;\n     * console.log('[FloatingPlayerClass:handleAudioTimeUpdate]', {\n     *   currentTime,\n     *   readyState,\n     *   id: activePlayerData.id,\n     *   activePlayerData,\n     *   src: source.src,\n     *   source,\n     *   thisAudio: currAudio === audio,\n     *   currAudio,\n     *   audio,\n     * });\n     */\n    // TODO: Check loaded status?\n    if (this.state.position != currentTime) {\n      this.state.position = currentTime;\n      this.updateTrackPosition();\n      this.saveFloatingPlayerState();\n      this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n      localTrackInfoDb.updatePosition(activePlayerData.id, currentTime);\n    }\n  }\n\n  handleAudioCanPlay(_ev: Event) {\n    if (!this.state.loaded) {\n      this.state.loaded = true;\n      delete this.state.error;\n    }\n  }\n\n  handleAudioPlay(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.status = 'playing';\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStart({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleAudioEnded(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.incrementPlayedCount();\n    this.state.status = 'paused'; // stopped, ready?\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStop({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleError(err: Error | string) {\n    const errName = err instanceof Error && err.name;\n    // eslint-disable-next-line no-console\n    console.error('[FloatingPlayerClass:handleError]', {\n      err,\n    });\n    if (errName === 'AbortError') {\n      // NOTE: Do nothing on abort\n      return;\n    }\n    debugger; // eslint-disable-line no-debugger\n    this.state.error = getErrorText(err);\n    this.updateStateInDom();\n    commonNotify.showError(err);\n    this.callbacks.invokeError(err);\n  }\n\n  handleAudioSourceError(ev: Event) {\n    const srcElement = ev.currentTarget as HTMLSourceElement;\n    const { src, type } = srcElement;\n    const errMsg = getJsText('errorLoadingAudioFile') + ' ' + src + (type ? `( ${type})` : '');\n    const error = new Error(errMsg);\n    this.handleError(error);\n  }\n\n  /// Active player data\n\n  getActiveTrackId(): number | undefined {\n    return this.activePlayerData ? this.activePlayerData.id : undefined;\n  }\n\n  // Core handlers...\n\n  loadAudio() {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.loaded = false;\n    const source = this.hiddenPlayer.createHiddenPlayerSource({ src: activePlayerData.mediaUrl });\n    source.addEventListener('error', this.handleAudioSourceError.bind(this));\n  }\n\n  isAudioPlaying() {\n    const audio = this.audio;\n    return (\n      !!audio && audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > 2\n    );\n  }\n\n  isPlaying() {\n    return this.state.status === 'playing';\n  }\n\n  pauseCurrentPlayer() {\n    if (this.isAudioPlaying()) {\n      const audio = this.requireAudio();\n      audio.pause();\n    }\n    if (this.isPlaying()) {\n      this.state.status = 'paused';\n      this.updateStateInDom();\n      this.saveFloatingPlayerState();\n    }\n  }\n\n  playCurrentPlayer() {\n    const audio = this.requireAudio();\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.isAudioPlaying()) {\n      return;\n    }\n    if (\n      audio.ended ||\n      (this.state.position && this.state.position > activePlayerData.duration - 0.1)\n    ) {\n      // Start from the begining\n      this.state.position = 0;\n      audio.load();\n    }\n    this.updateTrackPosition();\n    this.callbacks.invokeUpdate({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n\n    audio.currentTime = this.state.position || 0;\n    const result = audio.play();\n    result.catch((err) => {\n      if (err.name === 'NotAllowedError') {\n        //  play() failed because the user didn't interact with the document first. -> Just cancel\n        this.state.status = undefined;\n        this.updateStateInDom();\n      } else {\n        this.handleError(err);\n      }\n    });\n  }\n\n  /** Play button click handler */\n  trackPlayHandler(_ev: MouseEvent) {\n    const isPlaying = this.isPlaying();\n    if (isPlaying) {\n      this.pauseCurrentPlayer();\n    } else {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Active player track data...\n\n  ensureAudioLoaded() {\n    if (!this.state.loaded || !this.hasAudio() || !this.hasAudioSource) {\n      this.loadAudio();\n    }\n  }\n\n  setActivePlayerData(activePlayerData: ActivePlayerData, position?: number) {\n    if (this.activePlayerData?.id !== activePlayerData.id) {\n      if (this.activePlayerData && this.isPlaying()) {\n        this.pauseCurrentPlayer();\n      }\n      this.state.loaded = false;\n      if (position != null) {\n        this.state.position = position;\n      }\n      this.removeAudio();\n      this.activePlayerData = activePlayerData;\n    }\n    this.saveActivePlayerData();\n    this.updateActivePlayerDataInDom();\n    this.ensureAudioLoaded();\n  }\n\n  setActiveTrack(trackNode: HTMLElement, position?: number) {\n    const activePlayerData = getActivePlayerDataFromTrackNode(trackNode);\n    this.setActivePlayerData(activePlayerData, position);\n  }\n\n  clearActiveData() {\n    this.activePlayerData = undefined;\n    this.hideFloatingPlayer();\n    this.removeAudio();\n  }\n\n  // Update related data\n\n  sendIncrementPlayedCount(id: number) {\n    const url = `/api/v1/tracks/${id}/increment-played-count/`;\n    return sendApiRequest(url, 'POST');\n  }\n\n  incrementPlayedCount() {\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.incrementing) {\n      return;\n    }\n    this.incrementing = true;\n    return this.sendIncrementPlayedCount(activePlayerData.id)\n      .then(({ played_count }: { played_count?: number }) => {\n        if (played_count != null) {\n          // Re-update local data with server data...\n          this.callbacks.invokeIncrement({ count: played_count, activePlayerData });\n        }\n        // TODO: Update other instances of this track on the page (eg, in player, or in other track listings)?\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('[FloatingPlayerClass:incrementPlayedCount:sendIncrementPlayedCount] error', {\n          err,\n        });\n        debugger; // eslint-disable-line no-debugger\n        commonNotify.showError(err);\n        // Increment locally (?)\n        this.callbacks.invokeIncrement({ activePlayerData });\n        throw err;\n      })\n      .finally(() => {\n        this.incrementing = false;\n      });\n  }\n\n  sendToggleFavoriteRequest(id: number, value: boolean) {\n    const url = `/api/v1/tracks/${id}/toggle-favorite/`;\n    return sendApiRequest(url, 'POST', { value });\n  }\n\n  toggleFavorite() {\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    this.toggleFavoriteById(id);\n  }\n\n  toggleFavoriteById(id: number) {\n    if (this.toggling[id]) {\n      return;\n    }\n    const activePlayerData = this.activePlayerData;\n    const isCurrent = id === activePlayerData?.id;\n    const trackInfo = localTrackInfoDb.getById(id);\n    const nextFavorite = !trackInfo?.favorite;\n    /* console.log('[FloatingPlayerClass:toggleFavoriteById]', {\n     *   activePlayerData,\n     *   isCurrent,\n     *   trackInfo,\n     *   nextFavorite,\n     * });\n     */\n    localTrackInfoDb.updateFavorite(id, nextFavorite);\n    if (isCurrent) {\n      activePlayerData.favorite = nextFavorite;\n      this.updateActivePlayerDataInDom();\n      this.saveActivePlayerData();\n    }\n    this.callbacks.invokeFavorite({ id, favorite: nextFavorite });\n    if (window.isAuthenticated) {\n      this.toggling[id] = true;\n      this.sendToggleFavoriteRequest(id, nextFavorite)\n        .then((results: { favorite_track_ids: number[] }) => {\n          const { favorite_track_ids } = results;\n          localTrackInfoDb.updateFavoritesByTrackIds(favorite_track_ids);\n          this.callbacks.invokeFavorites({\n            favorites: favorite_track_ids,\n          });\n          const msgId = nextFavorite ? 'trackAddedToFavorites' : 'trackRemovedFromFavorites';\n          commonNotify.showSuccess(getJsText(msgId));\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.error('[FloatingPlayerClass:toggleFavoriteById] error', {\n            err,\n          });\n          debugger; // eslint-disable-line no-debugger\n          commonNotify.showError(err);\n        })\n        .finally(() => {\n          this.toggling[id] = false;\n        });\n    }\n  }\n\n  seekPosition(position: number) {\n    this.seeking = true;\n    const audio = this.requireAudio();\n    audio.currentTime = position || 0;\n    this.state.position = position;\n    this.updateTrackPosition();\n    this.saveFloatingPlayerState();\n    const activePlayerData = this.requireActivePlayerData();\n    this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n    setTimeout(() => {\n      this.seeking = false;\n    }, 150);\n  }\n\n  seekRewind() {\n    const position = Math.max(0, (this.state.position || 0) - seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekForward() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    const position = Math.min(duration, (this.state.position || 0) + seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekBarHandle(ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    if (!duration) {\n      return;\n    }\n    const node = ev.currentTarget as HTMLInputElement;\n    const value = Number(node.value);\n    const position = (value * duration) / 100;\n    this.seekPosition(position);\n    if (!this.isPlaying()) {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Initilization...\n\n  initDomNode() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    if (seekBarNode) {\n      seekBarNode.addEventListener('input', this.seekBarHandle.bind(this));\n    }\n    const hideButton = domNode.querySelector<HTMLButtonElement>('.track-control-hide');\n    if (hideButton) {\n      hideButton.addEventListener('click', this.hideFloatingPlayer.bind(this));\n    }\n    const controls = domNode.querySelectorAll<HTMLButtonElement>('.track-control');\n    controls.forEach((node) => {\n      const { dataset } = node;\n      const { inited, controlId } = dataset;\n      if (inited) {\n        return;\n      }\n      if (controlId === 'rewind') {\n        node.addEventListener('click', this.seekRewind.bind(this));\n      }\n      if (controlId === 'forward') {\n        node.addEventListener('click', this.seekForward.bind(this));\n      }\n      if (controlId === 'toggleFavorite') {\n        node.addEventListener('click', this.toggleFavorite.bind(this));\n      }\n      if (controlId === 'play') {\n        node.addEventListener('click', this.trackPlayHandler.bind(this));\n      }\n      dataset.inited = TRUE;\n    });\n    this.inited = true;\n  }\n}\n","import { ActivePlayerData } from './ActivePlayerData';\n\nexport function getActivePlayerDataFromTrackNode(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n  const favorite = Boolean(dataset.favorite);\n  // const status = dataset.status;\n  const duration = parseFloat((dataset.trackDuration || '0').replace(',', '.'));\n  // const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  const mediaUrl = dataset.trackMediaUrl || '';\n  const imageNode = trackNode.querySelector<HTMLImageElement>('img.card-img');\n  const imageUrl = imageNode?.getAttribute('src') || '';\n  const title = dataset.trackTitle || '';\n  const activePlayerData: ActivePlayerData = {\n    id,\n    title,\n    imageUrl,\n    mediaUrl,\n    duration,\n    favorite,\n  };\n  return activePlayerData;\n}\n","import { FloatingPlayer } from './FloatingPlayerClass';\n\n// Singleton\nexport const floatingPlayer = new FloatingPlayer();\n\nexport function initFloatingPlayer() {\n  // console.log('[floatingPlayer:initFloatingPlayer]');\n}\n","function processLink(node: HTMLElement) {\n  if (!node.classList.contains('external')) {\n    node.classList.add('external');\n    node.setAttribute('target', '_blank');\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon', 'icon-external', 'bi', 'bi-box-arrow-up-right');\n    node.appendChild(nodeIcon);\n  }\n}\n\nfunction processTextBlock(node: HTMLElement) {\n  // Find external links...\n  const linkNodes = node.querySelectorAll<HTMLLinkElement>('a[href^=\"https://\"]');\n  linkNodes.forEach(processLink);\n}\n\nexport function processTextContent() {\n  const textNodes = document.querySelectorAll<HTMLElement>('.text-content');\n  textNodes.forEach(processTextBlock);\n}\n","/**\n * @desc Main entry point module (scripts)\n * @module src/assets/index.ts\n * @changed 2025.02.24, 22:12\n */\n\nimport { checkProjectVersion } from './checkProjectVersion';\nimport { initTracksPlayerWrapper } from './track-blocks/tracksPlayer';\nimport { initFloatingPlayer } from './entities/FloatingPlayer/floatingPlayer';\nimport { processTextContent } from './processTextContent';\nimport { initCookiesBanner } from './cookies-banner/cookiesBanner';\n\ninitCookiesBanner();\n\ncheckProjectVersion();\nprocessTextContent();\n\ninitTracksPlayerWrapper();\ninitFloatingPlayer();\n"],"names":["getMinorVersionFromProjectInfo","info","match","_e","getErrorText","error","Array","isArray","map","this","bind","join","Error","message","String","quoteHtmlAttr","str","preserveCR","crValue","replace","formatDuration","time","sec","min","hrs","items","Math","floor","val","idx","padStart","shift","filter","Boolean","setCookie","id","maxAgeSecs","parts","encodeURIComponent","push","fullCookie","document","cookie","floatToStr","num","isNaN","Number","toFixed","packDelim","finalPackDelimReg","RegExp","acceptedCookiesId","localTrackInfoDb","updatePlayedCount","playedCount","now","_now","Date","trackInfo","getOrCreate","undefined","lastPlayed","lastUpdated","insert","err","console","updatePosition","position","updateFavorite","favorite","_toggleInFavoritesIndex","updateFavoritesByTrackIds","ids","_getIndex","forEach","isFavorite","includes","_setFavoritesIndex","save","createNewRecord","getById","round","trackInfoToJsonStr","window","localStorage","setItem","_addToIndex","getFavorites","getAll","it","getItem","list","split","warn","trackInfoFromJsonStr","_getFavoritesIndex","n","_","favoritesIndex","favoritesCount","length","hasFavorites","body","classList","toggle","querySelectorAll","node","innerText","_addToFavoritesIndex","_removeFromFavoritesIndex","checkId","value","v","_setIndex","index","_removeFromIndex","_toggleInIndex","delete","removeItem","clearAll","getJsText","textNode","querySelector","innerHTML","trim","icons","success","commonNotify","timeoutDelay","inited","removeNotify","notifyData","handler","remove","clearTimeout","setTimeout","notifyRoot","removeChild","showNotify","mode","text","content","ensureInit","createElement","add","nodeIcon","appendChild","nodeText","requestAnimationFrame","removeNotifyHandler","addEventListener","showInfo","showSuccess","showWarn","showError","showDemo","init","createDomNode","rootNode","setAttribute","storageActivePlayerDataId","saveActivePlayerData","data","JSON","stringify","convertActivePlayerDataToJsonStr","loadActivePlayerData","raw","parse","title","imageUrl","mediaUrl","duration","convertActivePlayerDataFromJsonStr","sendApiRequest","url","method","requestData","headers","Accept","cookieId","cookiesList","i","s","decodeURIComponent","getCookie","fetch","credentials","then","res","ok","status","statusText","json","errMsg","detail","catch","storageFloatingPlayerStateId","saveFloatingPlayerState","lastTimestamp","visible","progress","convertFloatingPlayerStateToJsonStr","loadFloatingPlayerState","convertFloatingPlayerStateFromJsonStr","allPlayers","bannerNode","domNode","setParentDomNode","parentDomNode","requireParentDomNode","ensureHiddenPlayer","hiddenPlayerNode","audio","hasAudio","audioNode","hasSource","sourceNode","ensureHiddenPlayerAudio","createHiddenPlayerSource","opts","removeHiddenPlayerSource","type","src","removeHiddenPlayerAudio","pause","from","getElementsByTagName","onPlayStartCallbacks","onPlayStopCallbacks","onUpdateCallbacks","onIncrementCallbacks","onFavoritesCallbacks","onFavoriteCallbacks","onErrorCallbacks","addPlayStartCallback","cb","addPlayStopCallback","addUpdateCallback","addIncrementCallback","addFavoriteCallback","addFavoritesCallback","addErrorCallback","invokePlayStart","activePlayerData","invokePlayStop","invokeUpdate","invokeIncrement","invokeFavorite","invokeFavorites","invokeError","TRUE","callbacks","FloatingPlayerCallbacks","hiddenPlayer","HiddenPlayer","state","toggling","seeking","initDomNode","updateAll","ensureAudioLoaded","playCurrentPlayer","requireAudio","handleAudioCanPlay","handleAudioPlay","handleAudioTimeUpdate","handleAudioEnded","removeAudio","hasAudioSource","requireDomNode","requireActivePlayerData","showFloatingPlayer","updateStateInDom","hideFloatingPlayer","updateActivePlayerDataInDom","titleNode","durationNode","imageNode","dataset","style","backgroundImage","updatePositionInDom","seekBarNode","setProperty","calculateProgress","ratio","updateTrackPosition","timeNode","ev","currAudio","currentTarget","currentTime","floatingPlayerState","_ev","loaded","incrementPlayedCount","handleError","errName","name","handleAudioSourceError","srcElement","getActiveTrackId","loadAudio","isAudioPlaying","paused","ended","readyState","isPlaying","pauseCurrentPlayer","load","play","trackPlayHandler","setActivePlayerData","setActiveTrack","trackNode","trackId","parseFloat","trackDuration","trackMediaUrl","getAttribute","trackTitle","getActivePlayerDataFromTrackNode","clearActiveData","sendIncrementPlayedCount","incrementing","played_count","count","finally","sendToggleFavoriteRequest","toggleFavorite","toggleFavoriteById","isCurrent","nextFavorite","isAuthenticated","results","favorite_track_ids","favorites","msgId","seekPosition","seekRewind","max","seekForward","seekBarHandle","hideButton","controlId","floatingPlayer","FloatingPlayer","currentTrackPlayer","floatingPlayerUpdate","getTrackNode","timeFormatted","floatingPlayerPlay","floatingPlayerStop","find","updateIncrementCallback","updatedPlayedCount","strValue","valueNode","closest","updateTrackPlayedCount","stopPreviousPlayer","playingId","isFloatingPlaying","contains","updateTrackFavoriteInDataset","isCurrentFavorite","updateSingleFavoriteCallback","updateFavoritesCallback","initTrackPlayerNode","hasServerData","calculateAndUpdateTrackPosition","initTrackPlayerNodeControls","processLink","processTextBlock","updateBannerGeometry","footerNode","bannerHeight","clientHeight","marginBottom","handleAccept","event","hideBanner","handleReject","eqPos","indexOf","substring","eventHandler","initActiveBanner","oldInfo","newInfo","projectInfo","oldVersion","newVersion","checkProjectVersion"],"sourceRoot":""}