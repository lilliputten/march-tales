{"version":3,"file":"scripts.js","mappings":"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","sources":["webpack://march-tales/./src/assets/checkProjectVersion.ts","webpack://march-tales/./src/assets/helpers/CommonHelpers.js","webpack://march-tales/./src/assets/helpers/floatToStr.ts","webpack://march-tales/./src/assets/constants/packDelim.ts","webpack://march-tales/./src/assets/track-blocks/TrackInfo.ts","webpack://march-tales/./src/assets/constants/acceptedCookiesId.ts","webpack://march-tales/./src/assets/track-blocks/localTrackInfoDb.ts","webpack://march-tales/./src/assets/helpers/getJsText.ts","webpack://march-tales/./src/assets/CommonNotify/CommonNotifySingleton.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/ActivePlayerData.ts","webpack://march-tales/./src/assets/helpers/sendApiRequest.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerState.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/HiddenPlayer.ts","webpack://march-tales/./src/assets/track-blocks/tracksPlayer.ts","webpack://march-tales/./src/assets/cookies-banner/cookiesBanner.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerCallbacks.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerClass.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/getActivePlayerDataFromTrackNode.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/floatingPlayer.ts","webpack://march-tales/./src/assets/processTextContent.ts","webpack://march-tales/./src/assets/index.ts"],"sourcesContent":["/** Get major and minor versions in form '1.2' from a string 'march-tales v.1.2.20 / 2025.02.20 15:22:00 +0300' */\nfunction getMinorVersionFromProjectInfo(info?: string | null) {\n  if (!info) {\n    return undefined;\n  }\n  try {\n    const match = info.match(/^\\S+ v\\.(\\d+\\.\\d+)/);\n    if (match) {\n      const v = match[1];\n      return v;\n    }\n  } catch (\n    _e // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // NOOP\n    return undefined;\n  }\n}\n\nexport function checkProjectVersion() {\n  const oldInfo = window.localStorage.getItem('projectInfo');\n  const newInfo = window.projectInfo;\n  if (newInfo && newInfo !== oldInfo) {\n    const oldVersion = getMinorVersionFromProjectInfo(oldInfo);\n    const newVersion = getMinorVersionFromProjectInfo(newInfo);\n    if (newVersion !== oldVersion) {\n      // TODO: To clear some stored data etc?\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[checkProjectVersion] Project version has changed',\n        newVersion,\n        '<->',\n        oldVersion,\n        {\n          oldInfo,\n          newInfo,\n          oldVersion,\n          newVersion,\n        },\n      );\n      // debugger; // eslint-disable-line no-debugger\n    }\n    window.localStorage.setItem('projectInfo', newInfo);\n  }\n}\n","// @ts-check\n\nexport function NOOP() {}\n\n/** Compare two arrays with scalar (number, string, boolean) values\n * @param {(number | string | boolean)[]} a1\n * @param {(number | string | boolean)[]} a2\n * @return {boolean}\n */\nexport function compareArrays(a1, a2) {\n  if (!a1 || !a1) {\n    return a1 === a2;\n  }\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  // Compare all the items...\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** getErrorText - Return plain text for error.\n * @param {string|Error|string[]|Error[]} error - Error or errors list.\n * @return {string}\n */\nexport function getErrorText(error) {\n  if (!error) {\n    return '';\n  }\n  if (Array.isArray(error)) {\n    return error.map(this.getErrorText.bind(this)).join('\\n');\n  }\n  if (error instanceof Error) {\n    error = error.message;\n  } else if (typeof error !== 'string') {\n    // TODO?\n    error = String(error);\n  }\n  return error;\n}\n\n/** quoteHtmlAttr -- quote all invalid characters for html\n * @param {string} str\n * @param {boolean} [preserveCR]\n */\nexport function quoteHtmlAttr(str, preserveCR) {\n  const crValue = preserveCR ? '&#13;' : '\\n';\n  return (\n    String(str) // Forces the conversion to string\n      .replace(/&/g, '&amp;') // This MUST be the 1st replacement\n      .replace(/'/g, '&apos;') // The 4 other predefined entities, required\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      // You may add other replacements here for HTML only (but it's not\n      // necessary). Or for XML, only if the named entities are defined in its\n      // DTD.\n      .replace(/\\r\\n/g, crValue) // Must be before the next replacement\n      .replace(/[\\r\\n]/g, crValue)\n  );\n}\n\n/** htmlToElement -- Create dom node instance from html string\n * @param {string} html - Html representing a single element\n * @return {HTMLElement}\n */\nexport function htmlToElement(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return /** @type HTMLElement */ (content.firstChild);\n}\n\n/** htmlToElements -- Convert text html representation to HTMLCollection object\n * @param {string|string[]} html\n * @return {HTMLCollection}\n */\nexport function htmlToElements(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return content.children;\n}\n\n/** updateNodeContent -- Replace all inner dom node content.\n * @param {Element} node\n * @param {THtmlContent} content\n */\nexport function updateNodeContent(node, content) {\n  if (!node) {\n    throw new Error('Undefined node to update content');\n  }\n  if (typeof content === 'string') {\n    // Replace with string content...\n    node.innerHTML = content;\n  } else if (Array.isArray(content)) {\n    // Replace multiple elements...\n    node.replaceChildren.apply(node, content);\n  } else {\n    // Replace single element...\n    node.replaceChildren(content);\n  }\n}\n\n/** decodeQuery\n * @param {string | string[]} qs\n * @param {string} [sep]\n * @param {string} [eq]\n * @param {any} [options]\n * @returns {{}}\n */\nexport function decodeQuery(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  /** @type {Record<string, unknown> | unknown[]} */\n  const obj = {};\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n  const regexp = /\\+/g;\n  qs = qs.split(sep);\n  let maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n  let len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n  for (let i = 0; i < len; ++i) {\n    const x = qs[i].replace(regexp, '%20'),\n      idx = x.indexOf(eq);\n    let kstr, vstr;\n    if (idx >= 0) {\n      kstr = x.substring(0, idx);\n      vstr = x.substring(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n    const k = decodeURIComponent(kstr);\n    const v = decodeURIComponent(vstr);\n    const it = obj[k];\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(it)) {\n      it.push(v);\n    } else {\n      obj[k] = [it, v];\n    }\n  }\n  return obj;\n}\n\n/** parseQuery -- Parse url query string (in form `?xx=yy&...` or `xx=yy&...`)\n * @param {string} search  - Query string\n * @return {Record<string, string>} query - Query object\n */\nexport function parseQuery(search) {\n  if (!search) {\n    return {};\n  }\n  if (search.indexOf('?') === 0) {\n    search = search.substring(1);\n  }\n  return decodeQuery(search);\n}\n\n/** makeQuery\n * @param {Record<string, string | number | boolean> | {}} params\n * @param {{ addQuestionSymbol?: boolean; useEmptyStrings?: boolean; useUndefinedValues?: boolean }} opts\n * @returns {string}\n */\nexport function makeQuery(params, opts = {}) {\n  let url = Object.entries(params)\n    .map(([id, val]) => {\n      const valStr = String(val);\n      if (val == undefined && !opts.useUndefinedValues) {\n        return undefined;\n      }\n      if (valStr === '' && !opts.useEmptyStrings) {\n        return undefined;\n      }\n      return encodeURI(id) + '=' + encodeURI(String(val == undefined ? '' : val));\n    })\n    .filter(Boolean)\n    .join('&');\n  if (opts.addQuestionSymbol && url) {\n    url = '?' + url;\n  }\n  return url;\n}\n\n/** Dynamically load external script\n * @param {string} url\n * @return {Promise<Event>}\n */\nexport function addScript(url) {\n  return new Promise((resolve, reject) => {\n    // document.write('<script src=\"' + url + '\"></script>');\n    const script = document.createElement('script');\n    script.setAttribute('src', url);\n    script.addEventListener('load', resolve);\n    script.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load script resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addScript]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(script);\n  });\n}\n\n/** Dynamically load external css\n * @param {string} url\n * @return {Promise<unknown>}\n */\nexport function addCssStyle(url) {\n  return new Promise((resolve, reject) => {\n    // Try to find exists node...\n    const testNode = document.head.querySelector(\n      'link[href=\"' + url + '\"], link[data-url=\"' + url + '\"]',\n    );\n    if (testNode) {\n      // Style already found!\n      return resolve({ type: 'already-loaded', target: testNode });\n    }\n    // reject(new Error('test')); // DEBUG: Test errors catching\n    const node = document.createElement('link');\n    node.setAttribute('href', url);\n    node.setAttribute('type', 'text/css');\n    node.setAttribute('rel', 'stylesheet');\n    node.setAttribute('data-url', url);\n    node.addEventListener('load', resolve);\n    node.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load css resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addCssStyle]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(node);\n  });\n}\n\n/**\n * @param {HTMLSelectElement} node\n * @param {(string|number)[]} values\n */\nexport function setMultipleSelectValues(node, values) {\n  const strValues = values.map(String);\n  const options = Array.from(node.options);\n  options.forEach((item) => {\n    const { value, selected } = item;\n    const isSelected = strValues.includes(value);\n    if (isSelected !== selected) {\n      item.selected = isSelected;\n    }\n  });\n}\n\n/** processMultipleRequestErrors\n * @param {Response[]} resList\n * @return {Error[]}\n */\nexport function processMultipleRequestErrors(resList) {\n  return /** @type {Error[]} */ (\n    resList\n      .map((res) => {\n        if (!res.ok) {\n          return new Error(`Can't load url '${res.url}': ${res.statusText}, ${res.status}`);\n        }\n      })\n      .filter(Boolean)\n  );\n}\n\n/**\n * @param {number} n\n * @param {TNormalizedFloatStrOptions} [opts={}]\n * @returns {string}\n */\nexport function normalizedFloatStr(n, opts = {}) {\n  const {\n    // prettier-ignore\n    fixedPoint = 2,\n    stripFixedZeros = true,\n  } = opts;\n  let str = n.toFixed(fixedPoint);\n  if (stripFixedZeros) {\n    str = str.replace(/\\.*0+$/, '');\n  }\n  return str;\n}\n/**\n * @param {number} size\n * @param {TGetApproxSizeOptions} [opts={}]\n * @returns {[number | string, string]}\n */\nexport function getApproxSize(size, opts = {}) {\n  const { normalize } = opts;\n  const levels = [\n    'B', // Bytes\n    'K', // Kilobytes\n    'M', // Megabytes\n    'G', // Gigabites\n  ];\n  const lastLevel = levels.length - 1;\n  const range = 1024;\n  let level = 0;\n  while (level < lastLevel) {\n    if (size < range) {\n      break;\n    }\n    size /= range;\n    level++;\n  }\n  const currLevelStr = levels[level];\n  /** Result: final number or normalized representation (depends on option's `normalize`)\n   * @type {number | string}\n   */\n  let result = size;\n  if (normalize) {\n    const normalizeOpts = typeof normalize === 'object' ? normalize : undefined;\n    result = normalizedFloatStr(size, normalizeOpts);\n  }\n  return [result, currLevelStr];\n}\n\n/** @param {number} time - Time duration, ms\n * @return {string}\n */\nexport function formatDuration(time) {\n  const sec = time / 1000;\n  const min = sec / 60;\n  const hrs = min / 60;\n  const days = hrs / 24;\n  const srcItems = [\n    // prettier-ignore\n    days,\n    hrs % 24,\n    min % 60,\n    sec % 60,\n  ];\n  const items = srcItems.map(Math.floor).map((val, idx) => {\n    // Not mins and secs and empty...\n    if (idx < 2 && !val) {\n      return undefined;\n    }\n    // Hours, mins, secs...\n    if (idx >= 1) {\n      return String(val).padStart(2, '0');\n    }\n    // Days...\n    if (!idx) {\n      return String(val) + 'd';\n    }\n  });\n  /* console.log('[CommonHelpers:formatDuration]', {\n   *   sec,\n   *   min,\n   *   hrs,\n   *   days,\n   *   items,\n   *   srcItems,\n   *   time,\n   * });\n   */\n  const daysStr = items.shift();\n  return [\n    // prettier-ignore\n    daysStr,\n    items.filter(Boolean).join(':'),\n  ]\n    .filter(Boolean)\n    .join(' ');\n}\n\n/** @param {string} str */\nexport function getAsyncHash(str) {\n  const encoder = new TextEncoder();\n  const buf = encoder.encode(str);\n  return crypto.subtle.digest('SHA-256', buf).then((aryBuf) => {\n    const ary = new Uint8Array(aryBuf);\n    const res = Array.from(ary)\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n    return res;\n  });\n}\n\n/** @param {string} cookieId */\nexport function getCookie(cookieId) {\n  const cookiesStr = document.cookie;\n  const cookiesList = cookiesStr.split(';'); // .map((s) => s.trim().split('='));\n  for (let i = 0; i < cookiesList.length; i++) {\n    const s = cookiesList[i];\n    const [id, val] = s.trim().split('=').map(decodeURIComponent);\n    if (id === cookieId) {\n      return val;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {string} id\n * @param {string} val\n * @param {number} [maxAgeSecs] -- Seconds of expire period\n */\nexport function setCookie(id, val, maxAgeSecs) {\n  const cookieVal = [id, val || ''].map(encodeURIComponent).join('=');\n  const parts = [\n    // prettier-ignore\n    cookieVal,\n  ];\n  if (maxAgeSecs) {\n    parts.push('max-age=' + maxAgeSecs);\n  }\n  const fullCookie = parts.filter(Boolean).join(';');\n  document.cookie = fullCookie;\n}\n\nexport function deleteAllCookies() {\n  document.cookie.split(';').forEach((cookie) => {\n    const eqPos = cookie.indexOf('=');\n    const name = eqPos > -1 ? cookie.substring(0, eqPos) : cookie;\n    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT';\n  });\n}\n","export function floatToStr(num: number | undefined) {\n  if (!num) {\n    return '0';\n  }\n  if (typeof num === 'string') {\n    if (isNaN(num)) {\n      return '0';\n    }\n    num = Number(num);\n  }\n  return num\n    .toFixed(3)\n    .replace(/(\\.\\d+)0+$/, '$1')\n    .replace(/\\.0+$/, '');\n}\n","// Use dashes to save space in cookies (commas are converted to `%2C`-like entities)\nexport const packDelim = '-';\n","import { floatToStr } from '../helpers/floatToStr';\nimport { packDelim } from '../constants/packDelim';\n\nexport interface TrackInfo {\n  id: number; // track.id\n  favorite: boolean;\n  playedCount: number; // track.played_count (but only for current user!).\n  position: number; // position?.inMilliseconds ?? 0\n  lastUpdated: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n  lastPlayed: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n}\n\nconst finalPackDelimReg = new RegExp(packDelim + '+$');\n\nexport function trackInfoFromJsonStr(str: string): TrackInfo | undefined {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const list = str.split(packDelim);\n    const [\n      // Keep the order!\n      id,\n      favorite,\n      playedCount,\n      position,\n      lastUpdated, // Timestamp\n      lastPlayed, // Timestamp\n    ] = list;\n    const data: TrackInfo = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      favorite: Boolean(favorite),\n      playedCount: playedCount ? Number(playedCount) : 0,\n      position: position ? Number(position) : 0,\n      lastUpdated: lastUpdated ? Number(lastUpdated) * 1000 : 0, // Timestamp\n      lastPlayed: lastPlayed ? Number(lastPlayed) * 1000 : 0, // Timestamp\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[TrackInfo:trackInfoFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nexport function trackInfoToJsonStr(trackInfo: TrackInfo) {\n  const {\n    // Keep the order!\n    id,\n    favorite,\n    playedCount,\n    position,\n    lastUpdated,\n    lastPlayed,\n  } = trackInfo;\n  const list = [\n    // Keep the order!\n    id ? Number(id) : undefined,\n    favorite ? Number(favorite) : undefined,\n    playedCount ? Number(playedCount) : undefined,\n    position ? floatToStr(position) : undefined, // Use fixed decimal presentation for floats\n    lastUpdated ? Math.round(lastUpdated / 1000) : undefined, // Timestamp\n    lastPlayed ? Math.round(lastPlayed / 1000) : undefined, // Timestamp\n  ];\n  return list.join(packDelim).replace(finalPackDelimReg, '');\n}\n","export const acceptedCookiesId = 'cookies';\n","import { TrackInfo, trackInfoFromJsonStr, trackInfoToJsonStr } from './TrackInfo';\nimport { getCookie, setCookie } from '../helpers/CommonHelpers';\nimport { packDelim } from '../constants/packDelim';\nimport { acceptedCookiesId } from '../constants/acceptedCookiesId';\n\nclass LocalTrackInfoDb {\n  // End-user api\n\n  updatePlayedCount(id: number, playedCount?: number, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      if (playedCount == undefined || isNaN(playedCount)) {\n        trackInfo.playedCount = trackInfo.playedCount ? trackInfo.playedCount + 1 : 1;\n      } else {\n        trackInfo.playedCount = playedCount;\n      }\n      trackInfo.lastPlayed = _now;\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:incrementPlayedCount]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updatePosition(id: number, position: number, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.position = position;\n      trackInfo.lastPlayed = _now; // ???\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:updatePosition]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavorite(id: number, favorite: boolean, now?: number) {\n    try {\n      const _now = now || Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.favorite = favorite;\n      trackInfo.lastUpdated = _now;\n      /* console.log('[localTrackInfoDb:updateFavorite]', {\n       *   id,\n       *   favorite,\n       *   trackInfo,\n       * });\n       */\n      this.insert(trackInfo);\n      this._toggleInFavoritesIndex(id, favorite);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:setFavorite]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavoritesByTrackIds(ids: number[], now?: number) {\n    const _now = now || Date.now();\n    const index = this._getIndex();\n    index.forEach((id) => {\n      const isFavorite = ids.includes(id);\n      const trackInfo = this.getOrCreate(id);\n      if (trackInfo.favorite !== isFavorite) {\n        trackInfo.favorite = isFavorite;\n        trackInfo.lastUpdated = _now;\n        this.insert(trackInfo);\n      }\n    });\n    /* console.log('[localTrackInfoDb:updateFavoritesByTrackIds]', {\n     *   ids,\n     * });\n     */\n    this._setFavoritesIndex(ids);\n  }\n\n  save(trackInfo: TrackInfo, now?: number) {\n    try {\n      const _now = now || Date.now();\n      trackInfo.lastPlayed = _now; // ???\n      trackInfo.lastUpdated = _now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      // const testTrackInfo = await this.getById(id);\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:save]', err.message, {\n        err,\n        trackInfo,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  // Low-level api\n\n  createNewRecord(id: number) {\n    const now = Date.now();\n    const trackInfo: TrackInfo = {\n      id: id, // track.id\n      favorite: false,\n      playedCount: 0, // track.played_count (but only for current user!).\n      position: 0, // position\n      lastUpdated: now, // DateTime.now()\n      lastPlayed: 0, // DateTime.now()\n    };\n    return trackInfo;\n  }\n\n  getOrCreate(id: number) {\n    return this.getById(id) || this.createNewRecord(id);\n  }\n\n  /// Create or update the record. (Returns inserted/updated record id.)\n  insert(trackInfo: TrackInfo) {\n    const { id } = trackInfo;\n    const str = trackInfoToJsonStr(trackInfo);\n    /* console.log('[localTrackInfoDb:insert]', {\n     *   id,\n     *   str,\n     *   trackInfo,\n     * });\n     */\n    window.localStorage.setItem('ti-' + id, str);\n    this._addToIndex(id);\n  }\n\n  getFavorites() {\n    return this.getAll().filter((it) => it.favorite);\n  }\n\n  getById(id: number): TrackInfo | undefined {\n    const str = window.localStorage.getItem('ti-' + id);\n    if (!str) {\n      return undefined;\n    }\n    return trackInfoFromJsonStr(str);\n  }\n\n  _getFavoritesIndex() {\n    try {\n      const str = window.localStorage.getItem('favorites');\n      if (!str) {\n        return [] as number[];\n      }\n      const list = str\n        .split(packDelim)\n        .map(Number)\n        .filter((n) => !isNaN(n)) as number[];\n      return list;\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setFavoritesIndex(favoritesIndex: number[]) {\n    const list = favoritesIndex.filter((n) => !isNaN(n)).filter(Boolean);\n    const str = list.join(packDelim);\n    window.localStorage.setItem('favorites', str);\n    // Update cookie value and document status\n    const favoritesCount = list.length;\n    const hasFavorites = !!favoritesCount;\n    document.body.classList.toggle('has-favorites', hasFavorites);\n    // Update count texts\n    document.querySelectorAll<HTMLElement>('.favorites-count').forEach((node) => {\n      node.innerText = String(favoritesCount);\n    });\n    // Update cookie\n    if (getCookie(acceptedCookiesId)) {\n      setCookie('favorites', str);\n    }\n  }\n\n  _addToFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (!favoritesIndex.includes(id)) {\n      favoritesIndex.push(id);\n      this._setFavoritesIndex(favoritesIndex);\n    }\n  }\n\n  _removeFromFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (favoritesIndex.includes(id)) {\n      this._setFavoritesIndex(favoritesIndex.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInFavoritesIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToFavoritesIndex(id);\n    } else {\n      this._removeFromFavoritesIndex(id);\n    }\n  }\n\n  _getIndex() {\n    try {\n      const str = window.localStorage.getItem('ti-index');\n      return (str ? str.split(packDelim).map((v) => (v ? Number(v) : 0)) : []) as number[];\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setIndex(index: number[]) {\n    window.localStorage.setItem('ti-index', index.join(packDelim));\n  }\n\n  _addToIndex(id: number) {\n    const index = this._getIndex();\n    if (!index.includes(id)) {\n      index.push(id);\n      this._setIndex(index);\n    }\n  }\n\n  _removeFromIndex(id: number) {\n    const index = this._getIndex();\n    if (index.includes(id)) {\n      this._setIndex(index.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToIndex(id);\n    } else {\n      this._removeFromIndex(id);\n    }\n  }\n\n  getAll() {\n    const index = this._getIndex();\n    const list: TrackInfo[] = index\n      .map((id) => {\n        return this.getById(id);\n      })\n      .filter(Boolean) as TrackInfo[];\n    return list;\n  }\n\n  delete(id: number) {\n    window.localStorage.removeItem('ti-' + id);\n    this._removeFromIndex(id);\n  }\n\n  clearAll() {\n    const index = this._getIndex();\n    index.forEach((id) => {\n      window.localStorage.removeItem('ti-' + id);\n    });\n    this._setIndex([]);\n  }\n}\n\n// Create a singleton\nexport const localTrackInfoDb = new LocalTrackInfoDb();\n","import { quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nexport function getJsText(id: string) {\n  const textNode = document.body.querySelector('#js-texts #' + id);\n  if (!textNode) {\n    // eslint-disable-next-line no-console\n    console.warn('[getJsText] Can not find js text node for id:', id);\n  }\n  const text = textNode?.innerHTML || id;\n  return quoteHtmlAttr(text).trim();\n}\n","import * as CommonHelpers from '../helpers/CommonHelpers';\n\n/** Toast types */\ntype TMode = 'info' | 'error' | 'warn' | 'success';\n\n/** Icon shapes (move to constants?) */\nconst icons: Record<TMode, string> = {\n  success: 'bi-check',\n  error: 'bi-exclamation-triangle-fill',\n  warn: 'bi-bell-fill',\n  info: 'bi-info-lg',\n};\n\nconst iconClassNamePrefix = 'bi';\n\ninterface TNotifyData {\n  node: HTMLDivElement;\n  handler?: TSetTimeout;\n}\n\n// Define module...\nclass CommonNotify {\n  notifyRoot?: HTMLDivElement;\n\n  timeoutDelay = 3000;\n\n  inited = false;\n\n  // Methods...\n\n  removeNotify(notifyData: TNotifyData) {\n    const { node, handler } = notifyData;\n    // Play animation...\n    node.classList.remove('active');\n    if (handler) {\n      clearTimeout(handler);\n      notifyData.handler = undefined;\n    }\n    setTimeout(() => {\n      // ...And remove node (TODO: Check if node still exists in dom tree)...\n      try {\n        this.notifyRoot?.removeChild(node);\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n    }, 250); // Value of `var(--common-animation-time)`\n  }\n\n  /** showNotify\n   * @param {'info' | 'error' | 'warn' | 'success'} mode - Message type ('info' is default)\n   * @param {string|Error} text - Message content\n   */\n  showNotify(mode: TMode, text: string | Error) {\n    this.ensureInit();\n    if (!text) {\n      // If only one parameters passed assume it as message with default type\n      text = mode;\n      mode = 'info';\n    }\n    let content: string;\n    if (text instanceof Error) {\n      // Convert error object to the plain text...\n      content = CommonHelpers.getErrorText(text);\n    } else {\n      content = String(text);\n    }\n    // Create node...\n    const node = document.createElement('div');\n    node.classList.add('notify');\n    node.classList.add('notify-' + mode);\n    // Add icon...\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon');\n    nodeIcon.classList.add(iconClassNamePrefix);\n    nodeIcon.classList.add(icons[mode]);\n    node.appendChild(nodeIcon);\n    // Add text...\n    const nodeText = document.createElement('div');\n    nodeText.classList.add('text');\n    nodeText.innerHTML = content;\n    node.appendChild(nodeText);\n    this.notifyRoot?.appendChild(node);\n    // Play appearing animation...\n    window.requestAnimationFrame(() => {\n      setTimeout(() => {\n        node.classList.add('active');\n      }, 10);\n    });\n    // Remove node after delay...\n    const notifyData: TNotifyData = { node, handler: undefined };\n    const removeNotifyHandler = this.removeNotify.bind(this, notifyData);\n    notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    // Stop & restore timer on mouse in and out events...\n    node.addEventListener('mouseenter', () => {\n      // Clear timer...\n      clearTimeout(notifyData.handler);\n    });\n    node.addEventListener('mouseleave', () => {\n      // Resume timer...\n      notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    });\n    // Click handler...\n    node.addEventListener('click', removeNotifyHandler);\n  }\n\n  // Some shorthands...\n\n  /** @param {string|Error} text - Message content */\n  showInfo(text: string | Error) {\n    this.showNotify('info', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showSuccess(text: string | Error) {\n    this.showNotify('success', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showWarn(text: string | Error) {\n    this.showNotify('warn', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showError(text: string | Error) {\n    this.showNotify('error', text);\n  }\n\n  // Demo...\n\n  showDemo() {\n    // DEBUG: Show sample notifiers...\n    this.showInfo('Info');\n    this.showSuccess('Success');\n    this.showWarn('Warn');\n    this.showError('Error');\n  }\n\n  // Initialization...\n\n  /** Ensure the modal has initiazlized */\n  ensureInit() {\n    this.init();\n  }\n\n  createDomNode() {\n    // TODO: To use bootstrap toasts?\n    const rootNode = document.body;\n    const notifyRoot = document.createElement('div');\n    notifyRoot.classList.add('notify-root');\n    notifyRoot.setAttribute('id', 'notify-root');\n    rootNode.appendChild(notifyRoot);\n    this.notifyRoot = notifyRoot;\n  }\n\n  /** Initialize nodule. */\n  init() {\n    if (!this.inited) {\n      this.createDomNode();\n      this.inited = true;\n    }\n  }\n}\n\n// Create and export singletone\nexport const commonNotify = new CommonNotify();\n\n// commonNotify.init();\n","export interface ActivePlayerData {\n  id: number;\n  title: string;\n  imageUrl: string;\n  mediaUrl: string;\n  duration: number;\n  favorite: boolean;\n}\n\nconst storageActivePlayerDataId = 'ActivePlayerData';\n\nfunction convertActivePlayerDataFromJsonStr(str?: string | null) {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const raw = JSON.parse(str);\n    // const list = str.split(',');\n    const {\n      // Keep the order!\n      id,\n      title,\n      imageUrl,\n      mediaUrl,\n      duration,\n      favorite,\n    } = raw;\n    const data: ActivePlayerData = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      title: title ? String(title) : '',\n      imageUrl: imageUrl ? String(imageUrl) : '',\n      mediaUrl: mediaUrl ? String(mediaUrl) : '',\n      duration: duration ? Number(duration) : 0,\n      favorite: Boolean(favorite),\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[ActivePlayerData:storageActivePlayerDataId] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nfunction convertActivePlayerDataToJsonStr(data: ActivePlayerData) {\n  return JSON.stringify(data);\n}\n\nexport function saveActivePlayerData(data?: ActivePlayerData) {\n  const str = data ? convertActivePlayerDataToJsonStr(data) : '';\n  window.localStorage.setItem(storageActivePlayerDataId, str);\n}\n\nexport function loadActivePlayerData() {\n  const str = window.localStorage.getItem(storageActivePlayerDataId);\n  return convertActivePlayerDataFromJsonStr(str);\n}\n","import { getCookie } from '../helpers/CommonHelpers';\nimport * as CommonHelpers from '../helpers/CommonHelpers';\nimport { getJsText } from './getJsText';\n\nexport function sendApiRequest(url: string, method: string = 'GET', requestData?: unknown) {\n  const csrftoken = getCookie('csrftoken');\n  // const sessionId = getCookie('sessionid');\n  // const url = `/api/v1/tracks/${trackId}/toggle-favorite/`;\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'X-CSRFToken': csrftoken || '',\n    // Credentials: 'include',\n    // Cookie: csrftoken && `csrftoken=${csrftoken}`,\n    // 'X-Session-Token': sessionId, // X-Session-Token\n    // 'Accept-Language': 'ru', // django_language=ru; content-language: ru;\n  };\n  return fetch(url, {\n    method,\n    headers,\n    credentials: 'include',\n    body: requestData ? JSON.stringify(requestData) : null,\n  })\n    .then(async (res) => {\n      const { ok, status, statusText } = res;\n      // TODO: Check is it json?\n      let data: (unknown & { detail?: string }) | undefined = undefined;\n      try {\n        data = await res.json();\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n      if (!ok || status !== 200) {\n        const errMsg = [getJsText('fetchError') + ' ' + status, data?.detail || statusText]\n          .filter(Boolean)\n          .join(': ');\n        // eslint-disable-next-line no-console\n        console.error('[sendApiRequest]', errMsg, {\n          ok,\n          data,\n          statusText,\n          status,\n          res,\n          url,\n          requestData,\n          method,\n          headers,\n        });\n        debugger; // eslint-disable-line no-debugger\n        throw new Error(errMsg);\n      }\n      return data as unknown;\n    })\n    .catch((err) => {\n      const errMsg = [getJsText('failedApiRequest'), CommonHelpers.getErrorText(err)]\n        .filter(Boolean)\n        .join(': ');\n      // eslint-disable-next-line no-console\n      console.error('[sendApiRequest]', errMsg, {\n        err,\n        url,\n        requestData,\n        method,\n        headers,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw new Error(errMsg);\n    });\n}\n","import { floatToStr } from '../../helpers/floatToStr';\n\ntype Status = 'playing' | 'paused' | 'waiting';\n\nexport interface FloatingPlayerState {\n  lastTimestamp?: number; // Timestamp\n  visible?: boolean;\n  loaded?: boolean;\n  status?: Status | undefined;\n  position?: number;\n  progress?: number;\n  error?: string;\n}\n\nconst storageFloatingPlayerStateId = 'FloatingPlayerState';\n\nfunction convertFloatingPlayerStateFromJsonStr(str?: string | null) {\n  if (!str) {\n    return {};\n  }\n  try {\n    const list = str.split(',');\n    const [\n      // Keep the order!\n      lastTimestamp,\n      visible,\n      status,\n      position,\n      progress,\n    ] = list;\n    const data: FloatingPlayerState = {\n      // Keep the order!\n      lastTimestamp: lastTimestamp ? Number(lastTimestamp) * 1000 : undefined, // Timestamp\n      visible: visible ? Boolean(visible) : undefined,\n      status: status ? (String(status) as Status) : undefined,\n      position: position ? Number(position) : undefined,\n      progress: progress ? Number(progress) : undefined,\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[FloatingPlayerState:convertFloatingPlayerStateFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return {};\n  }\n}\n\nfunction convertFloatingPlayerStateToJsonStr(data: FloatingPlayerState) {\n  const {\n    // Keep the order!\n    lastTimestamp,\n    visible,\n    status,\n    position,\n    progress,\n  } = data;\n  const list = [\n    // Keep the order!\n    lastTimestamp ? Math.round(lastTimestamp / 1000) : undefined, // Timestamp\n    visible ? Number(visible) : undefined, // Boolean\n    status ? status : undefined,\n    position ? floatToStr(position) : undefined,\n    progress ? floatToStr(progress) : undefined,\n  ];\n  const str = list.join(',').replace(/,+$/, '');\n  return str;\n}\n\nexport function saveFloatingPlayerState(data: FloatingPlayerState) {\n  const saveData = { ...data, lastTimestamp: Date.now() };\n  const str = convertFloatingPlayerStateToJsonStr(saveData);\n  window.localStorage.setItem(storageFloatingPlayerStateId, str);\n}\n\nexport function loadFloatingPlayerState() {\n  const str = window.localStorage.getItem(storageFloatingPlayerStateId);\n  return convertFloatingPlayerStateFromJsonStr(str);\n}\n","interface THiddenPlayerOptions {\n  type?: string;\n  src?: string;\n}\n\nexport class HiddenPlayer {\n  hiddenPlayerNode?: HTMLElement;\n  parentDomNode?: HTMLElement;\n\n  audioNode?: HTMLAudioElement;\n  sourceNode?: HTMLSourceElement;\n\n  setParentDomNode(parentDomNode: HTMLElement) {\n    this.parentDomNode = parentDomNode;\n  }\n\n  requireParentDomNode() {\n    return this.parentDomNode || document.body;\n  }\n\n  ensureHiddenPlayer(/* opts: THiddenPlayerOptions = {} */) {\n    if (!this.hiddenPlayerNode) {\n      this.hiddenPlayerNode = document.createElement('div');\n      this.hiddenPlayerNode.classList.add('hidden-player');\n      const audio = document.createElement('audio');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      this.hiddenPlayerNode.appendChild(audio);\n      const parentDomNode = this.requireParentDomNode();\n      parentDomNode.appendChild(this.hiddenPlayerNode);\n    }\n    return this.hiddenPlayerNode;\n  }\n\n  hasAudio() {\n    return !!this.audioNode;\n  }\n\n  hasSource() {\n    return !!this.sourceNode;\n  }\n\n  ensureHiddenPlayerAudio() {\n    if (!this.audioNode) {\n      const parentDomNode = this.requireParentDomNode();\n      this.audioNode = document.createElement('audio');\n      this.audioNode.classList.add('hidden-player');\n      this.audioNode.setAttribute('preload', 'auto');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      parentDomNode.appendChild(this.audioNode);\n    }\n    return this.audioNode;\n  }\n\n  createHiddenPlayerSource(opts: THiddenPlayerOptions = {}) {\n    this.removeHiddenPlayerSource();\n    const audio = this.ensureHiddenPlayerAudio();\n    this.sourceNode = document.createElement('source');\n    this.sourceNode.setAttribute('type', opts.type || 'audio/mpeg');\n    if (opts.src) {\n      this.sourceNode.setAttribute('src', opts.src);\n    }\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event\n    // audio.addEventListener('canplay', this.handleCanPlay.bind(this));\n    // audio.addEventListener('playing', this.handlePlay.bind(this));\n    // audio.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    // audio.addEventListener('ended', this.handleEnded.bind(this));\n    // this.sourceNode.addEventListener('error', this.handleError.bind(this));\n    audio.appendChild(this.sourceNode);\n    return this.sourceNode;\n  }\n\n  removeHiddenPlayerAudio() {\n    if (this.audioNode) {\n      this.audioNode.pause();\n      this.audioNode.remove();\n      this.audioNode = undefined;\n      this.sourceNode = undefined;\n    }\n  }\n\n  removeHiddenPlayerSource() {\n    const audio = this.ensureHiddenPlayerAudio();\n    const prevSources = Array.from(audio.getElementsByTagName('source'));\n    for (const node of prevSources) {\n      node.remove();\n    }\n    this.sourceNode = undefined;\n  }\n}\n","import { formatDuration, quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nimport { localTrackInfoDb } from './localTrackInfoDb';\nimport { floatingPlayer } from '../entities/FloatingPlayer/floatingPlayer';\nimport {\n  FloatingPlayerFavoriteData,\n  FloatingPlayerFavoritesData,\n  FloatingPlayerIncrementData,\n  FloatingPlayerUpdateData,\n} from '../entities/FloatingPlayer/FloatingPlayerCallbacks';\nimport { floatToStr } from '../helpers/floatToStr';\nimport { TrackInfo } from './TrackInfo';\n\nlet allPlayers: NodeListOf<HTMLElement>;\nlet currentTrackPlayer: HTMLElement | undefined = undefined;\n\n// Values for dataset statuses\nconst TRUE = 'true';\n\nfunction calculateAndUpdateTrackPosition(\n  trackNode: HTMLElement,\n  position: number,\n  _isCurrent?: boolean,\n) {\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const { dataset } = trackNode;\n  const { trackId, trackDuration } = dataset;\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  const id = Number(trackId);\n  const duration = trackDuration ? parseFloat(trackDuration.replace(',', '.')) : 0;\n  if (!duration) {\n    const error = new Error(`No duration provided for a track: ${id}`);\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:updateTrackPosition]', error.message, {\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n  }\n  const ratio = position / duration;\n  const progress = Math.min(100, ratio * 100);\n  requestAnimationFrame(() => {\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  localTrackInfoDb.updatePosition(id, position);\n  // TODO: Update the floating player if isCurrent?\n  return { position, duration, progress };\n}\n\nfunction floatingPlayerUpdate(data: FloatingPlayerUpdateData) {\n  const { floatingPlayerState, activePlayerData } = data;\n  const { id } = activePlayerData;\n  let trackNode = currentTrackPlayer;\n  if (!trackNode || Number(trackNode.dataset.trackId) !== id) {\n    trackNode = getTrackNode(id);\n  }\n  if (!trackNode) {\n    return;\n  }\n  // const isCurrent = trackNode === currentTrackPlayer;\n  const { position = 0, progress = 0, status } = floatingPlayerState;\n  const { dataset } = trackNode;\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  requestAnimationFrame(() => {\n    if (status) {\n      dataset.status = status;\n    } else {\n      delete dataset.status;\n    }\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  // calculateAndUpdateTrackPosition(trackNode, position, isCurrent); // Is it required here?\n  // TODO: Update the floating player if isCurrent?\n}\n\nfunction floatingPlayerPlay(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    throw new Error('Wrong active track id!');\n  }\n  requestAnimationFrame(() => {\n    dataset.status = 'playing';\n  });\n}\n\nfunction floatingPlayerStop(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState, // ???\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    throw new Error('Wrong active track id!');\n  }\n  requestAnimationFrame(() => {\n    delete dataset.status;\n  });\n}\n\nfunction getTrackNode(id: number) {\n  const players = Array.from(allPlayers);\n  const trackNode = players.find((it) => Number(it.dataset.trackId) === id);\n  return trackNode;\n}\n\nfunction stopPreviousPlayer() {\n  if (currentTrackPlayer) {\n    const { dataset } = currentTrackPlayer;\n    requestAnimationFrame(() => {\n      currentTrackPlayer!.classList.toggle('current', false);\n      delete dataset.status;\n      delete dataset.loaded;\n      delete dataset.error;\n    });\n  }\n}\n\nfunction updateTrackPlayedCount(\n  trackNode: HTMLElement,\n  playedCount?: number,\n  _isCurrent?: boolean,\n) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId);\n  if (!id) {\n    throw new Error('No current track id!');\n  }\n  const updatedTrackInfo = localTrackInfoDb.updatePlayedCount(id, playedCount);\n  const { playedCount: updatedPlayedCount } = updatedTrackInfo;\n  const strValue = quoteHtmlAttr(String(updatedPlayedCount));\n  const valueNode = trackNode.querySelector('#played_count') as HTMLElement;\n  // Update counter in the document...\n  if (valueNode) {\n    const parent = valueNode.closest('.track-played-count[data-played-count]') as HTMLElement;\n    requestAnimationFrame(() => {\n      valueNode.innerText = strValue;\n      if (parent) {\n        parent.dataset.playedCount = strValue;\n      }\n    });\n  }\n  // TODO: Update value in the floating player?\n}\n\nfunction updateIncrementCallback(data: FloatingPlayerIncrementData) {\n  const {\n    count,\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  const trackNode = getTrackNode(activePlayerData.id);\n  const isCurrent = trackNode === currentTrackPlayer;\n  if (trackNode) {\n    updateTrackPlayedCount(trackNode, count, isCurrent);\n  }\n}\n\n/** Play button click handler */\nfunction trackPlayHandler(ev: MouseEvent) {\n  const controlNode = ev.currentTarget as HTMLElement;\n  const trackNode = controlNode.closest('.track-player') as HTMLElement;\n  // Reset previous player\n  if (currentTrackPlayer && currentTrackPlayer !== trackNode) {\n    stopPreviousPlayer();\n  }\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n\n  const playingId = floatingPlayer.getActiveTrackId();\n  const isFloatingPlaying = floatingPlayer.isPlaying();\n  if (isFloatingPlaying) {\n    // Pause playback\n    floatingPlayer.pauseCurrentPlayer();\n    if (playingId === id) {\n      // Return -- just pause current track\n      return;\n    }\n  }\n\n  // Clear all tracks active status?\n  requestAnimationFrame(() => {\n    allPlayers.forEach((it) => {\n      if (it !== trackNode && it.classList.contains('current')) {\n        it.classList.toggle('current', false);\n      }\n    });\n    trackNode.classList.toggle('current', true);\n  });\n\n  currentTrackPlayer = trackNode;\n\n  const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  floatingPlayer.setActiveTrack(trackNode, position);\n\n  floatingPlayer.playCurrentPlayer();\n\n  // Show floating player if has been hidden\n  if (!isFloatingPlaying) {\n    floatingPlayer.showFloatingPlayer();\n  }\n}\n\nfunction updateTrackFavorite(trackNode: HTMLElement, isFavorite: boolean) {\n  const { dataset } = trackNode;\n  const { favorite } = dataset;\n  const isCurrentFavorite = Boolean(favorite);\n  if (isFavorite !== isCurrentFavorite) {\n    requestAnimationFrame(() => {\n      if (isFavorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n    });\n  }\n}\n\nfunction updateSingleFavoriteCallback({ id, favorite }: FloatingPlayerFavoriteData) {\n  const trackNode = getTrackNode(id);\n  if (trackNode) {\n    updateTrackFavorite(trackNode, favorite);\n  }\n}\n\nfunction updateFavoritesCallback({ favorites }: FloatingPlayerFavoritesData) {\n  allPlayers.forEach((trackNode) => {\n    const { dataset } = trackNode;\n    const { trackId } = dataset;\n    const id = Number(trackId);\n    const isFavorite = favorites.includes(id);\n    updateTrackFavorite(trackNode, isFavorite);\n  });\n}\n\n// function updateTrackDataFromDataset(\n//   trackInfo: TrackInfo,\n//   dataset: DOMStringMap,\n//   activePlayerData?: ActivePlayerData,\n// ) {\n//   ///\n// }\n\nfunction initTrackPlayerNode(trackNode: HTMLElement) {\n  const activePlayerData = floatingPlayer.activePlayerData;\n  const { dataset } = trackNode;\n  const {\n    inited,\n    trackId, // \"1\"\n    trackMediaUrl, // \"/media/samples/gr-400x225.jpg\"\n  } = dataset;\n  const id = Number(trackId || '');\n  if (!id || inited || !trackMediaUrl) {\n    return;\n  }\n  const hasServerData = window.isAuthenticated;\n  const isCurrent = activePlayerData?.id == id;\n  const trackInfo: TrackInfo | undefined = localTrackInfoDb.getById(id);\n  if (trackInfo) {\n    if (!hasServerData) {\n      // If no server data then update favorite from the local db\n      if (trackInfo?.favorite) {\n        updateTrackFavorite(trackNode, trackInfo.favorite);\n      }\n    }\n    const {\n      duration,\n      // position,\n      // progress,\n    } = calculateAndUpdateTrackPosition(trackNode, trackInfo.position || 0, isCurrent);\n    const playedCount = Number(\n      trackNode.querySelector<HTMLElement>('.track-played-count')?.dataset.playedCount || '0',\n    );\n    const favorite = hasServerData ? Boolean(dataset.favorite) : !!trackInfo?.favorite;\n    // Update the local db date...\n    if (activePlayerData) {\n      activePlayerData.favorite = favorite;\n      activePlayerData.duration = duration;\n    }\n    /* TODO: Update local data (favorite, playedCount) from track node dataset?\n     * - id\n     * - favorite\n     * - lastPlayed\n     * - lastUpdated\n     * - playedCount\n     * - position\n     */\n    if (playedCount !== trackInfo.playedCount || favorite !== trackInfo.favorite) {\n      trackInfo.playedCount = playedCount;\n      trackInfo.favorite = favorite;\n      localTrackInfoDb.save(trackInfo);\n    }\n  }\n  if (isCurrent) {\n    activePlayerData.title = dataset.trackTitle || '';\n    currentTrackPlayer = trackNode;\n    requestAnimationFrame(() => {\n      trackNode.classList.toggle('current', true);\n    });\n    floatingPlayerUpdate({ floatingPlayerState: floatingPlayer.state, activePlayerData });\n  }\n\n  // Set controls' handlers\n  const controls = trackNode.querySelectorAll<HTMLElement>('.track-control');\n  controls.forEach((node) => {\n    const { dataset } = node;\n    const { inited, controlId } = dataset;\n    if (inited) {\n      return;\n    }\n    if (controlId === 'toggleFavorite') {\n      node.addEventListener('click', () => floatingPlayer.toggleFavoriteById(id));\n    }\n    if (controlId === 'play') {\n      node.addEventListener('click', trackPlayHandler);\n    }\n    dataset.inited = TRUE;\n  });\n  dataset.inited = TRUE;\n}\n\nexport function initTracksPlayerWrapper(domNode: HTMLElement = document.body) {\n  allPlayers = domNode.querySelectorAll<HTMLElement>('.track-player[data-track-media-url]');\n  allPlayers.forEach(initTrackPlayerNode);\n  floatingPlayer.callbacks.addPlayStartCallback(floatingPlayerPlay);\n  floatingPlayer.callbacks.addPlayStopCallback(floatingPlayerStop);\n  floatingPlayer.callbacks.addUpdateCallback(floatingPlayerUpdate);\n  floatingPlayer.callbacks.addIncrementCallback(updateIncrementCallback);\n  floatingPlayer.callbacks.addFavoritesCallback(updateFavoritesCallback);\n  floatingPlayer.callbacks.addFavoriteCallback(updateSingleFavoriteCallback);\n}\n","import { acceptedCookiesId } from '../constants/acceptedCookiesId';\nimport { deleteAllCookies, setCookie } from '../helpers/CommonHelpers';\n\nfunction updateBannerGeometry(bannerNode: HTMLElement) {\n  const footerNode = document.querySelector<HTMLElement>('.template-footer');\n  if (!bannerNode || !footerNode) {\n    return;\n  }\n  const bannerHeight = bannerNode.clientHeight;\n  footerNode.style.marginBottom = `${bannerHeight}px`;\n}\n\nfunction handleAccept(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = 'allowed';\n  window.localStorage.setItem('cookies', value);\n  setCookie(acceptedCookiesId, value);\n  hideBanner(bannerNode!);\n}\n\nfunction handleReject(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = '';\n  window.localStorage.setItem(acceptedCookiesId, value);\n  deleteAllCookies();\n  setCookie(acceptedCookiesId, '');\n  hideBanner(bannerNode!);\n}\n\nfunction initActiveBanner(bannerNode: HTMLElement) {\n  const eventHandler = updateBannerGeometry.bind(bannerNode);\n  window.addEventListener('resize', eventHandler);\n  window.addEventListener('orientationchange', eventHandler);\n  updateBannerGeometry(bannerNode);\n  // Set button handlers...\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Accept')\n    ?.addEventListener('click', handleAccept);\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Reject')\n    ?.addEventListener('click', handleReject);\n}\n\nfunction hideBanner(bannerNode?: HTMLElement) {\n  if (bannerNode) {\n    bannerNode.remove();\n  }\n  document.body.classList.add('no-cookies-banner');\n}\n\nexport function initCookiesBanner() {\n  const bannerNode = document.querySelector<HTMLElement>('.cookies-banner');\n  if (!bannerNode) {\n    return;\n  }\n  const cookiesBannerStr = window.localStorage.getItem(acceptedCookiesId);\n  if (cookiesBannerStr == null) {\n    initActiveBanner(bannerNode);\n    return;\n  }\n  hideBanner(bannerNode);\n}\n","import { ActivePlayerData } from '../ActivePlayerData/ActivePlayerData';\nimport { FloatingPlayerState } from './FloatingPlayerState';\n\nexport interface FloatingPlayerUpdateData {\n  floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerIncrementData {\n  count?: number;\n  // floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerFavoritesData {\n  favorites: number[];\n}\nexport interface FloatingPlayerFavoriteData {\n  id: number;\n  favorite: boolean;\n  // activePlayerData: ActivePlayerData;\n}\ntype UpdateCallback = (data: FloatingPlayerUpdateData) => void;\ntype IncrementCallback = (data: FloatingPlayerIncrementData) => void;\ntype FavoritesCallback = (data: FloatingPlayerFavoritesData) => void;\ntype FavoriteCallback = (data: FloatingPlayerFavoriteData) => void;\ntype ErrorCallback = (error: Error | string) => void;\n\n// type HandlerId = 'play' | 'stop' | 'time';\nexport class FloatingPlayerCallbacks {\n  onPlayStartCallbacks: UpdateCallback[] = [];\n  onPlayStopCallbacks: UpdateCallback[] = [];\n  onUpdateCallbacks: UpdateCallback[] = [];\n  onIncrementCallbacks: IncrementCallback[] = [];\n  onFavoritesCallbacks: FavoritesCallback[] = [];\n  onFavoriteCallbacks: FavoriteCallback[] = [];\n  onErrorCallbacks: ErrorCallback[] = [];\n\n  // handlers: Record<HandlerId, ErrorCallback[]> = {};\n\n  addPlayStartCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStartCallbacks.includes(cb)) {\n      this.onPlayStartCallbacks.push(cb);\n    }\n  }\n\n  addPlayStopCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStopCallbacks.includes(cb)) {\n      this.onPlayStopCallbacks.push(cb);\n    }\n  }\n\n  addUpdateCallback(cb: UpdateCallback) {\n    if (cb && !this.onUpdateCallbacks.includes(cb)) {\n      this.onUpdateCallbacks.push(cb);\n    }\n  }\n\n  addIncrementCallback(cb: IncrementCallback) {\n    if (cb && !this.onIncrementCallbacks.includes(cb)) {\n      this.onIncrementCallbacks.push(cb);\n    }\n  }\n\n  addFavoriteCallback(cb: FavoriteCallback) {\n    if (cb && !this.onFavoriteCallbacks.includes(cb)) {\n      this.onFavoriteCallbacks.push(cb);\n    }\n  }\n\n  addFavoritesCallback(cb: FavoritesCallback) {\n    if (cb && !this.onFavoritesCallbacks.includes(cb)) {\n      this.onFavoritesCallbacks.push(cb);\n    }\n  }\n\n  addErrorCallback(cb: ErrorCallback) {\n    if (cb && !this.onErrorCallbacks.includes(cb)) {\n      this.onErrorCallbacks.push(cb);\n    }\n  }\n\n  // Invokers\n\n  invokePlayStart(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStartCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokePlayStop(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStopCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeUpdate(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onUpdateCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeIncrement(data: FloatingPlayerIncrementData) {\n    if (data.activePlayerData) {\n      this.onIncrementCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeFavorite(data: FloatingPlayerFavoriteData) {\n    this.onFavoriteCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeFavorites(data: FloatingPlayerFavoritesData) {\n    this.onFavoritesCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeError(error: Error | string) {\n    if (error) {\n      this.onErrorCallbacks.forEach((cb) => {\n        cb(error);\n      });\n    }\n  }\n}\n","import { getJsText } from '../../helpers/getJsText';\nimport { commonNotify } from '../../CommonNotify/CommonNotifySingleton';\nimport { formatDuration, getErrorText } from '../../helpers/CommonHelpers';\nimport { localTrackInfoDb } from '../../track-blocks/localTrackInfoDb';\n\nimport {\n  ActivePlayerData,\n  loadActivePlayerData,\n  saveActivePlayerData,\n} from '../ActivePlayerData/ActivePlayerData';\nimport { getActivePlayerDataFromTrackNode } from '../ActivePlayerData/getActivePlayerDataFromTrackNode';\nimport { sendApiRequest } from '../../helpers/sendApiRequest';\nimport { floatToStr } from '../../helpers/floatToStr';\nimport {\n  FloatingPlayerState,\n  loadFloatingPlayerState,\n  saveFloatingPlayerState,\n} from './FloatingPlayerState';\n\nimport { HiddenPlayer } from './HiddenPlayer';\nimport { FloatingPlayerCallbacks } from './FloatingPlayerCallbacks';\n\n// TODO: Update track title on the language change?\n\nconst TRUE = 'true';\n\n/** A value of forward/backward seek step */\nconst seekTimeSec = 1;\n\nexport class FloatingPlayer {\n  inited = false;\n  callbacks = new FloatingPlayerCallbacks();\n  audio?: HTMLAudioElement;\n  hiddenPlayer: HiddenPlayer = new HiddenPlayer();\n  activePlayerData?: ActivePlayerData;\n  state: FloatingPlayerState = {};\n  domNode?: HTMLElement | null;\n  incrementing?: boolean;\n  toggling: Record<number, boolean> = {};\n  seeking = false;\n\n  constructor() {\n    this.loadActivePlayerData();\n    this.loadFloatingPlayerState();\n    this.initDomNode();\n    this.updateAll();\n    // Check if it was recently playing...\n    const now = Date.now();\n    if (this.activePlayerData) {\n      this.ensureAudioLoaded();\n      if (\n        this.state.status === 'playing' &&\n        this.state.lastTimestamp &&\n        this.state.lastTimestamp > now - 5000\n      ) {\n        // TODO: Then resume playback...\n        /* console.log('[FloatingPlayerClass:constructor] Start play', {\n         *   activePlayerData: this.activePlayerData,\n         *   state: this.state,\n         * });\n         */\n        // TODO: Care about: `Uncaught (in promise) NotAllowedError: play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD`\n        this.playCurrentPlayer();\n      } else {\n        // Reset the status\n        delete this.state.status;\n      }\n    }\n  }\n\n  requireAudio() {\n    if (!this.audio) {\n      this.audio = this.hiddenPlayer.ensureHiddenPlayerAudio();\n      this.audio.addEventListener('canplay', this.handleAudioCanPlay.bind(this));\n      this.audio.addEventListener('playing', this.handleAudioPlay.bind(this));\n      this.audio.addEventListener('timeupdate', this.handleAudioTimeUpdate.bind(this));\n      this.audio.addEventListener('ended', this.handleAudioEnded.bind(this));\n      // source.addEventListener('error', this.handleAudioSourceError.bind(this));\n    }\n    return this.audio;\n  }\n\n  removeAudio() {\n    this.hiddenPlayer.removeHiddenPlayerAudio();\n    this.audio = undefined;\n  }\n\n  hasAudio() {\n    return !!this.audio;\n  }\n\n  hasAudioSource() {\n    return this.hiddenPlayer.hasSource();\n  }\n\n  requireDomNode() {\n    if (!this.domNode) {\n      this.domNode = document.querySelector<HTMLElement>('.floating-player');\n      this.hiddenPlayer.setParentDomNode(this.domNode!);\n    }\n    // TODO: Ensure created dom node?\n    if (!this.domNode) {\n      const error = new Error('No floating player node found');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireDomNode]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.domNode;\n  }\n\n  requireActivePlayerData() {\n    // TODO: Ensure data?\n    if (!this.activePlayerData) {\n      const error = new Error('No active player data set');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireActivePlayerData]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.activePlayerData;\n  }\n\n  // Sync persistent data...\n\n  loadActivePlayerData() {\n    this.activePlayerData = loadActivePlayerData();\n  }\n\n  saveActivePlayerData() {\n    saveActivePlayerData(this.activePlayerData);\n  }\n\n  loadFloatingPlayerState() {\n    this.state = loadFloatingPlayerState();\n  }\n\n  saveFloatingPlayerState() {\n    saveFloatingPlayerState(this.state);\n  }\n\n  // Dom node...\n\n  showFloatingPlayer() {\n    this.state.visible = true;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  hideFloatingPlayer() {\n    this.state.visible = false;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  // Updaters...\n\n  updateActivePlayerDataInDom() {\n    const domNode = this.requireDomNode();\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    const titleNode = domNode.querySelector<HTMLElement>('.title');\n    const durationNode = domNode.querySelector<HTMLElement>('.duration');\n    const imageNode = domNode.querySelector<HTMLElement>('.image');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      titleNode!.innerText = activePlayerData.title;\n      durationNode!.innerText = formatDuration(Math.floor(activePlayerData.duration * 1000));\n      imageNode!.style.backgroundImage = 'url(' + activePlayerData.imageUrl + ')';\n      if (activePlayerData.favorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n      const links = domNode.querySelectorAll<HTMLLinkElement>('.trackLink');\n      links.forEach((it) => {\n        it.setAttribute('href', `/tracks/${id}`);\n      });\n    });\n  }\n\n  updateStateInDom() {\n    const domNode = this.requireDomNode();\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      if (this.state.status) {\n        dataset.status = this.state.status;\n      } else {\n        delete dataset.status;\n      }\n      document.body.classList.toggle('with-player', !!this.state.visible);\n    });\n  }\n\n  updatePositionInDom() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      dataset.position = floatToStr(this.state.position);\n      dataset.progress = floatToStr(this.state.progress);\n      domNode.style.setProperty('--progress', dataset.progress);\n      seekBarNode!.value = dataset.progress;\n    });\n  }\n\n  calculateProgress() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id, duration } = activePlayerData;\n    if (!duration) {\n      const error = new Error(`No duration provided for a track: ${id}`);\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:calculateProgress]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    const ratio = position / duration;\n    const progress = Math.min(100, ratio * 100);\n    return progress;\n  }\n\n  updateTrackPosition() {\n    const domNode = this.requireDomNode();\n    const timeNode = domNode.querySelector<HTMLElement>('.time');\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id } = activePlayerData;\n    const progress = this.calculateProgress();\n    this.state.progress = progress;\n    this.updatePositionInDom();\n    if (timeNode) {\n      requestAnimationFrame(() => {\n        timeNode.innerText = formatDuration(Math.floor(position * 1000));\n      });\n    }\n    localTrackInfoDb.updatePosition(id, position);\n  }\n\n  updateAll() {\n    if (this.activePlayerData) {\n      this.updateTrackPosition();\n    }\n    this.updateStateInDom();\n    this.updatePositionInDom();\n    if (this.activePlayerData) {\n      this.updateActivePlayerDataInDom();\n    }\n  }\n\n  // Audio handlers...\n\n  handleAudioTimeUpdate(ev: Event) {\n    if (this.seeking) {\n      return;\n    }\n    const currAudio = this.audio;\n    const audio = ev.currentTarget as HTMLAudioElement;\n    if (audio !== currAudio) {\n      return;\n    }\n    const activePlayerData = this.requireActivePlayerData();\n    const {\n      currentTime,\n      // readyState, // DEBUG\n    } = audio;\n    /* // DEBUG\n     * const source = audio.getElementsByTagName('SOURCE')[0] as HTMLSourceElement;\n     * console.log('[FloatingPlayerClass:handleAudioTimeUpdate]', {\n     *   currentTime,\n     *   readyState,\n     *   id: activePlayerData.id,\n     *   activePlayerData,\n     *   src: source.src,\n     *   source,\n     *   thisAudio: currAudio === audio,\n     *   currAudio,\n     *   audio,\n     * });\n     */\n    // TODO: Check loaded status?\n    if (this.state.position != currentTime) {\n      this.state.position = currentTime;\n      this.updateTrackPosition();\n      this.saveFloatingPlayerState();\n      this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n      localTrackInfoDb.updatePosition(activePlayerData.id, currentTime);\n    }\n  }\n\n  handleAudioCanPlay(_ev: Event) {\n    if (!this.state.loaded) {\n      this.state.loaded = true;\n      delete this.state.error;\n    }\n  }\n\n  handleAudioPlay(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.status = 'playing';\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStart({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleAudioEnded(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.incrementPlayedCount();\n    this.state.status = 'paused'; // stopped, ready?\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.callbacks.invokePlayStop({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleError(err: Error | string) {\n    const errName = err instanceof Error && err.name;\n    // eslint-disable-next-line no-console\n    console.error('[FloatingPlayerClass:handleError]', {\n      err,\n    });\n    if (errName === 'AbortError') {\n      // NOTE: Do nothing on abort\n      return;\n    }\n    debugger; // eslint-disable-line no-debugger\n    this.state.error = getErrorText(err);\n    this.updateStateInDom();\n    commonNotify.showError(err);\n    this.callbacks.invokeError(err);\n  }\n\n  handleAudioSourceError(ev: Event) {\n    const srcElement = ev.currentTarget as HTMLSourceElement;\n    const { src, type } = srcElement;\n    const errMsg = getJsText('errorLoadingAudioFile') + ' ' + src + (type ? `( ${type})` : '');\n    const error = new Error(errMsg);\n    this.handleError(error);\n  }\n\n  /// Active player data\n\n  getActiveTrackId(): number | undefined {\n    return this.activePlayerData ? this.activePlayerData.id : undefined;\n  }\n\n  // Core handlers...\n\n  loadAudio() {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.loaded = false;\n    const source = this.hiddenPlayer.createHiddenPlayerSource({ src: activePlayerData.mediaUrl });\n    source.addEventListener('error', this.handleAudioSourceError.bind(this));\n  }\n\n  isAudioPlaying() {\n    const audio = this.audio;\n    return (\n      !!audio && audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > 2\n    );\n  }\n\n  isPlaying() {\n    return this.state.status === 'playing';\n  }\n\n  pauseCurrentPlayer() {\n    if (this.isAudioPlaying()) {\n      const audio = this.requireAudio();\n      audio.pause();\n    }\n    if (this.isPlaying()) {\n      this.state.status = 'paused';\n      this.updateStateInDom();\n      this.saveFloatingPlayerState();\n    }\n  }\n\n  playCurrentPlayer() {\n    const audio = this.requireAudio();\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.isAudioPlaying()) {\n      return;\n    }\n    if (\n      audio.ended ||\n      (this.state.position && this.state.position > activePlayerData.duration - 0.1)\n    ) {\n      // Start from the begining\n      this.state.position = 0;\n      audio.load();\n    }\n    this.updateTrackPosition();\n    this.callbacks.invokeUpdate({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n\n    audio.currentTime = this.state.position || 0;\n    const result = audio.play();\n    result.catch((err) => {\n      if (err.name === 'NotAllowedError') {\n        //  play() failed because the user didn't interact with the document first. -> Just cancel\n        this.state.status = undefined;\n        this.updateStateInDom();\n      } else {\n        this.handleError(err);\n      }\n    });\n  }\n\n  /** Play button click handler */\n  trackPlayHandler(_ev: MouseEvent) {\n    const isPlaying = this.isPlaying();\n    if (isPlaying) {\n      this.pauseCurrentPlayer();\n    } else {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Active player track data...\n\n  ensureAudioLoaded() {\n    if (!this.state.loaded || !this.hasAudio() || !this.hasAudioSource) {\n      this.loadAudio();\n    }\n  }\n\n  setActivePlayerData(activePlayerData: ActivePlayerData, position?: number) {\n    if (this.activePlayerData?.id !== activePlayerData.id) {\n      if (this.activePlayerData && this.isPlaying()) {\n        this.pauseCurrentPlayer();\n      }\n      this.state.loaded = false;\n      if (position != null) {\n        this.state.position = position;\n      }\n      this.removeAudio();\n      this.activePlayerData = activePlayerData;\n    }\n    this.saveActivePlayerData();\n    this.updateActivePlayerDataInDom();\n    this.ensureAudioLoaded();\n  }\n\n  setActiveTrack(trackNode: HTMLElement, position?: number) {\n    const activePlayerData = getActivePlayerDataFromTrackNode(trackNode);\n    this.setActivePlayerData(activePlayerData, position);\n  }\n\n  clearActiveData() {\n    this.activePlayerData = undefined;\n    this.hideFloatingPlayer();\n    this.removeAudio();\n  }\n\n  // Update related data\n\n  sendIncrementPlayedCount(id: number) {\n    const url = `/api/v1/tracks/${id}/increment-played-count/`;\n    return sendApiRequest(url, 'POST');\n  }\n\n  incrementPlayedCount() {\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.incrementing) {\n      return;\n    }\n    this.incrementing = true;\n    return this.sendIncrementPlayedCount(activePlayerData.id)\n      .then(({ played_count }: { played_count?: number }) => {\n        if (played_count != null) {\n          // Re-update local data with server data...\n          this.callbacks.invokeIncrement({ count: played_count, activePlayerData });\n        }\n        // TODO: Update other instances of this track on the page (eg, in player, or in other track listings)?\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('[FloatingPlayerClass:incrementPlayedCount:sendIncrementPlayedCount] error', {\n          err,\n        });\n        debugger; // eslint-disable-line no-debugger\n        commonNotify.showError(err);\n        // Increment locally (?)\n        this.callbacks.invokeIncrement({ activePlayerData });\n        throw err;\n      })\n      .finally(() => {\n        this.incrementing = false;\n      });\n  }\n\n  sendToggleFavoriteRequest(id: number, value: boolean) {\n    const url = `/api/v1/tracks/${id}/toggle-favorite/`;\n    return sendApiRequest(url, 'POST', { value });\n  }\n\n  toggleFavorite() {\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    this.toggleFavoriteById(id);\n  }\n\n  toggleFavoriteById(id: number) {\n    if (this.toggling[id]) {\n      return;\n    }\n    const activePlayerData = this.activePlayerData;\n    const isCurrent = id === activePlayerData?.id;\n    const trackInfo = localTrackInfoDb.getById(id);\n    const favorite = !trackInfo?.favorite;\n    localTrackInfoDb.updateFavorite(id, favorite);\n    if (isCurrent) {\n      activePlayerData.favorite = favorite;\n      this.updateActivePlayerDataInDom();\n      this.saveActivePlayerData();\n    }\n    this.callbacks.invokeFavorite({ id, favorite });\n    if (window.isAuthenticated) {\n      this.toggling[id] = true;\n      this.sendToggleFavoriteRequest(id, favorite)\n        .then((results: { favorite_track_ids: number[] }) => {\n          const { favorite_track_ids } = results;\n          localTrackInfoDb.updateFavoritesByTrackIds(favorite_track_ids);\n          this.callbacks.invokeFavorites({\n            favorites: favorite_track_ids,\n          });\n          const msgId = favorite ? 'trackAddedToFavorites' : 'trackRemovedFromFavorites';\n          commonNotify.showSuccess(getJsText(msgId));\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.error('[FloatingPlayerClass:toggleFavoriteById] error', {\n            err,\n          });\n          debugger; // eslint-disable-line no-debugger\n          commonNotify.showError(err);\n        })\n        .finally(() => {\n          this.toggling[id] = false;\n        });\n    }\n  }\n\n  seekPosition(position: number) {\n    this.seeking = true;\n    const audio = this.requireAudio();\n    audio.currentTime = position || 0;\n    this.state.position = position;\n    this.updateTrackPosition();\n    this.saveFloatingPlayerState();\n    const activePlayerData = this.requireActivePlayerData();\n    this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n    setTimeout(() => {\n      this.seeking = false;\n    }, 150);\n  }\n\n  seekRewind() {\n    const position = Math.max(0, (this.state.position || 0) - seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekForward() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    const position = Math.min(duration, (this.state.position || 0) + seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekBarHandle(ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    if (!duration) {\n      return;\n    }\n    const node = ev.currentTarget as HTMLInputElement;\n    const value = Number(node.value);\n    const position = (value * duration) / 100;\n    this.seekPosition(position);\n    if (!this.isPlaying()) {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Initilization...\n\n  initDomNode() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    if (seekBarNode) {\n      seekBarNode.addEventListener('input', this.seekBarHandle.bind(this));\n    }\n    const hideButton = domNode.querySelector<HTMLButtonElement>('.track-control-hide');\n    if (hideButton) {\n      hideButton.addEventListener('click', this.hideFloatingPlayer.bind(this));\n    }\n    const controls = domNode.querySelectorAll<HTMLButtonElement>('.track-control');\n    controls.forEach((node) => {\n      const { dataset } = node;\n      const { inited, controlId } = dataset;\n      if (inited) {\n        return;\n      }\n      if (controlId === 'rewind') {\n        node.addEventListener('click', this.seekRewind.bind(this));\n      }\n      if (controlId === 'forward') {\n        node.addEventListener('click', this.seekForward.bind(this));\n      }\n      if (controlId === 'toggleFavorite') {\n        node.addEventListener('click', this.toggleFavorite.bind(this));\n      }\n      if (controlId === 'play') {\n        node.addEventListener('click', this.trackPlayHandler.bind(this));\n      }\n      dataset.inited = TRUE;\n    });\n    this.inited = true;\n  }\n}\n","import { ActivePlayerData } from './ActivePlayerData';\n\nexport function getActivePlayerDataFromTrackNode(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n  const favorite = Boolean(dataset.favorite);\n  // const status = dataset.status;\n  const duration = parseFloat((dataset.trackDuration || '0').replace(',', '.'));\n  // const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  const mediaUrl = dataset.trackMediaUrl || '';\n  const imageNode = trackNode.querySelector<HTMLImageElement>('img.card-img');\n  const imageUrl = imageNode?.getAttribute('src') || '';\n  const title = dataset.trackTitle || '';\n  const activePlayerData: ActivePlayerData = {\n    id,\n    title,\n    imageUrl,\n    mediaUrl,\n    duration,\n    favorite,\n  };\n  return activePlayerData;\n}\n","import { FloatingPlayer } from './FloatingPlayerClass';\n\n// Singleton\nexport const floatingPlayer = new FloatingPlayer();\n\nexport function initFloatingPlayer() {\n  // console.log('[floatingPlayer:initFloatingPlayer]');\n}\n","function processLink(node: HTMLElement) {\n  if (!node.classList.contains('external')) {\n    node.classList.add('external');\n    node.setAttribute('target', '_blank');\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon', 'icon-external', 'bi', 'bi-box-arrow-up-right');\n    node.appendChild(nodeIcon);\n  }\n}\n\nfunction processTextBlock(node: HTMLElement) {\n  // Find external links...\n  const linkNodes = node.querySelectorAll<HTMLLinkElement>('a[href^=\"https://\"]');\n  linkNodes.forEach(processLink);\n}\n\nexport function processTextContent() {\n  const textNodes = document.querySelectorAll<HTMLElement>('.text-content');\n  textNodes.forEach(processTextBlock);\n}\n","/**\n * @desc Main entry point module (scripts)\n * @module src/assets/index.ts\n * @changed 2025.02.24, 22:12\n */\n\nimport { checkProjectVersion } from './checkProjectVersion';\nimport { initTracksPlayerWrapper } from './track-blocks/tracksPlayer';\nimport { initFloatingPlayer } from './entities/FloatingPlayer/floatingPlayer';\nimport { processTextContent } from './processTextContent';\nimport { initCookiesBanner } from './cookies-banner/cookiesBanner';\n\ninitCookiesBanner();\n\ncheckProjectVersion();\nprocessTextContent();\n\ninitTracksPlayerWrapper();\ninitFloatingPlayer();\n"],"names":["getMinorVersionFromProjectInfo","info","match","_e","getErrorText","error","Array","isArray","map","this","bind","join","Error","message","String","quoteHtmlAttr","str","preserveCR","crValue","replace","formatDuration","time","sec","min","hrs","items","Math","floor","val","idx","padStart","shift","filter","Boolean","getCookie","cookieId","cookiesList","document","cookie","split","i","length","s","id","trim","decodeURIComponent","setCookie","maxAgeSecs","parts","encodeURIComponent","push","fullCookie","floatToStr","num","isNaN","Number","toFixed","packDelim","finalPackDelimReg","RegExp","acceptedCookiesId","localTrackInfoDb","updatePlayedCount","playedCount","now","_now","Date","trackInfo","getOrCreate","undefined","lastPlayed","lastUpdated","insert","err","console","updatePosition","position","updateFavorite","favorite","_toggleInFavoritesIndex","updateFavoritesByTrackIds","ids","_getIndex","forEach","isFavorite","includes","_setFavoritesIndex","save","createNewRecord","getById","round","trackInfoToJsonStr","window","localStorage","setItem","_addToIndex","getFavorites","getAll","it","getItem","list","warn","trackInfoFromJsonStr","_getFavoritesIndex","n","_","favoritesIndex","favoritesCount","hasFavorites","body","classList","toggle","querySelectorAll","node","innerText","_addToFavoritesIndex","_removeFromFavoritesIndex","checkId","value","v","_setIndex","index","_removeFromIndex","_toggleInIndex","delete","removeItem","clearAll","getJsText","textNode","querySelector","innerHTML","icons","success","commonNotify","timeoutDelay","inited","removeNotify","notifyData","handler","remove","clearTimeout","setTimeout","notifyRoot","removeChild","showNotify","mode","text","content","ensureInit","createElement","add","nodeIcon","appendChild","nodeText","requestAnimationFrame","removeNotifyHandler","addEventListener","showInfo","showSuccess","showWarn","showError","showDemo","init","createDomNode","rootNode","setAttribute","storageActivePlayerDataId","saveActivePlayerData","data","JSON","stringify","convertActivePlayerDataToJsonStr","loadActivePlayerData","raw","parse","title","imageUrl","mediaUrl","duration","convertActivePlayerDataFromJsonStr","sendApiRequest","url","method","requestData","headers","Accept","fetch","credentials","then","res","ok","status","statusText","json","errMsg","detail","catch","storageFloatingPlayerStateId","saveFloatingPlayerState","lastTimestamp","visible","progress","convertFloatingPlayerStateToJsonStr","loadFloatingPlayerState","convertFloatingPlayerStateFromJsonStr","allPlayers","bannerNode","domNode","setParentDomNode","parentDomNode","requireParentDomNode","ensureHiddenPlayer","hiddenPlayerNode","audio","hasAudio","audioNode","hasSource","sourceNode","ensureHiddenPlayerAudio","createHiddenPlayerSource","opts","removeHiddenPlayerSource","type","src","removeHiddenPlayerAudio","pause","from","getElementsByTagName","onPlayStartCallbacks","onPlayStopCallbacks","onUpdateCallbacks","onIncrementCallbacks","onFavoritesCallbacks","onFavoriteCallbacks","onErrorCallbacks","addPlayStartCallback","cb","addPlayStopCallback","addUpdateCallback","addIncrementCallback","addFavoriteCallback","addFavoritesCallback","addErrorCallback","invokePlayStart","activePlayerData","invokePlayStop","invokeUpdate","invokeIncrement","invokeFavorite","invokeFavorites","invokeError","TRUE","callbacks","FloatingPlayerCallbacks","hiddenPlayer","HiddenPlayer","state","toggling","seeking","initDomNode","updateAll","ensureAudioLoaded","playCurrentPlayer","requireAudio","handleAudioCanPlay","handleAudioPlay","handleAudioTimeUpdate","handleAudioEnded","removeAudio","hasAudioSource","requireDomNode","requireActivePlayerData","showFloatingPlayer","updateStateInDom","hideFloatingPlayer","updateActivePlayerDataInDom","titleNode","durationNode","imageNode","dataset","style","backgroundImage","updatePositionInDom","seekBarNode","setProperty","calculateProgress","ratio","updateTrackPosition","timeNode","ev","currAudio","currentTarget","currentTime","floatingPlayerState","_ev","loaded","incrementPlayedCount","handleError","errName","name","handleAudioSourceError","srcElement","getActiveTrackId","loadAudio","isAudioPlaying","paused","ended","readyState","isPlaying","pauseCurrentPlayer","load","play","trackPlayHandler","setActivePlayerData","setActiveTrack","trackNode","trackId","parseFloat","trackDuration","trackMediaUrl","getAttribute","trackTitle","getActivePlayerDataFromTrackNode","clearActiveData","sendIncrementPlayedCount","incrementing","played_count","count","finally","sendToggleFavoriteRequest","toggleFavorite","toggleFavoriteById","isCurrent","isAuthenticated","results","favorite_track_ids","favorites","msgId","seekPosition","seekRewind","max","seekForward","seekBarHandle","hideButton","controlId","floatingPlayer","FloatingPlayer","currentTrackPlayer","floatingPlayerUpdate","getTrackNode","timeFormatted","floatingPlayerPlay","floatingPlayerStop","find","updateIncrementCallback","updatedPlayedCount","strValue","valueNode","closest","updateTrackPlayedCount","stopPreviousPlayer","playingId","isFloatingPlaying","contains","updateTrackFavorite","isCurrentFavorite","updateSingleFavoriteCallback","updateFavoritesCallback","initTrackPlayerNode","hasServerData","calculateAndUpdateTrackPosition","processLink","processTextBlock","updateBannerGeometry","footerNode","bannerHeight","clientHeight","marginBottom","handleAccept","event","hideBanner","handleReject","eqPos","indexOf","substring","eventHandler","initActiveBanner","oldInfo","newInfo","projectInfo","oldVersion","newVersion","checkProjectVersion"],"sourceRoot":""}