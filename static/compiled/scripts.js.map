{"version":3,"file":"scripts.js","mappings":"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","sources":["webpack://march-tales/./src/assets/helpers/CommonHelpers.js","webpack://march-tales/./src/assets/helpers/getJsText.ts","webpack://march-tales/./src/assets/CommonNotify/CommonNotifySingleton.ts","webpack://march-tales/./src/assets/helpers/floatToStr.ts","webpack://march-tales/./src/assets/constants/packDelim.ts","webpack://march-tales/./src/assets/track-blocks/TrackInfo.ts","webpack://march-tales/./src/assets/constants/acceptedCookiesId.ts","webpack://march-tales/./src/assets/track-blocks/localTrackInfoDb.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/ActivePlayerData.ts","webpack://march-tales/./src/assets/helpers/sendApiRequest.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerState.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/HiddenPlayer.ts","webpack://march-tales/./src/assets/track-blocks/tracksPlayer.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerCallbacks.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/FloatingPlayerClass.ts","webpack://march-tales/./src/assets/entities/ActivePlayerData/getActivePlayerDataFromTrackNode.ts","webpack://march-tales/./src/assets/entities/FloatingPlayer/floatingPlayer.ts","webpack://march-tales/./src/assets/checkProjectVersion.ts","webpack://march-tales/./src/assets/processTextContent.ts","webpack://march-tales/./src/assets/cookies-banner/cookiesBanner.ts","webpack://march-tales/./src/assets/userSession.ts","webpack://march-tales/./src/assets/carousel/carousels.ts","webpack://march-tales/./src/assets/index.ts","webpack://march-tales/./src/assets/aos.ts"],"sourcesContent":["// @ts-check\n\nexport function NOOP() {}\n\n/** Compare two arrays with scalar (number, string, boolean) values\n * @param {(number | string | boolean)[]} a1\n * @param {(number | string | boolean)[]} a2\n * @return {boolean}\n */\nexport function compareArrays(a1, a2) {\n  if (!a1 || !a1) {\n    return a1 === a2;\n  }\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  // Compare all the items...\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** getErrorText - Return plain text for error.\n * @param {string|Error|string[]|Error[]} error - Error or errors list.\n * @return {string}\n */\nexport function getErrorText(error) {\n  if (!error) {\n    return '';\n  }\n  if (Array.isArray(error)) {\n    return error.map(this.getErrorText.bind(this)).join('\\n');\n  }\n  if (error instanceof Error) {\n    error = error.message;\n  } else if (typeof error !== 'string') {\n    // TODO?\n    error = String(error);\n  }\n  return error;\n}\n\n/** quoteHtmlAttr -- quote all invalid characters for html\n * @param {string} str\n * @param {boolean} [preserveCR]\n */\nexport function quoteHtmlAttr(str, preserveCR) {\n  const crValue = preserveCR ? '&#13;' : '\\n';\n  return (\n    String(str) // Forces the conversion to string\n      .replace(/&/g, '&amp;') // This MUST be the 1st replacement\n      .replace(/'/g, '&apos;') // The 4 other predefined entities, required\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      // You may add other replacements here for HTML only (but it's not\n      // necessary). Or for XML, only if the named entities are defined in its\n      // DTD.\n      .replace(/\\r\\n/g, crValue) // Must be before the next replacement\n      .replace(/[\\r\\n]/g, crValue)\n  );\n}\n\n/** htmlToElement -- Create dom node instance from html string\n * @param {string} html - Html representing a single element\n * @return {HTMLElement}\n */\nexport function htmlToElement(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return /** @type HTMLElement */ (content.firstChild);\n}\n\n/** htmlToElements -- Convert text html representation to HTMLCollection object\n * @param {string|string[]} html\n * @return {HTMLCollection}\n */\nexport function htmlToElements(html) {\n  const template = document.createElement('template');\n  if (Array.isArray(html)) {\n    html = html.join('');\n  }\n  html = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = html;\n  const content = template.content;\n  return content.children;\n}\n\n/** updateNodeContent -- Replace all inner dom node content.\n * @param {Element} node\n * @param {THtmlContent} content\n */\nexport function updateNodeContent(node, content) {\n  if (!node) {\n    throw new Error('Undefined node to update content');\n  }\n  if (typeof content === 'string') {\n    // Replace with string content...\n    node.innerHTML = content;\n  } else if (Array.isArray(content)) {\n    // Replace multiple elements...\n    node.replaceChildren.apply(node, content);\n  } else {\n    // Replace single element...\n    node.replaceChildren(content);\n  }\n}\n\n/** decodeQuery\n * @param {string | string[]} qs\n * @param {string} [sep]\n * @param {string} [eq]\n * @param {any} [options]\n * @returns {{}}\n */\nexport function decodeQuery(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  /** @type {Record<string, unknown> | unknown[]} */\n  const obj = {};\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n  const regexp = /\\+/g;\n  qs = qs.split(sep);\n  let maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n  let len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n  for (let i = 0; i < len; ++i) {\n    const x = qs[i].replace(regexp, '%20'),\n      idx = x.indexOf(eq);\n    let kstr, vstr;\n    if (idx >= 0) {\n      kstr = x.substring(0, idx);\n      vstr = x.substring(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n    const k = decodeURIComponent(kstr);\n    const v = decodeURIComponent(vstr);\n    const it = obj[k];\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(it)) {\n      it.push(v);\n    } else {\n      obj[k] = [it, v];\n    }\n  }\n  return obj;\n}\n\n/** parseQuery -- Parse url query string (in form `?xx=yy&...` or `xx=yy&...`)\n * @param {string} search  - Query string\n * @return {Record<string, string>} query - Query object\n */\nexport function parseQuery(search) {\n  if (!search) {\n    return {};\n  }\n  if (search.indexOf('?') === 0) {\n    search = search.substring(1);\n  }\n  return decodeQuery(search);\n}\n\n/** makeQuery\n * @param {Record<string, string | number | boolean> | {}} params\n * @param {{ addQuestionSymbol?: boolean; useEmptyStrings?: boolean; useUndefinedValues?: boolean }} opts\n * @returns {string}\n */\nexport function makeQuery(params, opts = {}) {\n  let url = Object.entries(params)\n    .map(([id, val]) => {\n      const valStr = String(val);\n      if (val == undefined && !opts.useUndefinedValues) {\n        return undefined;\n      }\n      if (valStr === '' && !opts.useEmptyStrings) {\n        return undefined;\n      }\n      return encodeURI(id) + '=' + encodeURI(String(val == undefined ? '' : val));\n    })\n    .filter(Boolean)\n    .join('&');\n  if (opts.addQuestionSymbol && url) {\n    url = '?' + url;\n  }\n  return url;\n}\n\n/** Dynamically load external script\n * @param {string} url\n * @return {Promise<Event>}\n */\nexport function addScript(url) {\n  return new Promise((resolve, reject) => {\n    // document.write('<script src=\"' + url + '\"></script>');\n    const script = document.createElement('script');\n    script.setAttribute('src', url);\n    script.addEventListener('load', resolve);\n    script.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load script resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addScript]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(script);\n  });\n}\n\n/** Dynamically load external css\n * @param {string} url\n * @return {Promise<unknown>}\n */\nexport function addCssStyle(url) {\n  return new Promise((resolve, reject) => {\n    // Try to find exists node...\n    const testNode = document.head.querySelector(\n      'link[href=\"' + url + '\"], link[data-url=\"' + url + '\"]',\n    );\n    if (testNode) {\n      // Style already found!\n      return resolve({ type: 'already-loaded', target: testNode });\n    }\n    // reject(new Error('test')); // DEBUG: Test errors catching\n    const node = document.createElement('link');\n    node.setAttribute('href', url);\n    node.setAttribute('type', 'text/css');\n    node.setAttribute('rel', 'stylesheet');\n    node.setAttribute('data-url', url);\n    node.addEventListener('load', resolve);\n    node.addEventListener('error', (event) => {\n      const {\n        target,\n        // srcElement,\n      } = event;\n      // @ts-ignore\n      const { href, baseURI } = target;\n      const error = new Error(`Cannot load css resurce by url '${url}'`);\n      // eslint-disable-next-line no-console\n      console.error('[CommonHelpers:addCssStyle]', {\n        error,\n        url,\n        href,\n        baseURI,\n        target,\n        event,\n      });\n      // eslint-disable-next-line no-debugger\n      debugger;\n      reject(error);\n    });\n    document.head.appendChild(node);\n  });\n}\n\n/**\n * @param {HTMLSelectElement} node\n * @param {(string|number)[]} values\n */\nexport function setMultipleSelectValues(node, values) {\n  const strValues = values.map(String);\n  const options = Array.from(node.options);\n  options.forEach((item) => {\n    const { value, selected } = item;\n    const isSelected = strValues.includes(value);\n    if (isSelected !== selected) {\n      item.selected = isSelected;\n    }\n  });\n}\n\n/** processMultipleRequestErrors\n * @param {Response[]} resList\n * @return {Error[]}\n */\nexport function processMultipleRequestErrors(resList) {\n  return /** @type {Error[]} */ (\n    resList\n      .map((res) => {\n        if (!res.ok) {\n          return new Error(`Can't load url '${res.url}': ${res.statusText}, ${res.status}`);\n        }\n      })\n      .filter(Boolean)\n  );\n}\n\n/**\n * @param {number} n\n * @param {TNormalizedFloatStrOptions} [opts={}]\n * @returns {string}\n */\nexport function normalizedFloatStr(n, opts = {}) {\n  const {\n    // prettier-ignore\n    fixedPoint = 2,\n    stripFixedZeros = true,\n  } = opts;\n  let str = n.toFixed(fixedPoint);\n  if (stripFixedZeros) {\n    str = str.replace(/\\.*0+$/, '');\n  }\n  return str;\n}\n/**\n * @param {number} size\n * @param {TGetApproxSizeOptions} [opts={}]\n * @returns {[number | string, string]}\n */\nexport function getApproxSize(size, opts = {}) {\n  const { normalize } = opts;\n  const levels = [\n    'B', // Bytes\n    'K', // Kilobytes\n    'M', // Megabytes\n    'G', // Gigabites\n  ];\n  const lastLevel = levels.length - 1;\n  const range = 1024;\n  let level = 0;\n  while (level < lastLevel) {\n    if (size < range) {\n      break;\n    }\n    size /= range;\n    level++;\n  }\n  const currLevelStr = levels[level];\n  /** Result: final number or normalized representation (depends on option's `normalize`)\n   * @type {number | string}\n   */\n  let result = size;\n  if (normalize) {\n    const normalizeOpts = typeof normalize === 'object' ? normalize : undefined;\n    result = normalizedFloatStr(size, normalizeOpts);\n  }\n  return [result, currLevelStr];\n}\n\n/** @param {number} time - Time duration, ms\n * @return {string}\n */\nexport function formatDuration(time) {\n  const sec = time / 1000;\n  const min = sec / 60;\n  const hrs = min / 60;\n  const days = hrs / 24;\n  const srcItems = [\n    // prettier-ignore\n    days,\n    hrs % 24,\n    min % 60,\n    sec % 60,\n  ];\n  const items = srcItems.map(Math.floor).map((val, idx) => {\n    // Not mins and secs and empty...\n    if (idx < 2 && !val) {\n      return undefined;\n    }\n    // Hours, mins, secs...\n    if (idx >= 1) {\n      return String(val).padStart(2, '0');\n    }\n    // Days...\n    if (!idx) {\n      return String(val) + 'd';\n    }\n  });\n  /* console.log('[CommonHelpers:formatDuration]', {\n   *   sec,\n   *   min,\n   *   hrs,\n   *   days,\n   *   items,\n   *   srcItems,\n   *   time,\n   * });\n   */\n  const daysStr = items.shift();\n  return [\n    // prettier-ignore\n    daysStr,\n    items.filter(Boolean).join(':'),\n  ]\n    .filter(Boolean)\n    .join(' ');\n}\n\n/** @param {string} str */\nexport function getAsyncHash(str) {\n  const encoder = new TextEncoder();\n  const buf = encoder.encode(str);\n  return crypto.subtle.digest('SHA-256', buf).then((aryBuf) => {\n    const ary = new Uint8Array(aryBuf);\n    const res = Array.from(ary)\n      .map((x) => x.toString(16).padStart(2, '0'))\n      .join('');\n    return res;\n  });\n}\n\n/** @param {string} cookieId */\nexport function getCookie(cookieId) {\n  const cookiesStr = document.cookie;\n  const cookiesList = cookiesStr.split(';'); // .map((s) => s.trim().split('='));\n  for (let i = 0; i < cookiesList.length; i++) {\n    const s = cookiesList[i];\n    const [id, val] = s.trim().split('=').map(decodeURIComponent);\n    if (id === cookieId) {\n      return val;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {string} id\n * @param {string} val\n * @param {number} [maxAgeSecs] -- Seconds of expire period\n */\nexport function setCookie(id, val, maxAgeSecs) {\n  const cookieVal = [id, val || ''].map(encodeURIComponent).join('=');\n  const parts = [\n    // prettier-ignore\n    cookieVal,\n    'path=/',\n  ];\n  if (maxAgeSecs) {\n    parts.push('max-age=' + maxAgeSecs);\n  }\n  const fullCookie = parts.filter(Boolean).join(';');\n  document.cookie = fullCookie;\n}\n\nexport function deleteAllCookies() {\n  document.cookie.split(';').forEach((cookie) => {\n    const eqPos = cookie.indexOf('=');\n    const name = eqPos > -1 ? cookie.substring(0, eqPos) : cookie;\n    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT';\n  });\n}\n","import { quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nexport function getJsText(id: string) {\n  const textNode = document.body.querySelector('#js-texts #' + id);\n  if (!textNode) {\n    // eslint-disable-next-line no-console\n    console.warn('[getJsText] Can not find js text node for id:', id);\n  }\n  const text = textNode?.innerHTML || id;\n  return quoteHtmlAttr(text).trim();\n}\n","import * as CommonHelpers from '../helpers/CommonHelpers';\n\n/** Toast types */\ntype TMode = 'info' | 'error' | 'warn' | 'success';\n\n/** Icon shapes (move to constants?) */\nconst icons: Record<TMode, string> = {\n  success: 'bi-check',\n  error: 'bi-exclamation-triangle-fill',\n  warn: 'bi-bell-fill',\n  info: 'bi-info-lg',\n};\n\nconst iconClassNamePrefix = 'bi';\n\ninterface TNotifyData {\n  node: HTMLDivElement;\n  handler?: TSetTimeout;\n}\n\n// Define module...\nclass CommonNotify {\n  notifyRoot?: HTMLDivElement;\n\n  timeoutDelay = 3000;\n\n  inited = false;\n\n  // Methods...\n\n  removeNotify(notifyData: TNotifyData) {\n    const { node, handler } = notifyData;\n    // Play animation...\n    node.classList.remove('active');\n    if (handler) {\n      clearTimeout(handler);\n      notifyData.handler = undefined;\n    }\n    setTimeout(() => {\n      // ...And remove node (TODO: Check if node still exists in dom tree)...\n      try {\n        this.notifyRoot?.removeChild(node);\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n    }, 250); // Value of `var(--common-animation-time)`\n  }\n\n  /** showNotify\n   * @param {'info' | 'error' | 'warn' | 'success'} mode - Message type ('info' is default)\n   * @param {string|Error} text - Message content\n   */\n  showNotify(mode: TMode, text: string | Error) {\n    this.ensureInit();\n    if (!text) {\n      // If only one parameters passed assume it as message with default type\n      text = mode;\n      mode = 'info';\n    }\n    let content: string;\n    if (text instanceof Error) {\n      // Convert error object to the plain text...\n      content = CommonHelpers.getErrorText(text);\n    } else {\n      content = String(text);\n    }\n    // Create node...\n    const node = document.createElement('div');\n    node.classList.add('notify');\n    node.classList.add('notify-' + mode);\n    // Add icon...\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon');\n    nodeIcon.classList.add(iconClassNamePrefix);\n    nodeIcon.classList.add(icons[mode]);\n    node.appendChild(nodeIcon);\n    // Add text...\n    const nodeText = document.createElement('div');\n    nodeText.classList.add('text');\n    nodeText.innerHTML = content;\n    node.appendChild(nodeText);\n    this.notifyRoot?.appendChild(node);\n    // Play appearing animation...\n    window.requestAnimationFrame(() => {\n      setTimeout(() => {\n        node.classList.add('active');\n      }, 10);\n    });\n    // Remove node after delay...\n    const notifyData: TNotifyData = { node, handler: undefined };\n    const removeNotifyHandler = this.removeNotify.bind(this, notifyData);\n    notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    // Stop & restore timer on mouse in and out events...\n    node.addEventListener('mouseenter', () => {\n      // Clear timer...\n      clearTimeout(notifyData.handler);\n    });\n    node.addEventListener('mouseleave', () => {\n      // Resume timer...\n      notifyData.handler = setTimeout(removeNotifyHandler, this.timeoutDelay);\n    });\n    // Click handler...\n    node.addEventListener('click', removeNotifyHandler);\n  }\n\n  // Some shorthands...\n\n  /** @param {string|Error} text - Message content */\n  showInfo(text: string | Error) {\n    this.showNotify('info', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showSuccess(text: string | Error) {\n    this.showNotify('success', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showWarn(text: string | Error) {\n    this.showNotify('warn', text);\n  }\n\n  /** @param {string|Error} text - Message content */\n  showError(text: string | Error) {\n    this.showNotify('error', text);\n  }\n\n  // Demo...\n\n  showDemo() {\n    // DEBUG: Show sample notifiers...\n    this.showInfo('Info');\n    this.showSuccess('Success');\n    this.showWarn('Warn');\n    this.showError('Error');\n  }\n\n  // Initialization...\n\n  /** Ensure the modal has initiazlized */\n  ensureInit() {\n    this.init();\n  }\n\n  createDomNode() {\n    // TODO: To use bootstrap toasts?\n    const rootNode = document.body;\n    const notifyRoot = document.createElement('div');\n    notifyRoot.classList.add('notify-root');\n    notifyRoot.setAttribute('id', 'notify-root');\n    rootNode.appendChild(notifyRoot);\n    this.notifyRoot = notifyRoot;\n  }\n\n  /** Initialize nodule. */\n  init() {\n    if (!this.inited) {\n      this.createDomNode();\n      this.inited = true;\n    }\n  }\n}\n\n// Create and export singletone\nexport const commonNotify = new CommonNotify();\n\n// commonNotify.init();\n","export function floatToStr(num: number | undefined) {\n  if (!num) {\n    return '0';\n  }\n  if (typeof num === 'string') {\n    if (isNaN(num)) {\n      return '0';\n    }\n    num = Number(num);\n  }\n  return num\n    .toFixed(3)\n    .replace(/(\\.\\d+)0+$/, '$1')\n    .replace(/\\.0+$/, '');\n}\n","// Use dashes to save space in cookies (commas are converted to `%2C`-like entities)\nexport const packDelim = '-';\n","import { floatToStr } from '../helpers/floatToStr';\nimport { packDelim } from '../constants/packDelim';\n\nexport interface TrackInfo {\n  id: number; // track.id\n  favorite: boolean;\n  playedCount: number; // track.played_count (but only for current user!).\n  position: number; // position?.inMilliseconds ?? 0\n  lastUpdated: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n  lastPlayed: number; // DateTime.now().millisecondsSinceEpoch <-> DateTime.fromMillisecondsSinceEpoch(ms)\n  lastFavorited: number; // DateTime\n}\n\nconst finalPackDelimReg = new RegExp(packDelim + '+$');\n\nexport function trackInfoFromJsonStr(str: string): TrackInfo | undefined {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const list = str.split(packDelim);\n    const [\n      // Keep the order!\n      id,\n      favorite,\n      playedCount,\n      position,\n      lastUpdated, // Timestamp\n      lastPlayed, // Timestamp\n      lastFavorited,\n    ] = list;\n    const data: TrackInfo = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      favorite: Boolean(favorite),\n      playedCount: playedCount ? Number(playedCount) : 0,\n      position: position ? Number(position) : 0,\n      lastUpdated: lastUpdated ? Number(lastUpdated) * 1000 : 0, // Timestamp\n      lastPlayed: lastPlayed ? Number(lastPlayed) * 1000 : 0, // Timestamp\n      lastFavorited: lastFavorited ? Number(lastFavorited) * 1000 : 0, // Timestamp\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[TrackInfo:trackInfoFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nexport function trackInfoToJsonStr(trackInfo: TrackInfo) {\n  const {\n    // Keep the order!\n    id,\n    favorite,\n    playedCount,\n    position,\n    lastUpdated,\n    lastPlayed,\n    lastFavorited,\n  } = trackInfo;\n  const list = [\n    // Keep the order!\n    id ? Number(id) : undefined,\n    favorite ? Number(favorite) : undefined,\n    playedCount ? Number(playedCount) : undefined,\n    position ? floatToStr(position) : undefined, // Use fixed decimal presentation for floats\n    lastUpdated ? Math.round(lastUpdated / 1000) : undefined, // Timestamp\n    lastPlayed ? Math.round(lastPlayed / 1000) : undefined, // Timestamp\n    lastFavorited ? Math.round(lastFavorited / 1000) : undefined, // Timestamp\n  ];\n  return list.join(packDelim).replace(finalPackDelimReg, '');\n}\n","export const acceptedCookiesId = 'cookies';\n","import { TrackInfo, trackInfoFromJsonStr, trackInfoToJsonStr } from './TrackInfo';\nimport { setCookie } from '../helpers/CommonHelpers';\nimport { packDelim } from '../constants/packDelim';\nimport { acceptedCookiesId } from '../constants/acceptedCookiesId';\n\n/* TODO: Use `new CustomEvent` to broadcast events */\n\nclass LocalTrackInfoDb {\n  // End-user api\n\n  updatePlayedCount(id: number, playedCount?: number, timestamp?: number) {\n    try {\n      const now = Date.now();\n      const trackInfo = this.getOrCreate(id);\n      if (playedCount == undefined || isNaN(playedCount)) {\n        trackInfo.playedCount = trackInfo.playedCount ? trackInfo.playedCount + 1 : 1;\n      } else {\n        trackInfo.playedCount = playedCount;\n      }\n      trackInfo.lastPlayed = timestamp || now;\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:incrementPlayedCount]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updatePosition(id: number, position: number, timestamp?: number) {\n    try {\n      const now = Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.position = position;\n      trackInfo.lastPlayed = timestamp || now; // ???\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:updatePosition]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavorite(id: number, favorite: boolean, timestamp?: number) {\n    try {\n      const now = Date.now();\n      const trackInfo = this.getOrCreate(id);\n      trackInfo.favorite = favorite;\n      trackInfo.lastFavorited = timestamp || now;\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      this._toggleInFavoritesIndex(id, favorite);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:setFavorite]', err.message, {\n        err,\n        id,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  updateFavoritesByTrackIds(\n    ids: number[],\n    favoritedTimes?: Record<UserTrack['track_id'], UserTrack['favorited_at_sec']>,\n    timestamp?: number,\n  ) {\n    const now = Date.now();\n    const index = this._getIndex();\n    index.forEach((id) => {\n      const isFavorite = ids.includes(id);\n      const trackInfo = this.getOrCreate(id);\n      if (trackInfo.favorite !== isFavorite) {\n        trackInfo.favorite = isFavorite;\n        trackInfo.lastFavorited = (favoritedTimes && favoritedTimes[id]) || timestamp || now;\n        // TODO: To check if it works correct\n        trackInfo.lastUpdated = now;\n        this.insert(trackInfo);\n      }\n    });\n    this._setFavoritesIndex(ids);\n  }\n\n  save(trackInfo: TrackInfo, timestamp?: number) {\n    try {\n      const now = Date.now();\n      trackInfo.lastPlayed = timestamp || now; // ???\n      trackInfo.lastUpdated = now;\n      this.insert(trackInfo);\n      // this.updateEvents.broadcast(TracksInfoDbUpdate(trackInfo));\n      // const testTrackInfo = await this.getById(id);\n      return trackInfo;\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('[LocalTrackInfoDb:save]', err.message, {\n        err,\n        trackInfo,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw err;\n    }\n  }\n\n  // Low-level api\n\n  createNewRecord(id: number) {\n    const now = Date.now();\n    const trackInfo: TrackInfo = {\n      id: id, // track.id\n      favorite: false,\n      playedCount: 0, // track.played_count (but only for current user!).\n      position: 0, // position\n      lastUpdated: now, // DateTime\n      lastPlayed: 0, // DateTime\n      lastFavorited: 0, // DateTime\n    };\n    return trackInfo;\n  }\n\n  getOrCreate(id: number) {\n    return this.getById(id) || this.createNewRecord(id);\n  }\n\n  /// Create or update the record. (Returns inserted/updated record id.)\n  insert(trackInfo: TrackInfo) {\n    const { id } = trackInfo;\n    const str = trackInfoToJsonStr(trackInfo);\n    window.localStorage.setItem('ti-' + id, str);\n    this._addToIndex(id);\n  }\n\n  getFavorites() {\n    return this.getAll().filter((it) => it.favorite);\n  }\n\n  getById(id: number): TrackInfo | undefined {\n    const str = window.localStorage.getItem('ti-' + id);\n    if (!str) {\n      return undefined;\n    }\n    return trackInfoFromJsonStr(str);\n  }\n\n  _getFavoritesIndex() {\n    try {\n      const str = window.localStorage.getItem('favorites');\n      if (!str) {\n        return [] as number[];\n      }\n      const list = str\n        .split(packDelim)\n        .map(Number)\n        .filter((n) => !isNaN(n)) as number[];\n      return list;\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setFavoritesIndex(favoritesIndex: number[]) {\n    const list = favoritesIndex.filter((n) => !isNaN(n)).filter(Boolean);\n    const str = list.join(packDelim);\n    window.localStorage.setItem('favorites', str);\n    // Update cookie value and document status\n    const favoritesCount = list.length;\n    const hasFavorites = !!favoritesCount;\n    document.body.classList.toggle('has-favorites', hasFavorites);\n    // Update count texts\n    document.querySelectorAll<HTMLElement>('.favorites-count').forEach((node) => {\n      node.innerText = String(favoritesCount);\n    });\n    // Update cookie\n    if (window.localStorage.getItem(acceptedCookiesId)) {\n      setCookie('favorites', str);\n    }\n  }\n\n  _addToFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (!favoritesIndex.includes(id)) {\n      favoritesIndex.push(id);\n      this._setFavoritesIndex(favoritesIndex);\n    }\n  }\n\n  _removeFromFavoritesIndex(id: number) {\n    const favoritesIndex = this._getFavoritesIndex();\n    if (favoritesIndex.includes(id)) {\n      this._setFavoritesIndex(favoritesIndex.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInFavoritesIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToFavoritesIndex(id);\n    } else {\n      this._removeFromFavoritesIndex(id);\n    }\n  }\n\n  _getIndex() {\n    try {\n      const str = window.localStorage.getItem('ti-index');\n      return (str ? str.split(packDelim).map((v) => (v ? Number(v) : 0)) : []) as number[];\n    } catch (\n      _ // eslint-disable-line @typescript-eslint/no-unused-vars\n    ) {\n      return [] as number[];\n    }\n  }\n\n  _setIndex(index: number[]) {\n    window.localStorage.setItem('ti-index', index.join(packDelim));\n  }\n\n  _addToIndex(id: number) {\n    const index = this._getIndex();\n    if (!index.includes(id)) {\n      index.push(id);\n      this._setIndex(index);\n    }\n  }\n\n  _removeFromIndex(id: number) {\n    const index = this._getIndex();\n    if (index.includes(id)) {\n      this._setIndex(index.filter((checkId) => id !== checkId));\n    }\n  }\n\n  _toggleInIndex(id: number, value?: boolean) {\n    if (value) {\n      this._addToIndex(id);\n    } else {\n      this._removeFromIndex(id);\n    }\n  }\n\n  getAll() {\n    const index = this._getIndex();\n    const list: TrackInfo[] = index\n      .map((id) => {\n        return this.getById(id);\n      })\n      .filter(Boolean) as TrackInfo[];\n    return list;\n  }\n\n  delete(id: number) {\n    window.localStorage.removeItem('ti-' + id);\n    this._removeFromIndex(id);\n  }\n\n  clearAll() {\n    const index = this._getIndex();\n    index.forEach((id) => {\n      window.localStorage.removeItem('ti-' + id);\n    });\n    this._setIndex([]);\n  }\n}\n\n// Create a singleton\nexport const localTrackInfoDb = new LocalTrackInfoDb();\n","export interface ActivePlayerData {\n  id: number;\n  title: string;\n  imageUrl: string;\n  mediaUrl: string;\n  duration: number;\n  favorite: boolean;\n}\n\nconst storageActivePlayerDataId = 'ActivePlayerData';\n\nfunction convertActivePlayerDataFromJsonStr(str?: string | null) {\n  if (!str) {\n    return undefined;\n  }\n  try {\n    const raw = JSON.parse(str);\n    // const list = str.split(',');\n    const {\n      // Keep the order!\n      id,\n      title,\n      imageUrl,\n      mediaUrl,\n      duration,\n      favorite,\n    } = raw;\n    const data: ActivePlayerData = {\n      // Keep the order!\n      id: id ? Number(id) : 0,\n      title: title ? String(title) : '',\n      imageUrl: imageUrl ? String(imageUrl) : '',\n      mediaUrl: mediaUrl ? String(mediaUrl) : '',\n      duration: duration ? Number(duration) : 0,\n      favorite: Boolean(favorite),\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[ActivePlayerData:storageActivePlayerDataId] Parse error', {\n      str,\n      err,\n    });\n    return undefined;\n  }\n}\n\nfunction convertActivePlayerDataToJsonStr(data: ActivePlayerData) {\n  return JSON.stringify(data);\n}\n\nexport function saveActivePlayerData(data?: ActivePlayerData) {\n  const str = data ? convertActivePlayerDataToJsonStr(data) : '';\n  window.localStorage.setItem(storageActivePlayerDataId, str);\n}\n\nexport function loadActivePlayerData() {\n  const str = window.localStorage.getItem(storageActivePlayerDataId);\n  const data = convertActivePlayerDataFromJsonStr(str);\n  return data?.id ? data : undefined;\n}\n","import { getCookie } from '../helpers/CommonHelpers';\nimport * as CommonHelpers from '../helpers/CommonHelpers';\nimport { getJsText } from './getJsText';\n\nexport function sendApiRequest(url: string, method: string = 'GET', requestData?: unknown) {\n  const csrftoken = getCookie('csrftoken');\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    'X-CSRFToken': csrftoken || '',\n    // Credentials: 'include',\n    // Cookie: csrftoken && `csrftoken=${csrftoken}`,\n    // 'X-Session-Token': sessionId, // X-Session-Token\n    // 'Accept-Language': 'ru', // django_language=ru; content-language: ru;\n  };\n  return fetch(url, {\n    method,\n    headers,\n    credentials: 'include',\n    body: requestData ? JSON.stringify(requestData) : null,\n  })\n    .then(async (res) => {\n      const { ok, status, statusText } = res;\n      // TODO: Check is it json?\n      let data: (unknown & { detail?: string }) | undefined = undefined;\n      try {\n        data = await res.json();\n      } catch (\n        _e // eslint-disable-line @typescript-eslint/no-unused-vars\n      ) {\n        // NOOP\n      }\n      if (!ok || status !== 200) {\n        const errMsg = [getJsText('fetchError') + ' ' + status, data?.detail || statusText]\n          .filter(Boolean)\n          .join(': ');\n        // eslint-disable-next-line no-console\n        console.error('[sendApiRequest]', errMsg, {\n          ok,\n          data,\n          statusText,\n          status,\n          res,\n          url,\n          requestData,\n          method,\n          headers,\n        });\n        debugger; // eslint-disable-line no-debugger\n        throw new Error(errMsg);\n      }\n      return data as unknown;\n    })\n    .catch((err) => {\n      const errMsg = [getJsText('failedApiRequest'), CommonHelpers.getErrorText(err)]\n        .filter(Boolean)\n        .join(': ');\n      // eslint-disable-next-line no-console\n      console.error('[sendApiRequest]', errMsg, {\n        err,\n        url,\n        requestData,\n        method,\n        headers,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw new Error(errMsg);\n    });\n}\n","import { floatToStr } from '../../helpers/floatToStr';\n\ntype Status = 'playing' | 'paused' | 'waiting';\n\nexport interface FloatingPlayerState {\n  lastTimestamp?: number; // Timestamp\n  visible?: boolean;\n  loaded?: boolean;\n  status?: Status | undefined;\n  position?: number;\n  progress?: number;\n  error?: string;\n}\n\nconst storageFloatingPlayerStateId = 'FloatingPlayerState';\n\nfunction convertFloatingPlayerStateFromJsonStr(str?: string | null) {\n  if (!str) {\n    return {};\n  }\n  try {\n    const list = str.split(',');\n    const [\n      // Keep the order!\n      lastTimestamp,\n      visible,\n      status,\n      position,\n      progress,\n    ] = list;\n    const data: FloatingPlayerState = {\n      // Keep the order!\n      lastTimestamp: lastTimestamp ? Number(lastTimestamp) * 1000 : undefined, // Timestamp\n      visible: visible ? Boolean(visible) : undefined,\n      status: status ? (String(status) as Status) : undefined,\n      position: position ? Number(position) : undefined,\n      progress: progress ? Number(progress) : undefined,\n    };\n    return data;\n  } catch (\n    err // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn('[FloatingPlayerState:convertFloatingPlayerStateFromJsonStr] Parse error', {\n      str,\n      err,\n    });\n    return {};\n  }\n}\n\nfunction convertFloatingPlayerStateToJsonStr(data: FloatingPlayerState) {\n  const {\n    // Keep the order!\n    lastTimestamp,\n    visible,\n    status,\n    position,\n    progress,\n  } = data;\n  const list = [\n    // Keep the order!\n    lastTimestamp ? Math.round(lastTimestamp / 1000) : undefined, // Timestamp\n    visible ? Number(visible) : undefined, // Boolean\n    status ? status : undefined,\n    position ? floatToStr(position) : undefined,\n    progress ? floatToStr(progress) : undefined,\n  ];\n  const str = list.join(',').replace(/,+$/, '');\n  return str;\n}\n\nexport function saveFloatingPlayerState(data: FloatingPlayerState) {\n  const saveData = { ...data, lastTimestamp: Date.now() };\n  const str = convertFloatingPlayerStateToJsonStr(saveData);\n  window.localStorage.setItem(storageFloatingPlayerStateId, str);\n}\n\nexport function loadFloatingPlayerState() {\n  const str = window.localStorage.getItem(storageFloatingPlayerStateId);\n  return convertFloatingPlayerStateFromJsonStr(str);\n}\n","interface THiddenPlayerOptions {\n  type?: string;\n  src?: string;\n}\n\nexport class HiddenPlayer {\n  hiddenPlayerNode?: HTMLElement;\n  parentDomNode?: HTMLElement;\n\n  audioNode?: HTMLAudioElement;\n  sourceNode?: HTMLSourceElement;\n\n  setParentDomNode(parentDomNode: HTMLElement) {\n    this.parentDomNode = parentDomNode;\n  }\n\n  requireParentDomNode() {\n    return this.parentDomNode || document.body;\n  }\n\n  ensureHiddenPlayer(/* opts: THiddenPlayerOptions = {} */) {\n    if (!this.hiddenPlayerNode) {\n      this.hiddenPlayerNode = document.createElement('div');\n      this.hiddenPlayerNode.classList.add('hidden-player');\n      const audio = document.createElement('audio');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      this.hiddenPlayerNode.appendChild(audio);\n      const parentDomNode = this.requireParentDomNode();\n      parentDomNode.appendChild(this.hiddenPlayerNode);\n    }\n    return this.hiddenPlayerNode;\n  }\n\n  hasAudio() {\n    return !!this.audioNode;\n  }\n\n  hasSource() {\n    return !!this.sourceNode;\n  }\n\n  ensureHiddenPlayerAudio() {\n    if (!this.audioNode) {\n      const parentDomNode = this.requireParentDomNode();\n      this.audioNode = document.createElement('audio');\n      this.audioNode.classList.add('hidden-player');\n      this.audioNode.setAttribute('preload', 'auto');\n      // audio.addEventListener('loadeddata', this.hiddenPlayerCanPlay);\n      parentDomNode.appendChild(this.audioNode);\n    }\n    return this.audioNode;\n  }\n\n  createHiddenPlayerSource(opts: THiddenPlayerOptions = {}) {\n    this.removeHiddenPlayerSource();\n    const audio = this.ensureHiddenPlayerAudio();\n    this.sourceNode = document.createElement('source');\n    this.sourceNode.setAttribute('type', opts.type || 'audio/mpeg');\n    if (opts.src) {\n      this.sourceNode.setAttribute('src', opts.src);\n    }\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event\n    // audio.addEventListener('canplay', this.handleCanPlay.bind(this));\n    // audio.addEventListener('playing', this.handlePlay.bind(this));\n    // audio.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    // audio.addEventListener('ended', this.handleEnded.bind(this));\n    // this.sourceNode.addEventListener('error', this.handleError.bind(this));\n    audio.appendChild(this.sourceNode);\n    return this.sourceNode;\n  }\n\n  removeHiddenPlayerAudio() {\n    if (this.audioNode) {\n      this.audioNode.pause();\n      this.audioNode.remove();\n      this.audioNode = undefined;\n      this.sourceNode = undefined;\n    }\n  }\n\n  removeHiddenPlayerSource() {\n    const audio = this.ensureHiddenPlayerAudio();\n    const prevSources = Array.from(audio.getElementsByTagName('source'));\n    for (const node of prevSources) {\n      node.remove();\n    }\n    this.sourceNode = undefined;\n  }\n}\n","import { formatDuration, quoteHtmlAttr } from '../helpers/CommonHelpers';\n\nimport { localTrackInfoDb } from './localTrackInfoDb';\nimport { floatingPlayer } from '../entities/FloatingPlayer/floatingPlayer';\nimport {\n  FloatingPlayerFavoriteData,\n  FloatingPlayerFavoritesData,\n  FloatingPlayerIncrementData,\n  FloatingPlayerUpdateData,\n} from '../entities/FloatingPlayer/FloatingPlayerCallbacks';\nimport { floatToStr } from '../helpers/floatToStr';\nimport { TrackInfo } from './TrackInfo';\n\nlet allPlayers: NodeListOf<HTMLElement>;\nlet currentTrackPlayer: HTMLElement | undefined = undefined;\n\n// Values for dataset statuses\nconst TRUE = 'true';\n\nfunction calculateAndUpdateTrackPosition(\n  trackNode: HTMLElement,\n  position: number,\n  lastPlayed: number,\n  isCurrent?: boolean,\n) {\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const { dataset } = trackNode;\n  const { trackId, trackDuration } = dataset;\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  const id = Number(trackId);\n  const duration = trackDuration ? parseFloat(trackDuration.replace(',', '.')) : 0;\n  if (!duration) {\n    const error = new Error(`No duration provided for a track: ${id}`);\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:updateTrackPosition]', error.message, {\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n  }\n  const ratio = position / duration;\n  const progress = Math.min(100, ratio * 100);\n  requestAnimationFrame(() => {\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n  localTrackInfoDb.updatePosition(id, position, lastPlayed);\n  if (isCurrent) {\n    floatingPlayer.state.position = position;\n    floatingPlayer.state.progress = progress;\n    floatingPlayer.updateTrackPosition(true);\n  }\n  // TODO: Update the floating player if isCurrent?\n  return { position, duration, progress };\n}\n\nfunction floatingPlayerUpdate(data: FloatingPlayerUpdateData) {\n  const { floatingPlayerState, activePlayerData } = data;\n  const { id } = activePlayerData;\n  let trackNode = currentTrackPlayer;\n  if (!trackNode || Number(trackNode.dataset.trackId) !== id) {\n    trackNode = getTrackNode(id);\n  }\n  if (!trackNode) {\n    return;\n  }\n  // const isCurrent = trackNode === currentTrackPlayer;\n  const { position = 0, progress = 0, status } = floatingPlayerState;\n  const { dataset } = trackNode;\n  const timeNode = trackNode.querySelector<HTMLElement>('.time');\n  const timeMs = Math.floor(position * 1000);\n  const timeFormatted = formatDuration(timeMs);\n  requestAnimationFrame(() => {\n    if (status) {\n      dataset.status = status;\n    } else {\n      delete dataset.status;\n    }\n    dataset.position = floatToStr(position);\n    dataset.progress = floatToStr(progress);\n    trackNode.style.setProperty('--progress', dataset.progress);\n    if (timeNode) {\n      timeNode.innerText = timeFormatted;\n    }\n  });\n}\n\nfunction floatingPlayerPlay(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    const error = new Error('Wrong active track id!');\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:floatingPlayerPlay]', error.message, {\n      id,\n      'activePlayerData.id': activePlayerData.id,\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n    return;\n  }\n  requestAnimationFrame(() => {\n    dataset.status = 'playing';\n  });\n}\n\nfunction floatingPlayerStop(data: FloatingPlayerUpdateData) {\n  const {\n    // floatingPlayerState, // ???\n    activePlayerData,\n  } = data;\n  if (!currentTrackPlayer) {\n    throw new Error('No current track player node!');\n  }\n  const { dataset } = currentTrackPlayer;\n  const id = Number(dataset.trackId);\n  if (id !== activePlayerData.id) {\n    const error = new Error('Wrong active track id!');\n    // eslint-disable-next-line no-console\n    console.error('[tracksPlayer:floatingPlayerState]', error.message, {\n      id,\n      'activePlayerData.id': activePlayerData.id,\n      error,\n    });\n    debugger; // eslint-disable-line no-debugger\n    return;\n  }\n  requestAnimationFrame(() => {\n    delete dataset.status;\n  });\n  setTimeout(tryToPlayNextTrack.bind(undefined, currentTrackPlayer), 500);\n}\n\nfunction tryToPlayNextTrack(currentTrackPlayer: HTMLElement) {\n  const thisIdx = Array.from(allPlayers).indexOf(currentTrackPlayer);\n  const nextIdx = (thisIdx + 1) % allPlayers.length;\n  const nextTrackNode = allPlayers[nextIdx];\n  if (!nextTrackNode || nextTrackNode === currentTrackPlayer) {\n    return;\n  }\n  playTrackNode(nextTrackNode);\n}\n\nfunction getTrackNode(id: number) {\n  const players = Array.from(allPlayers);\n  const trackNode = players.find((it) => Number(it.dataset.trackId) === id);\n  return trackNode;\n}\n\nfunction stopPreviousPlayer() {\n  if (currentTrackPlayer) {\n    const { dataset } = currentTrackPlayer;\n    requestAnimationFrame(() => {\n      currentTrackPlayer!.classList.toggle('current', false);\n      delete dataset.status;\n      delete dataset.loaded;\n      delete dataset.error;\n    });\n  }\n}\n\nfunction updateTrackPlayedCount(\n  trackNode: HTMLElement,\n  playedCount?: number,\n  _isCurrent?: boolean,\n) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId);\n  if (!id) {\n    throw new Error('No current track id!');\n  }\n  const updatedTrackInfo = localTrackInfoDb.updatePlayedCount(id, playedCount);\n  const { playedCount: updatedPlayedCount } = updatedTrackInfo;\n  const strValue = quoteHtmlAttr(String(updatedPlayedCount));\n  const valueNode = trackNode.querySelector('#played_count') as HTMLElement;\n  // Update counter in the document...\n  if (valueNode) {\n    const parent = valueNode.closest('.track-played-count[data-played-count]') as HTMLElement;\n    requestAnimationFrame(() => {\n      valueNode.innerText = strValue;\n      if (parent) {\n        parent.dataset.playedCount = strValue;\n      }\n    });\n  }\n  // TODO: Update value in the floating player?\n}\n\nfunction updateIncrementCallback(data: FloatingPlayerIncrementData) {\n  const {\n    count,\n    // floatingPlayerState,\n    activePlayerData,\n  } = data;\n  const trackNode = getTrackNode(activePlayerData.id);\n  const isCurrent = trackNode === currentTrackPlayer;\n  if (trackNode) {\n    updateTrackPlayedCount(trackNode, count, isCurrent);\n  }\n}\n\nfunction playTrackNode(trackNode: HTMLElement) {\n  // Reset previous player\n  if (currentTrackPlayer && currentTrackPlayer !== trackNode) {\n    stopPreviousPlayer();\n  }\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n\n  const playingId = floatingPlayer.getActiveTrackId();\n  const isFloatingPlaying = floatingPlayer.isPlaying();\n  if (isFloatingPlaying) {\n    // Pause playback\n    floatingPlayer.pauseCurrentPlayer();\n    if (playingId === id) {\n      // Return -- just pause current track\n      return;\n    }\n  }\n\n  // Clear all tracks active status?\n  requestAnimationFrame(() => {\n    allPlayers.forEach((it) => {\n      if (it !== trackNode && it.classList.contains('current')) {\n        it.classList.toggle('current', false);\n      }\n    });\n    trackNode.classList.toggle('current', true);\n  });\n\n  currentTrackPlayer = trackNode;\n\n  const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  floatingPlayer.setActiveTrack(trackNode, position);\n\n  floatingPlayer.playCurrentPlayer();\n\n  // Show floating player if has been hidden\n  if (!isFloatingPlaying) {\n    floatingPlayer.showFloatingPlayer();\n  }\n}\n\n/** Play button click handler */\nfunction trackPlayHandler(ev: MouseEvent) {\n  const controlNode = ev.currentTarget as HTMLElement;\n  const trackNode = controlNode.closest('.track-player') as HTMLElement;\n  playTrackNode(trackNode);\n}\n\nfunction updateTrackFavoriteInDataset(trackNode: HTMLElement, isFavorite: boolean) {\n  const { dataset } = trackNode;\n  const { favorite } = dataset;\n  const isCurrentFavorite = Boolean(favorite);\n  if (isFavorite !== isCurrentFavorite) {\n    requestAnimationFrame(() => {\n      if (isFavorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n    });\n  }\n}\n\nfunction updateSingleFavoriteCallback({ id, favorite }: FloatingPlayerFavoriteData) {\n  const trackNode = getTrackNode(id);\n  if (trackNode) {\n    updateTrackFavoriteInDataset(trackNode, favorite);\n  }\n}\n\nfunction updateFavoritesCallback({ favorites }: FloatingPlayerFavoritesData) {\n  allPlayers.forEach((trackNode) => {\n    const { dataset } = trackNode;\n    const { trackId } = dataset;\n    const id = Number(trackId);\n    const isFavorite = favorites.includes(id);\n    updateTrackFavoriteInDataset(trackNode, isFavorite);\n  });\n}\n\nfunction initTrackPlayerNodeControls(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const { trackId } = dataset;\n  const id = Number(trackId || '');\n  // Set controls' handlers\n  const controls = trackNode.querySelectorAll<HTMLElement>('.track-control');\n  controls.forEach((node) => {\n    const { dataset } = node;\n    const { inited, controlId } = dataset;\n    if (inited) {\n      return;\n    }\n    if (controlId === 'toggleFavorite') {\n      node.addEventListener('click', () => floatingPlayer.toggleFavoriteById(id));\n    }\n    if (controlId === 'play') {\n      node.addEventListener('click', trackPlayHandler);\n    }\n    dataset.inited = TRUE;\n  });\n  dataset.inited = TRUE;\n}\n\nfunction initTrackPlayerNode(trackNode: HTMLElement) {\n  const activePlayerData = floatingPlayer.activePlayerData;\n  const { dataset } = trackNode;\n  const {\n    inited,\n    trackId, // \"1\"\n    trackMediaUrl, // \"/media/samples/gr-400x225.jpg\"\n    trackTitle,\n    trackDuration,\n    // favorite,\n    favoritedAtSec,\n    // favoritedAtDate, // DEBUG\n    playedAtSec,\n    // playedAtDate, // DEBUG\n    // userPlayedCount,\n    position: positionStr,\n    // updatedAtSec,\n    // updatedAtDate,\n  } = dataset;\n  const position = positionStr ? parseFloat(positionStr.replace(',', '.')) : 0;\n  const duration = trackDuration ? parseFloat(trackDuration.replace(',', '.')) : 0;\n  const playedAt = isNaN(Number(playedAtSec)) ? undefined : Number(playedAtSec) * 1000;\n  const favoritedAt = isNaN(Number(favoritedAtSec)) ? undefined : Number(favoritedAtSec) * 1000;\n  // const updatedAt = isNaN(Number(updatedAtSec)) ? undefined : Number(updatedAtSec) * 1000;\n  const id = Number(trackId || '');\n  if (!id || inited || !trackMediaUrl) {\n    return;\n  }\n  const hasServerData = window.isAuthenticated;\n  const isCurrent = !!activePlayerData && activePlayerData.id == id;\n  const trackInfo: TrackInfo | undefined = localTrackInfoDb.getById(id);\n  const favorite = hasServerData ? Boolean(dataset.favorite) : !!trackInfo?.favorite;\n  if (trackInfo) {\n    if (!hasServerData) {\n      // If no server data then update favorite from the local db\n      if (favorite) {\n        updateTrackFavoriteInDataset(trackNode, trackInfo.favorite);\n      }\n    } else {\n      const lastPlayed = trackInfo.lastPlayed;\n      // const lastPlayedDate = new Date(lastPlayed); // DEBUG\n      const lastFavorited = trackInfo.lastFavorited;\n      // Merge server & local data\n      if (dataset.favorite != null && favoritedAt && favoritedAt >= lastFavorited) {\n        trackInfo.favorite = Boolean(dataset.favorite);\n        trackInfo.lastFavorited = favoritedAt;\n        localTrackInfoDb.updateFavorite(id, Boolean(dataset.favorite), favoritedAt);\n      }\n      // const playedAtDate = playedAt && new Date(playedAt); // DEBUG\n      if (playedAt && playedAt >= lastPlayed) {\n        trackInfo.position = position;\n        trackInfo.lastPlayed = playedAt;\n        localTrackInfoDb.updatePosition(id, position, playedAt);\n      }\n    }\n    calculateAndUpdateTrackPosition(\n      trackNode,\n      trackInfo.position || 0,\n      trackInfo.lastPlayed,\n      isCurrent,\n    );\n    const playedCount = Number(\n      trackNode.querySelector<HTMLElement>('.track-played-count')?.dataset.playedCount || '0',\n    );\n    const hasChangedData = playedCount !== trackInfo.playedCount || favorite !== trackInfo.favorite;\n    if (hasChangedData) {\n      trackInfo.playedCount = playedCount;\n      trackInfo.favorite = favorite;\n      localTrackInfoDb.save(trackInfo);\n    }\n  }\n  if (isCurrent) {\n    activePlayerData.title = dataset.trackTitle || '';\n    activePlayerData.mediaUrl = trackMediaUrl;\n    currentTrackPlayer = trackNode;\n    const img = trackNode.querySelector('.thumb-preview img');\n    const imgUrl = img?.getAttribute('src');\n    if (imgUrl) {\n      activePlayerData.imageUrl = imgUrl;\n    }\n    activePlayerData.duration = duration;\n    activePlayerData.favorite = favorite;\n    if (trackTitle) {\n      activePlayerData.title = trackTitle;\n    }\n    requestAnimationFrame(() => {\n      trackNode.classList.toggle('current', true);\n    });\n    floatingPlayerUpdate({ floatingPlayerState: floatingPlayer.state, activePlayerData });\n    floatingPlayer.saveActivePlayerData();\n  }\n  initTrackPlayerNodeControls(trackNode);\n}\n\nexport function initTracksPlayerWrapper(domNode: HTMLElement = document.body) {\n  allPlayers = domNode.querySelectorAll<HTMLElement>('.track-player[data-track-media-url]');\n  allPlayers.forEach(initTrackPlayerNode);\n  floatingPlayer.callbacks.addPlayStartCallback(floatingPlayerPlay);\n  floatingPlayer.callbacks.addPlayStopCallback(floatingPlayerStop);\n  floatingPlayer.callbacks.addUpdateCallback(floatingPlayerUpdate);\n  floatingPlayer.callbacks.addIncrementCallback(updateIncrementCallback);\n  floatingPlayer.callbacks.addFavoritesCallback(updateFavoritesCallback);\n  floatingPlayer.callbacks.addFavoriteCallback(updateSingleFavoriteCallback);\n  floatingPlayer.tracksLoaded();\n}\n","import { ActivePlayerData } from '../ActivePlayerData/ActivePlayerData';\nimport { FloatingPlayerState } from './FloatingPlayerState';\n\nexport interface FloatingPlayerUpdateData {\n  floatingPlayerState: FloatingPlayerState;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerIncrementData {\n  count?: number;\n  activePlayerData: ActivePlayerData;\n}\nexport interface FloatingPlayerFavoritesData {\n  favorites: number[];\n}\nexport interface FloatingPlayerFavoriteData {\n  id: number;\n  favorite: boolean;\n}\ntype UpdateCallback = (data: FloatingPlayerUpdateData) => void;\ntype IncrementCallback = (data: FloatingPlayerIncrementData) => void;\ntype FavoritesCallback = (data: FloatingPlayerFavoritesData) => void;\ntype FavoriteCallback = (data: FloatingPlayerFavoriteData) => void;\ntype ErrorCallback = (error: Error | string) => void;\n\nexport class FloatingPlayerCallbacks {\n  onPlayStartCallbacks: UpdateCallback[] = [];\n  onPlayStopCallbacks: UpdateCallback[] = [];\n  onUpdateCallbacks: UpdateCallback[] = [];\n  onIncrementCallbacks: IncrementCallback[] = [];\n  onFavoritesCallbacks: FavoritesCallback[] = [];\n  onFavoriteCallbacks: FavoriteCallback[] = [];\n  onErrorCallbacks: ErrorCallback[] = [];\n\n  addPlayStartCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStartCallbacks.includes(cb)) {\n      this.onPlayStartCallbacks.push(cb);\n    }\n  }\n\n  addPlayStopCallback(cb: UpdateCallback) {\n    if (cb && !this.onPlayStopCallbacks.includes(cb)) {\n      this.onPlayStopCallbacks.push(cb);\n    }\n  }\n\n  addUpdateCallback(cb: UpdateCallback) {\n    if (cb && !this.onUpdateCallbacks.includes(cb)) {\n      this.onUpdateCallbacks.push(cb);\n    }\n  }\n\n  addIncrementCallback(cb: IncrementCallback) {\n    if (cb && !this.onIncrementCallbacks.includes(cb)) {\n      this.onIncrementCallbacks.push(cb);\n    }\n  }\n\n  addFavoriteCallback(cb: FavoriteCallback) {\n    if (cb && !this.onFavoriteCallbacks.includes(cb)) {\n      this.onFavoriteCallbacks.push(cb);\n    }\n  }\n\n  addFavoritesCallback(cb: FavoritesCallback) {\n    if (cb && !this.onFavoritesCallbacks.includes(cb)) {\n      this.onFavoritesCallbacks.push(cb);\n    }\n  }\n\n  addErrorCallback(cb: ErrorCallback) {\n    if (cb && !this.onErrorCallbacks.includes(cb)) {\n      this.onErrorCallbacks.push(cb);\n    }\n  }\n\n  // Invokers\n\n  invokePlayStart(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStartCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokePlayStop(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onPlayStopCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeUpdate(data: FloatingPlayerUpdateData) {\n    if (data.activePlayerData) {\n      this.onUpdateCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeIncrement(data: FloatingPlayerIncrementData) {\n    if (data.activePlayerData) {\n      this.onIncrementCallbacks.forEach((cb) => {\n        cb(data);\n      });\n    }\n  }\n\n  invokeFavorite(data: FloatingPlayerFavoriteData) {\n    this.onFavoriteCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeFavorites(data: FloatingPlayerFavoritesData) {\n    this.onFavoritesCallbacks.forEach((cb) => {\n      cb(data);\n    });\n  }\n\n  invokeError(error: Error | string) {\n    if (error) {\n      this.onErrorCallbacks.forEach((cb) => {\n        cb(error);\n      });\n    }\n  }\n}\n","import { getJsText } from '../../helpers/getJsText';\nimport { commonNotify } from '../../CommonNotify/CommonNotifySingleton';\nimport { formatDuration, getErrorText } from '../../helpers/CommonHelpers';\nimport { localTrackInfoDb } from '../../track-blocks/localTrackInfoDb';\n\nimport {\n  ActivePlayerData,\n  loadActivePlayerData,\n  saveActivePlayerData,\n} from '../ActivePlayerData/ActivePlayerData';\nimport { getActivePlayerDataFromTrackNode } from '../ActivePlayerData/getActivePlayerDataFromTrackNode';\nimport { sendApiRequest } from '../../helpers/sendApiRequest';\nimport { floatToStr } from '../../helpers/floatToStr';\nimport {\n  FloatingPlayerState,\n  loadFloatingPlayerState,\n  saveFloatingPlayerState,\n} from './FloatingPlayerState';\n\nimport { HiddenPlayer } from './HiddenPlayer';\nimport { FloatingPlayerCallbacks } from './FloatingPlayerCallbacks';\n\n// TODO: Update track title on the language change?\n\nconst TRUE = 'true';\n\n/** A value of forward/backward seek step */\nconst seekTimeSec = 1;\n\nconst useDebugDelay = true;\n\n/** Delay between server playback position update, msec */\nconst updateServerPlaybackDelay = useDebugDelay && window.DEBUG ? 1000 : 10 * 1000;\n\nexport class FloatingPlayer {\n  inited = false;\n  callbacks = new FloatingPlayerCallbacks();\n  audio?: HTMLAudioElement;\n  hiddenPlayer: HiddenPlayer = new HiddenPlayer();\n  activePlayerData?: ActivePlayerData;\n  state: FloatingPlayerState = {};\n  domNode?: HTMLElement | null;\n  incrementing?: boolean;\n  toggling: Record<number, boolean> = {};\n  seeking = false;\n\n  /** Last updated server playback position timestamp, msec, see updateServerPlaybackDelay */\n  lastUpdatedServerPlayback: number = 0;\n  isUpdatingServerPlayback: boolean = false;\n\n  constructor() {\n    this.loadActivePlayerData();\n    this.loadFloatingPlayerState();\n    this.initDomNode();\n    this.updateAll();\n  }\n\n  tracksLoaded() {\n    // Check if it was recently playing...\n    const now = Date.now();\n    if (this.activePlayerData) {\n      this.ensureAudioLoaded();\n      if (\n        this.state.status === 'playing' &&\n        this.state.lastTimestamp &&\n        this.state.lastTimestamp > now - 5000\n      ) {\n        // Then resume playback...\n        this.playCurrentPlayer();\n        // TODO: Care about: `Uncaught (in promise) NotAllowedError: play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD`\n      } else {\n        // Reset the status\n        delete this.state.status;\n      }\n    }\n  }\n\n  requireAudio() {\n    if (!this.audio) {\n      this.audio = this.hiddenPlayer.ensureHiddenPlayerAudio();\n      this.audio.addEventListener('canplay', this.handleAudioCanPlay.bind(this));\n      this.audio.addEventListener('playing', this.handleAudioPlay.bind(this));\n      this.audio.addEventListener('timeupdate', this.handleAudioTimeUpdate.bind(this));\n      this.audio.addEventListener('ended', this.handleAudioEnded.bind(this));\n      // source.addEventListener('error', this.handleAudioSourceError.bind(this));\n    }\n    return this.audio;\n  }\n\n  removeAudio() {\n    this.hiddenPlayer.removeHiddenPlayerAudio();\n    this.audio = undefined;\n  }\n\n  hasAudio() {\n    return !!this.audio;\n  }\n\n  hasAudioSource() {\n    return this.hiddenPlayer.hasSource();\n  }\n\n  requireDomNode() {\n    if (!this.domNode) {\n      this.domNode = document.querySelector<HTMLElement>('.floating-player');\n      this.hiddenPlayer.setParentDomNode(this.domNode!);\n    }\n    // TODO: Ensure created dom node?\n    if (!this.domNode) {\n      const error = new Error('No floating player node found');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireDomNode]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.domNode;\n  }\n\n  requireActivePlayerData() {\n    // TODO: Ensure data?\n    if (!this.activePlayerData) {\n      const error = new Error('No active player data set');\n      // eslint-disable-next-line no-console\n      console.error('[FloatingPlayerClass:requireActivePlayerData]', error.message, {\n        error,\n      });\n      debugger; // eslint-disable-line no-debugger\n      throw error;\n    }\n    return this.activePlayerData;\n  }\n\n  // Sync persistent data...\n\n  loadActivePlayerData() {\n    this.activePlayerData = loadActivePlayerData();\n  }\n\n  saveActivePlayerData() {\n    saveActivePlayerData(this.activePlayerData);\n  }\n\n  clearActivePlayerData() {\n    this.activePlayerData = undefined;\n    this.saveActivePlayerData();\n  }\n\n  loadFloatingPlayerState() {\n    this.state = loadFloatingPlayerState();\n  }\n\n  saveFloatingPlayerState() {\n    saveFloatingPlayerState(this.state);\n  }\n\n  clearFloatingPlayerState() {\n    this.state = {};\n    this.saveFloatingPlayerState();\n  }\n\n  // Dom node...\n\n  showFloatingPlayer() {\n    this.state.visible = true;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  hideFloatingPlayer() {\n    this.state.visible = false;\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n  }\n\n  // Updaters...\n\n  updateActivePlayerDataInDom() {\n    const domNode = this.requireDomNode();\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    const titleNode = domNode.querySelector<HTMLElement>('.title');\n    const durationNode = domNode.querySelector<HTMLElement>('.duration');\n    const imageNode = domNode.querySelector<HTMLElement>('.image');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      titleNode!.innerText = activePlayerData.title;\n      durationNode!.innerText = formatDuration(Math.floor(activePlayerData.duration * 1000));\n      imageNode!.style.backgroundImage = 'url(' + activePlayerData.imageUrl + ')';\n      if (activePlayerData.favorite) {\n        dataset.favorite = TRUE;\n      } else {\n        delete dataset.favorite;\n      }\n      const links = domNode.querySelectorAll<HTMLLinkElement>('.trackLink');\n      links.forEach((it) => {\n        it.setAttribute('href', `/tracks/${id}/`);\n      });\n    });\n  }\n\n  updateStateInDom() {\n    const domNode = this.requireDomNode();\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      if (this.state.status) {\n        dataset.status = this.state.status;\n      } else {\n        delete dataset.status;\n      }\n      document.body.classList.toggle('with-player', !!this.state.visible);\n    });\n  }\n\n  updatePositionInDom() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    const { dataset } = domNode;\n    requestAnimationFrame(() => {\n      dataset.position = floatToStr(this.state.position);\n      dataset.progress = floatToStr(this.state.progress);\n      domNode.style.setProperty('--progress', dataset.progress);\n      seekBarNode!.value = dataset.progress;\n    });\n  }\n\n  calculateProgress() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id, duration } = activePlayerData;\n    if (!duration) {\n      const error = new Error(`No duration provided for a track: ${id}`);\n      // eslint-disable-next-line no-console\n      console.warn('[FloatingPlayerClass:calculateProgress]', error.message, {\n        error,\n        id,\n        duration,\n        position,\n        activePlayerData,\n      });\n      debugger; // eslint-disable-line no-debugger\n      // throw error;\n      return 0;\n    }\n    const ratio = position / duration;\n    const progress = Math.min(100, ratio * 100);\n    return progress;\n  }\n\n  updateTrackPosition(onInit: boolean = false) {\n    const domNode = this.requireDomNode();\n    const timeNode = domNode.querySelector<HTMLElement>('.time');\n    const activePlayerData = this.requireActivePlayerData();\n    const { position = 0 } = this.state;\n    const { id } = activePlayerData;\n    const progress = this.calculateProgress();\n    this.state.progress = progress;\n    this.updatePositionInDom();\n    if (timeNode) {\n      requestAnimationFrame(() => {\n        timeNode.innerText = formatDuration(Math.floor(position * 1000));\n      });\n    }\n    if (!onInit) {\n      localTrackInfoDb.updatePosition(id, position);\n    }\n  }\n\n  updateAll() {\n    if (this.activePlayerData) {\n      this.updateTrackPosition(true);\n    }\n    this.updateStateInDom();\n    this.updatePositionInDom();\n    if (this.activePlayerData) {\n      this.updateActivePlayerDataInDom();\n    }\n  }\n\n  // Audio handlers...\n\n  handleAudioTimeUpdate(ev: Event) {\n    if (this.seeking) {\n      return;\n    }\n    const currAudio = this.audio;\n    const audio = ev.currentTarget as HTMLAudioElement;\n    if (audio !== currAudio) {\n      return;\n    }\n    const activePlayerData = this.requireActivePlayerData();\n    const { currentTime } = audio;\n    // TODO: Check loaded status?\n    if (this.state.position != currentTime) {\n      this.state.position = currentTime;\n      this.updateTrackPosition();\n      this.saveFloatingPlayerState();\n      this.updateServerPlayback();\n      this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n      localTrackInfoDb.updatePosition(activePlayerData.id, currentTime);\n    }\n  }\n\n  handleAudioCanPlay(_ev: Event) {\n    if (!this.state.loaded) {\n      this.state.loaded = true;\n      delete this.state.error;\n    }\n  }\n\n  handleAudioPlay(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.status = 'playing';\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.updateServerPlayback();\n    this.callbacks.invokePlayStart({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleAudioEnded(_ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    this.incrementPlayedCount();\n    this.state.status = 'paused'; // stopped, ready?\n    this.updateStateInDom();\n    this.saveFloatingPlayerState();\n    this.updateServerPlayback(true);\n    this.callbacks.invokePlayStop({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n  }\n\n  handleError(err: Error | string) {\n    const errName = err instanceof Error && err.name;\n    // eslint-disable-next-line no-console\n    console.error('[FloatingPlayerClass:handleError]', {\n      err,\n    });\n    if (errName === 'AbortError') {\n      // NOTE: Do nothing on abort\n      return;\n    }\n    debugger; // eslint-disable-line no-debugger\n    this.state.error = getErrorText(err);\n    this.updateStateInDom();\n    commonNotify.showError(err);\n    this.callbacks.invokeError(err);\n  }\n\n  handleAudioSourceError(ev: Event) {\n    const srcElement = ev.currentTarget as HTMLSourceElement;\n    const { src, type } = srcElement;\n    const errMsg = getJsText('errorLoadingAudioFile') + ' ' + src + (type ? `(${type})` : '');\n    const error = new Error(errMsg);\n    this.handleError(error);\n  }\n\n  /// Server playback state\n\n  sendUpdateServerPlayback(id: number, position: number, timestamp?: number) {\n    const url = `/api/v1/tracks/${id}/update-position/`;\n    const data = {\n      position: Number(position.toFixed(3)),\n      timestamp_s: timestamp ? Math.round(timestamp / 1000) : null,\n    };\n    return sendApiRequest(url, 'POST', data);\n  }\n\n  resetUpdateServerPlayback() {\n    const now = Date.now();\n    this.lastUpdatedServerPlayback = now;\n    this.isUpdatingServerPlayback = false;\n  }\n\n  async updateServerPlayback(force: boolean = false) {\n    // Do nothing if there isn't authenticated user, or the component hasn't been initialized, or no player data, or still updating right now\n    if (\n      !window.isAuthenticated ||\n      !this.inited ||\n      !this.activePlayerData ||\n      this.isUpdatingServerPlayback\n    ) {\n      return;\n    }\n    const { id } = this.activePlayerData;\n    const { position } = this.state;\n    if (id == null || position == null) {\n      return;\n    }\n    // Check if it's enough time passed\n    const now = Date.now();\n    const diff = now - this.lastUpdatedServerPlayback;\n    if (!force && diff < updateServerPlaybackDelay) {\n      return;\n    }\n    // Send update request\n    this.isUpdatingServerPlayback = true;\n    return this.sendUpdateServerPlayback(id, position, this.state.lastTimestamp)\n      .then((_userTrack: UserTrack) => {\n        // TODO: To update local data from server-provided UserTrack?\n        this.lastUpdatedServerPlayback = now;\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('[FloatingPlayerClass:handleAudioTimeUpdate] request error', {\n          err,\n        });\n        debugger; // eslint-disable-line no-debugger\n        commonNotify.showError(err);\n        throw err;\n      })\n      .finally(() => {\n        this.isUpdatingServerPlayback = false;\n      });\n  }\n\n  /// Active player data\n\n  getActiveTrackId(): number | undefined {\n    return this.activePlayerData ? this.activePlayerData.id : undefined;\n  }\n\n  // Core handlers...\n\n  loadAudio() {\n    const activePlayerData = this.requireActivePlayerData();\n    this.state.loaded = false;\n    const source = this.hiddenPlayer.createHiddenPlayerSource({ src: activePlayerData.mediaUrl });\n    source.addEventListener('error', this.handleAudioSourceError.bind(this));\n  }\n\n  isAudioPlaying() {\n    const audio = this.audio;\n    return (\n      !!audio && audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > 2\n    );\n  }\n\n  isPlaying() {\n    return this.state.status === 'playing';\n  }\n\n  pauseCurrentPlayer() {\n    if (this.isAudioPlaying()) {\n      const audio = this.requireAudio();\n      audio.pause();\n    }\n    if (this.isPlaying()) {\n      this.state.status = 'paused';\n      this.updateStateInDom();\n      this.saveFloatingPlayerState();\n      this.updateServerPlayback(true);\n    }\n  }\n\n  playCurrentPlayer() {\n    const audio = this.requireAudio();\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.isAudioPlaying()) {\n      return;\n    }\n    if (\n      audio.ended ||\n      (this.state.position && this.state.position > activePlayerData.duration - 0.1)\n    ) {\n      // Start from the begining\n      this.state.position = 0;\n      audio.load();\n    }\n    this.updateTrackPosition();\n    this.updateServerPlayback(true);\n    this.callbacks.invokeUpdate({\n      floatingPlayerState: this.state,\n      activePlayerData,\n    });\n\n    const position = this.state.position || 0;\n    if (!position) {\n      audio.load();\n    }\n    audio.currentTime = position;\n    const result = audio.play();\n    result.catch((err) => {\n      if (err.name === 'NotAllowedError') {\n        //  play() failed because the user didn't interact with the document first. -> Just cancel\n        this.state.status = undefined;\n        this.updateStateInDom();\n      } else {\n        this.handleError(err);\n      }\n    });\n  }\n\n  /** Play button click handler */\n  trackPlayHandler(_ev: MouseEvent) {\n    const isPlaying = this.isPlaying();\n    if (isPlaying) {\n      this.pauseCurrentPlayer();\n    } else {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Active player track data...\n\n  ensureAudioLoaded() {\n    if (!this.state.loaded || !this.hasAudio() || !this.hasAudioSource) {\n      this.loadAudio();\n    }\n  }\n\n  setActivePlayerData(activePlayerData: ActivePlayerData, position?: number) {\n    if (this.activePlayerData?.id !== activePlayerData.id) {\n      if (this.activePlayerData && this.isPlaying()) {\n        this.pauseCurrentPlayer();\n      }\n      this.state.loaded = false;\n      if (position != null) {\n        this.state.position = position;\n      }\n      this.removeAudio();\n      this.activePlayerData = activePlayerData;\n    }\n    this.saveActivePlayerData();\n    this.updateActivePlayerDataInDom();\n    this.ensureAudioLoaded();\n  }\n\n  setActiveTrack(trackNode: HTMLElement, position?: number) {\n    const activePlayerData = getActivePlayerDataFromTrackNode(trackNode);\n    this.setActivePlayerData(activePlayerData, position);\n  }\n\n  clearActiveData() {\n    this.activePlayerData = undefined;\n    this.hideFloatingPlayer();\n    this.removeAudio();\n  }\n\n  // Update related data\n\n  sendIncrementPlayedCount(id: number, timestamp?: number) {\n    const url = `/api/v1/tracks/${id}/increment-played-count/`;\n    const data = {\n      timestamp_s: timestamp ? Math.round(timestamp / 1000) : null,\n    };\n    return sendApiRequest(url, 'POST', data);\n  }\n\n  incrementPlayedCount() {\n    const activePlayerData = this.requireActivePlayerData();\n    if (this.incrementing) {\n      return;\n    }\n    this.incrementing = true;\n    return this.sendIncrementPlayedCount(activePlayerData.id /* , this.state.lastTimestamp */)\n      .then(({ played_count }: { played_count?: number }) => {\n        if (played_count != null) {\n          // Re-update local data with server data...\n          this.callbacks.invokeIncrement({ count: played_count, activePlayerData });\n        }\n        // TODO: Update other instances of this track on the page (eg, in player, or in other track listings)?\n      })\n      .catch((err) => {\n        // eslint-disable-next-line no-console\n        console.error('[FloatingPlayerClass:incrementPlayedCount:sendIncrementPlayedCount] error', {\n          err,\n        });\n        debugger; // eslint-disable-line no-debugger\n        commonNotify.showError(err);\n        // Increment locally (?)\n        this.callbacks.invokeIncrement({ activePlayerData });\n        throw err;\n      })\n      .finally(() => {\n        this.incrementing = false;\n      });\n  }\n\n  sendToggleFavoriteRequest(id: number, value: boolean, timestamp?: number) {\n    const url = `/api/v1/tracks/${id}/toggle-favorite/`;\n    const data = {\n      value,\n      timestamp_s: timestamp ? Math.round(timestamp / 1000) : null,\n    };\n    return sendApiRequest(url, 'POST', data);\n  }\n\n  toggleFavorite() {\n    const activePlayerData = this.requireActivePlayerData();\n    const id = activePlayerData.id;\n    this.toggleFavoriteById(id);\n  }\n\n  toggleFavoriteById(id: number) {\n    if (this.toggling[id]) {\n      return;\n    }\n    const activePlayerData = this.activePlayerData;\n    const isCurrent = id === activePlayerData?.id;\n    const trackInfo = localTrackInfoDb.getById(id);\n    const expectedFavoriteValue = !trackInfo?.favorite;\n    localTrackInfoDb.updateFavorite(id, expectedFavoriteValue);\n    if (isCurrent) {\n      activePlayerData.favorite = expectedFavoriteValue;\n      this.updateActivePlayerDataInDom();\n      this.saveActivePlayerData();\n    }\n    this.callbacks.invokeFavorite({ id, favorite: expectedFavoriteValue });\n    if (window.isAuthenticated) {\n      this.toggling[id] = true;\n      this.sendToggleFavoriteRequest(id, expectedFavoriteValue, this.state.lastTimestamp)\n        .then((results: { favorite_track_ids: number[]; user_tracks: UserTrack[] }) => {\n          const { favorite_track_ids, user_tracks } = results;\n          const trackFavoritedTimes = user_tracks.reduce<Record<UserTrack['track_id'], number>>(\n            (result, userTrack) => {\n              const { track_id, favorited_at_sec } = userTrack;\n              if (track_id && favorited_at_sec) {\n                result[track_id] = favorited_at_sec * 1000; // ms\n              }\n              return result;\n            },\n            {},\n          );\n          localTrackInfoDb.updateFavoritesByTrackIds(favorite_track_ids, trackFavoritedTimes);\n          this.callbacks.invokeFavorites({\n            favorites: favorite_track_ids,\n          });\n          const msgId = expectedFavoriteValue\n            ? 'trackAddedToFavorites'\n            : 'trackRemovedFromFavorites';\n          commonNotify.showSuccess(getJsText(msgId));\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.error('[FloatingPlayerClass:toggleFavoriteById] error', {\n            err,\n          });\n          debugger; // eslint-disable-line no-debugger\n          commonNotify.showError(err);\n        })\n        .finally(() => {\n          this.toggling[id] = false;\n        });\n    }\n  }\n\n  seekPosition(position: number) {\n    this.seeking = true;\n    const audio = this.requireAudio();\n    audio.currentTime = position || 0;\n    this.state.position = position;\n    this.updateTrackPosition();\n    this.saveFloatingPlayerState();\n    this.updateServerPlayback();\n    const activePlayerData = this.requireActivePlayerData();\n    this.callbacks.invokeUpdate({ floatingPlayerState: this.state, activePlayerData });\n    setTimeout(() => {\n      this.seeking = false;\n    }, 150);\n  }\n\n  seekRewind() {\n    const position = Math.max(0, (this.state.position || 0) - seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekForward() {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    const position = Math.min(duration, (this.state.position || 0) + seekTimeSec);\n    this.seekPosition(position);\n  }\n\n  seekBarHandle(ev: Event) {\n    const activePlayerData = this.requireActivePlayerData();\n    const { duration } = activePlayerData;\n    if (!duration) {\n      return;\n    }\n    const node = ev.currentTarget as HTMLInputElement;\n    const value = Number(node.value);\n    const position = (value * duration) / 100;\n    this.seekPosition(position);\n    if (!this.isPlaying()) {\n      this.playCurrentPlayer();\n    }\n  }\n\n  // Initilization...\n\n  initDomNode() {\n    const domNode = this.requireDomNode();\n    const seekBarNode = domNode.querySelector<HTMLInputElement>('.seekBar');\n    if (seekBarNode) {\n      seekBarNode.addEventListener('input', this.seekBarHandle.bind(this));\n    }\n    const hideButton = domNode.querySelector<HTMLButtonElement>('.track-control-hide');\n    if (hideButton) {\n      hideButton.addEventListener('click', this.hideFloatingPlayer.bind(this));\n    }\n    const controls = domNode.querySelectorAll<HTMLButtonElement>('.track-control');\n    controls.forEach((node) => {\n      const { dataset } = node;\n      const { inited, controlId } = dataset;\n      if (inited) {\n        return;\n      }\n      if (controlId === 'rewind') {\n        node.addEventListener('click', this.seekRewind.bind(this));\n      }\n      if (controlId === 'forward') {\n        node.addEventListener('click', this.seekForward.bind(this));\n      }\n      if (controlId === 'toggleFavorite') {\n        node.addEventListener('click', this.toggleFavorite.bind(this));\n      }\n      if (controlId === 'play') {\n        node.addEventListener('click', this.trackPlayHandler.bind(this));\n      }\n      dataset.inited = TRUE;\n    });\n    this.inited = true;\n  }\n}\n","import { ActivePlayerData } from './ActivePlayerData';\n\nexport function getActivePlayerDataFromTrackNode(trackNode: HTMLElement) {\n  const { dataset } = trackNode;\n  const id = Number(dataset.trackId);\n  const favorite = Boolean(dataset.favorite);\n  // const status = dataset.status;\n  const duration = parseFloat((dataset.trackDuration || '0').replace(',', '.'));\n  // const position = parseFloat((dataset.position || '0').replace(',', '.'));\n  const mediaUrl = dataset.trackMediaUrl || '';\n  const imageNode = trackNode.querySelector<HTMLImageElement>('img.card-img');\n  const imageUrl = imageNode?.getAttribute('src') || '';\n  const title = dataset.trackTitle || '';\n  const activePlayerData: ActivePlayerData = {\n    id,\n    title,\n    imageUrl,\n    mediaUrl,\n    duration,\n    favorite,\n  };\n  return activePlayerData;\n}\n","import { FloatingPlayer } from './FloatingPlayerClass';\n\n// Singleton\nexport const floatingPlayer = new FloatingPlayer();\n\nexport function initFloatingPlayer() {\n  // NOOP\n}\n","/** Get major and minor versions in form '1.2' from a string 'march-tales v.1.2.20 / 2025.02.20 15:22:00 +0300' */\nfunction getMinorVersionFromProjectInfo(info?: string | null) {\n  if (!info) {\n    return undefined;\n  }\n  try {\n    const match = info.match(/^\\S+ v\\.(\\d+\\.\\d+)/);\n    if (match) {\n      const v = match[1];\n      return v;\n    }\n  } catch (\n    _e // eslint-disable-line @typescript-eslint/no-unused-vars\n  ) {\n    // NOOP\n    return undefined;\n  }\n}\n\nexport function checkProjectVersion() {\n  const oldInfo = window.localStorage.getItem('projectInfo');\n  const newInfo = window.projectInfo;\n  if (newInfo && newInfo !== oldInfo) {\n    const oldVersion = getMinorVersionFromProjectInfo(oldInfo);\n    const newVersion = getMinorVersionFromProjectInfo(newInfo);\n    if (newVersion !== oldVersion) {\n      // TODO: To clear some stored data etc?\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[checkProjectVersion] Project version has changed',\n        newVersion,\n        '<->',\n        oldVersion,\n        {\n          oldInfo,\n          newInfo,\n          oldVersion,\n          newVersion,\n        },\n      );\n      // debugger; // eslint-disable-line no-debugger\n    }\n    window.localStorage.setItem('projectInfo', newInfo);\n  }\n}\n","function processLink(node: HTMLElement) {\n  if (!node.classList.contains('external')) {\n    node.classList.add('external');\n    node.setAttribute('target', '_blank');\n    const nodeIcon = document.createElement('span');\n    nodeIcon.classList.add('icon', 'icon-external', 'bi', 'bi-box-arrow-up-right');\n    node.appendChild(nodeIcon);\n  }\n}\n\nfunction processTextBlock(node: HTMLElement) {\n  // Find external links...\n  const linkNodes = node.querySelectorAll<HTMLLinkElement>('a[href^=\"https://\"]');\n  linkNodes.forEach(processLink);\n}\n\nexport function processTextContent() {\n  const textNodes = document.querySelectorAll<HTMLElement>('.text-content');\n  textNodes.forEach(processTextBlock);\n}\n","import { acceptedCookiesId } from '../constants/acceptedCookiesId';\nimport { deleteAllCookies, setCookie } from '../helpers/CommonHelpers';\n\nfunction updateBannerGeometry(bannerNode: HTMLElement) {\n  const footerNode = document.querySelector<HTMLElement>('.template-footer');\n  if (!bannerNode || !footerNode) {\n    return;\n  }\n  const bannerHeight = bannerNode.clientHeight;\n  footerNode.style.marginBottom = `${bannerHeight}px`;\n}\n\nfunction handleAccept(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = 'allowed';\n  window.localStorage.setItem('cookies', value);\n  setCookie(acceptedCookiesId, value);\n  hideBanner(bannerNode!);\n}\n\nfunction handleReject(event: Event) {\n  const buttonNode = event.currentTarget as HTMLButtonElement;\n  const bannerNode = buttonNode.closest<HTMLElement>('.cookies-banner');\n  const value = '';\n  window.localStorage.setItem(acceptedCookiesId, value);\n  deleteAllCookies();\n  setCookie(acceptedCookiesId, '');\n  hideBanner(bannerNode!);\n}\n\nfunction initActiveBanner(bannerNode: HTMLElement) {\n  const eventHandler = updateBannerGeometry.bind(bannerNode);\n  window.addEventListener('resize', eventHandler);\n  window.addEventListener('orientationchange', eventHandler);\n  updateBannerGeometry(bannerNode);\n  // Set button handlers...\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Accept')\n    ?.addEventListener('click', handleAccept);\n  bannerNode\n    .querySelector<HTMLButtonElement>('button#Reject')\n    ?.addEventListener('click', handleReject);\n}\n\nfunction hideBanner(bannerNode?: HTMLElement) {\n  if (bannerNode) {\n    bannerNode.remove();\n  }\n  document.body.classList.add('no-cookies-banner');\n}\n\nexport function initCookiesBanner() {\n  const bannerNode = document.querySelector<HTMLElement>('.cookies-banner');\n  if (!bannerNode) {\n    return;\n  }\n  const cookiesBannerStr = window.localStorage.getItem(acceptedCookiesId);\n  if (cookiesBannerStr == null) {\n    initActiveBanner(bannerNode);\n    return;\n  }\n  hideBanner(bannerNode);\n}\n","import { floatingPlayer } from './entities/FloatingPlayer/floatingPlayer';\nimport { TrackInfo } from './track-blocks/TrackInfo';\nimport { localTrackInfoDb } from './track-blocks/localTrackInfoDb';\n\nfunction onLogin() {\n  const trackInfos: TrackInfo[] = localTrackInfoDb.getAll();\n  console.log('[userSession:onLogin]', {\n    trackInfos,\n  });\n  debugger;\n  // TODO: Sync favorites and local tracks\n}\n\nfunction onLogout() {\n  console.log('[userSession:onLogout]');\n  // Clean favorites, local tracks\n  localTrackInfoDb.clearAll();\n  localTrackInfoDb.updateFavoritesByTrackIds([]);\n  floatingPlayer.clearActivePlayerData();\n  floatingPlayer.clearFloatingPlayerState();\n}\n\nexport function userSession() {\n  const bodyNode = document.body;\n  const isLogin = bodyNode.classList.contains('login_success');\n  const isLogout = bodyNode.classList.contains('logged_out');\n  if (isLogin) {\n    onLogin();\n  } else if (isLogout) {\n    onLogout();\n  }\n}\n","type CarouselSettings = JQuerySlickOptions; // Record<string, unknown>;\n\ninterface ResponsiveItem {\n  breakpoint: number;\n  settings: CarouselSettings;\n}\n\nconst defaultCarouselSettings: CarouselSettings = {\n  // @see https://kenwheeler.github.io/slick/\n\n  dots: true,\n  arrows: false,\n\n  lazyLoad: 'ondemand',\n\n  infinite: true,\n  speed: 1000,\n  slidesToShow: 4,\n  slidesToScroll: 1,\n\n  swipeToSlide: true,\n\n  autoplay: true,\n  autoplaySpeed: 2000,\n  pauseOnHover: true,\n\n  // focusOnSelect: true,\n  // variableWidth: true, // NOTE: It'll break `swipeToSlide` settings and require `no-caption` class to avoid broken cell' widts\n  // centerMode: true,\n  // centerPadding: '60px',\n};\n\nconst extraCarouselSettings: Record<string, CarouselSettings> = {\n  /* phoneScreenshotsWide: {\n   *   slidesToShow: 6,\n   *   responsive: [\n   *     {\n   *       breakpoint: 600,\n   *       settings: {\n   *         slidesToShow: 3,\n   *       },\n   *     },\n   *   ],\n   * },\n   */\n};\n\ninterface ResponsiveSeed {\n  width: number;\n  count: number;\n  step: number;\n}\n\nconst responsiveSeeds: Record<string, ResponsiveSeed> = {\n  phoneScreenshots: { width: 1200, count: 5, step: 200 },\n  phoneScreenshotsWide: { width: 1600, count: 8, step: 200 },\n  browserScreenshotsWide: { width: 1600, count: 3, step: 400 },\n};\n\nfunction seedResponsive(seed?: ResponsiveSeed) {\n  if (!seed) {\n    return undefined;\n  }\n  const { step } = seed;\n  let { width, count } = seed;\n  const responsives: ResponsiveItem[] = [];\n  const result: CarouselSettings = {\n    slidesToShow: count,\n    responsive: responsives,\n  };\n  while (count > 0 && width > 0) {\n    responsives.push({\n      breakpoint: width,\n      settings: {\n        slidesToShow: count,\n      },\n    });\n    width -= step;\n    count--;\n  }\n  return result;\n}\n\nfunction initCarousel(carousel: HTMLElement) {\n  const type = carousel.getAttribute('data-carousel-type');\n  const extraSettings = type ? extraCarouselSettings[type] : undefined;\n  const seedSettings = type ? seedResponsive(responsiveSeeds[type]) : undefined;\n  const settings = {\n    ...defaultCarouselSettings,\n    ...extraSettings,\n    ...seedSettings,\n  };\n  $(carousel).slick(settings);\n}\n\nexport function initCarousels() {\n  const carousels = $('.slick-carousel');\n  if ('IntersectionObserver' in window) {\n    // IntersectionObserver Supported\n    const onChange = (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => {\n      entries.forEach((element) => {\n        if (element.isIntersecting) {\n          // Stop watching and load the slickSlider\n          initCarousel(element.target as HTMLElement);\n          observer.unobserve(element.target);\n        }\n      });\n    };\n    const observer = new IntersectionObserver(onChange, {\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#creating_an_intersection_observer\n      root: null,\n      rootMargin: '50%',\n      threshold: 0.0,\n    });\n    carousels.map((_idx: number, carousel: HTMLElement) => {\n      observer.observe(carousel);\n    });\n  } else {\n    // IntersectionObserver NOT Supported\n    carousels.map((_idx: number, carousel: HTMLElement) => initCarousel(carousel));\n  }\n}\n","/**\n * @desc Main entry point module (scripts)\n * @module src/assets/index.ts\n * @changed 2025.04.12, 23:23\n */\n\nimport { userSession } from './userSession';\nimport { checkProjectVersion } from './checkProjectVersion';\nimport { initTracksPlayerWrapper } from './track-blocks/tracksPlayer';\nimport { initFloatingPlayer } from './entities/FloatingPlayer/floatingPlayer';\nimport { processTextContent } from './processTextContent';\nimport { initCookiesBanner } from './cookies-banner/cookiesBanner';\nimport { initCarousels } from './carousel/carousels';\nimport { initAOS } from './aos';\n\ninitCookiesBanner();\nprocessTextContent();\ncheckProjectVersion();\nuserSession();\n\ninitTracksPlayerWrapper();\ninitFloatingPlayer();\n\ninitCarousels();\ninitAOS();\n","export function initAOS() {\n  // @see static/libs/aos/\n  // @see https://michalsnik.github.io/aos/\n  if (window.AOS /* && !window.DEBUG */) {\n    window.AOS.init({\n      // @see https://github.com/michalsnik/aos?tab=readme-ov-file#1-initialize-aos\n      once: true,\n    });\n  }\n}\n"],"names":["getErrorText","error","Array","isArray","map","this","bind","join","Error","message","String","quoteHtmlAttr","str","preserveCR","crValue","replace","formatDuration","time","sec","min","hrs","items","Math","floor","val","idx","padStart","shift","filter","Boolean","setCookie","id","maxAgeSecs","parts","encodeURIComponent","push","fullCookie","document","cookie","getJsText","textNode","body","querySelector","console","warn","innerHTML","trim","icons","success","info","commonNotify","timeoutDelay","inited","removeNotify","notifyData","node","handler","classList","remove","clearTimeout","undefined","setTimeout","notifyRoot","removeChild","_e","showNotify","mode","text","content","ensureInit","createElement","add","nodeIcon","appendChild","nodeText","window","requestAnimationFrame","removeNotifyHandler","addEventListener","showInfo","showSuccess","showWarn","showError","showDemo","init","createDomNode","rootNode","setAttribute","floatToStr","num","isNaN","Number","toFixed","packDelim","finalPackDelimReg","RegExp","acceptedCookiesId","localTrackInfoDb","updatePlayedCount","playedCount","timestamp","now","Date","trackInfo","getOrCreate","lastPlayed","lastUpdated","insert","err","updatePosition","position","updateFavorite","favorite","lastFavorited","_toggleInFavoritesIndex","updateFavoritesByTrackIds","ids","favoritedTimes","_getIndex","forEach","isFavorite","includes","_setFavoritesIndex","save","createNewRecord","getById","round","trackInfoToJsonStr","localStorage","setItem","_addToIndex","getFavorites","getAll","it","getItem","list","split","trackInfoFromJsonStr","_getFavoritesIndex","n","_","favoritesIndex","favoritesCount","length","hasFavorites","toggle","querySelectorAll","innerText","_addToFavoritesIndex","_removeFromFavoritesIndex","checkId","value","v","_setIndex","index","_removeFromIndex","_toggleInIndex","delete","removeItem","clearAll","storageActivePlayerDataId","saveActivePlayerData","data","JSON","stringify","convertActivePlayerDataToJsonStr","loadActivePlayerData","raw","parse","title","imageUrl","mediaUrl","duration","convertActivePlayerDataFromJsonStr","sendApiRequest","url","method","requestData","headers","Accept","cookieId","cookiesList","i","s","decodeURIComponent","getCookie","fetch","credentials","then","res","ok","status","statusText","json","errMsg","detail","catch","storageFloatingPlayerStateId","saveFloatingPlayerState","lastTimestamp","visible","progress","convertFloatingPlayerStateToJsonStr","loadFloatingPlayerState","convertFloatingPlayerStateFromJsonStr","allPlayers","setParentDomNode","parentDomNode","requireParentDomNode","ensureHiddenPlayer","hiddenPlayerNode","audio","hasAudio","audioNode","hasSource","sourceNode","ensureHiddenPlayerAudio","createHiddenPlayerSource","opts","removeHiddenPlayerSource","type","src","removeHiddenPlayerAudio","pause","from","getElementsByTagName","onPlayStartCallbacks","onPlayStopCallbacks","onUpdateCallbacks","onIncrementCallbacks","onFavoritesCallbacks","onFavoriteCallbacks","onErrorCallbacks","addPlayStartCallback","cb","addPlayStopCallback","addUpdateCallback","addIncrementCallback","addFavoriteCallback","addFavoritesCallback","addErrorCallback","invokePlayStart","activePlayerData","invokePlayStop","invokeUpdate","invokeIncrement","invokeFavorite","invokeFavorites","invokeError","TRUE","updateServerPlaybackDelay","DEBUG","callbacks","FloatingPlayerCallbacks","hiddenPlayer","HiddenPlayer","state","toggling","seeking","lastUpdatedServerPlayback","isUpdatingServerPlayback","initDomNode","updateAll","tracksLoaded","ensureAudioLoaded","playCurrentPlayer","requireAudio","handleAudioCanPlay","handleAudioPlay","handleAudioTimeUpdate","handleAudioEnded","removeAudio","hasAudioSource","requireDomNode","domNode","requireActivePlayerData","clearActivePlayerData","clearFloatingPlayerState","showFloatingPlayer","updateStateInDom","hideFloatingPlayer","updateActivePlayerDataInDom","titleNode","durationNode","imageNode","dataset","style","backgroundImage","updatePositionInDom","seekBarNode","setProperty","calculateProgress","ratio","updateTrackPosition","onInit","timeNode","ev","currAudio","currentTarget","currentTime","updateServerPlayback","floatingPlayerState","_ev","loaded","incrementPlayedCount","handleError","errName","name","handleAudioSourceError","srcElement","sendUpdateServerPlayback","timestamp_s","resetUpdateServerPlayback","force","isAuthenticated","diff","_userTrack","finally","getActiveTrackId","loadAudio","isAudioPlaying","paused","ended","readyState","isPlaying","pauseCurrentPlayer","load","play","trackPlayHandler","setActivePlayerData","setActiveTrack","trackNode","trackId","parseFloat","trackDuration","trackMediaUrl","getAttribute","trackTitle","getActivePlayerDataFromTrackNode","clearActiveData","sendIncrementPlayedCount","incrementing","played_count","count","sendToggleFavoriteRequest","toggleFavorite","toggleFavoriteById","isCurrent","expectedFavoriteValue","results","favorite_track_ids","trackFavoritedTimes","reduce","result","userTrack","track_id","favorited_at_sec","favorites","msgId","seekPosition","seekRewind","max","seekForward","seekBarHandle","hideButton","controlId","floatingPlayer","FloatingPlayer","getMinorVersionFromProjectInfo","match","currentTrackPlayer","floatingPlayerUpdate","getTrackNode","timeFormatted","floatingPlayerPlay","floatingPlayerStop","tryToPlayNextTrack","nextIdx","indexOf","nextTrackNode","playTrackNode","find","updateIncrementCallback","updatedPlayedCount","strValue","valueNode","closest","updateTrackPlayedCount","stopPreviousPlayer","playingId","isFloatingPlaying","contains","updateTrackFavoriteInDataset","isCurrentFavorite","updateSingleFavoriteCallback","updateFavoritesCallback","initTrackPlayerNode","favoritedAtSec","playedAtSec","positionStr","playedAt","favoritedAt","hasServerData","calculateAndUpdateTrackPosition","img","imgUrl","initTrackPlayerNodeControls","processLink","processTextBlock","updateBannerGeometry","bannerNode","footerNode","bannerHeight","clientHeight","marginBottom","handleAccept","event","hideBanner","handleReject","eqPos","substring","bodyNode","isLogin","isLogout","defaultCarouselSettings","dots","arrows","lazyLoad","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","autoplay","autoplaySpeed","pauseOnHover","extraCarouselSettings","responsiveSeeds","phoneScreenshots","width","step","phoneScreenshotsWide","browserScreenshotsWide","initCarousel","carousel","extraSettings","seedSettings","seed","responsives","responsive","breakpoint","settings","seedResponsive","$","slick","eventHandler","initActiveBanner","oldInfo","newInfo","projectInfo","oldVersion","newVersion","checkProjectVersion","trackInfos","log","onLogin","carousels","IntersectionObserver","entries","observer","element","isIntersecting","target","unobserve","root","rootMargin","threshold","_idx","observe","initCarousels","AOS","once"],"sourceRoot":""}